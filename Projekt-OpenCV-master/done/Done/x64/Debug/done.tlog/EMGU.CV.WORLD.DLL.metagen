ImageRuntimeVersion: v2.0.50727
Assembly Emgu.CV.World, Version=3.1.0.2504, Culture=neutral, PublicKeyToken=7281126722ab4438: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class Emgu.Util.DisposableObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.Util.EventArgs`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :System.EventArgs
    Void .ctor(T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T Value    'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.Util.EventArgs`2[T1,T2]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  :System.EventArgs
    Void .ctor(T1, T2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T1 Value1  'get ' : 
    T2 Value2  'get ' : 
  Methods:
    get_Value1(): PrivateScope, Public, HideBySig, SpecialName
    get_Value2(): PrivateScope, Public, HideBySig, SpecialName
Interface Emgu.Util.ICodeGenerable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ToCode(ProgrammingLanguage): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Emgu.Util.IInterpolatable`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T,  DefaultConstructor
  Properties:
    Double InterpolationIndex 'get ' : 
  Methods:
    get_InterpolationIndex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    LinearInterpolate(T, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Emgu.Util.PinnedArray`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :Emgu.Util.DisposableObject
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T[] Array  'get ' : 
  Methods:
    AddrOfPinnedObject(): PrivateScope, Public, HideBySig
    get_Array(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.Util.Platform: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Properties:
    Emgu.Util.TypeEnum.OS OperationSystem 'get ' : 
    Emgu.Util.TypeEnum.ClrType ClrType 'get ' : 
  Methods:
    get_OperationSystem(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ClrType(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.Util.Toolbox: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    XmlSerialize(T): PrivateScope, Public, Static, HideBySig
    XmlSerialize(T, Type[]): PrivateScope, Public, Static, HideBySig
    XmlDeserialize(XDocument): PrivateScope, Public, Static, HideBySig
    XmlDeserialize(XDocument, Type[]): PrivateScope, Public, Static, HideBySig
    XmlStringDeserialize(String): PrivateScope, Public, Static, HideBySig
    SizeOf(): PrivateScope, Public, Static, HideBySig
    MergeBytes(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    ExecuteCmd(String, String): PrivateScope, Public, Static, HideBySig
    GetBaseType(Type, String): PrivateScope, Public, Static, HideBySig
    ToBytes(TData[]): PrivateScope, Public, Static, HideBySig
    LinearInterpolate(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    LinearSubsample(IEnumerable`1, Double): PrivateScope, Public, Static, HideBySig
    JoinInterpolatables(IEnumerable`1[]): PrivateScope, Public, Static, HideBySig
    LoadLibrary(String): PrivateScope, Public, Static, HideBySig
    FreeLibrary(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    SetDllDirectory(String): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Struct Emgu.Util.TypeEnum.OS: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.Util.TypeEnum.OS Windows = 0 : Public, Static, Literal, HasDefault
    Emgu.Util.TypeEnum.OS Linux = 1 : Public, Static, Literal, HasDefault
    Emgu.Util.TypeEnum.OS MacOSX = 2 : Public, Static, Literal, HasDefault
    Emgu.Util.TypeEnum.OS IOS = 3 : Public, Static, Literal, HasDefault
    Emgu.Util.TypeEnum.OS Android = 4 : Public, Static, Literal, HasDefault
    Emgu.Util.TypeEnum.OS WindowsPhone = 5 : Public, Static, Literal, HasDefault
Struct Emgu.Util.TypeEnum.ClrType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.Util.TypeEnum.ClrType DotNet = 0 : Public, Static, Literal, HasDefault
    Emgu.Util.TypeEnum.ClrType NetFxCore = 1 : Public, Static, Literal, HasDefault
    Emgu.Util.TypeEnum.ClrType Mono = 2 : Public, Static, Literal, HasDefault
Struct Emgu.Util.TypeEnum.ProgrammingLanguage: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.Util.TypeEnum.ProgrammingLanguage CSharp = 0 : Public, Static, Literal, HasDefault
    Emgu.Util.TypeEnum.ProgrammingLanguage CPlusPlus = 1 : Public, Static, Literal, HasDefault
Class Emgu.Util.UnmanagedObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.DisposableObject
  Properties:
    IntPtr Ptr 'get ' : 
  Methods:
    get_Ptr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    op_Implicit(UnmanagedObject): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Affine3d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Identity(): PrivateScope, Public, Static, HideBySig
    Rotate(Double, Double, Double): PrivateScope, Public, HideBySig
    Translate(Double, Double, Double): PrivateScope, Public, HideBySig
    GetValues(): PrivateScope, Public, HideBySig
Class Emgu.CV.CvInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Fields:
    CvErrorCallback CvErrorHandlerThrowException : Public, Static, InitOnly
    CvErrorCallback CvErrorHandlerIgnoreError : Public, Static, InitOnly
    System.Collections.Generic.List`1[System.String] OpenCVModuleList : Public, Static
    Emgu.CV.Structure.MCvScalar MorphologyDefaultBorderValue : Public, Static
    System.Runtime.InteropServices.UnmanagedType StringMarshalType = 20 : Public, Static, Literal, HasDefault
    System.Runtime.InteropServices.UnmanagedType BoolMarshalType = 4 : Public, Static, Literal, HasDefault
    System.Runtime.InteropServices.UnmanagedType BoolToIntMarshalType = 2 : Public, Static, Literal, HasDefault
    System.Runtime.InteropServices.CallingConvention CvCallingConvention = 2 : Public, Static, Literal, HasDefault
    System.String ExternLibrary = cvextern : Public, Static, Literal, HasDefault
    System.String ExternCudaLibrary = cvextern : Public, Static, Literal, HasDefault
    System.String OpencvFFMpegLibrary = opencv_ffmpeg310_64 : Public, Static, Literal, HasDefault
    System.String OpencvCoreLibrary = opencv_core310 : Public, Static, Literal, HasDefault
    System.String OpencvImgprocLibrary = opencv_imgproc310 : Public, Static, Literal, HasDefault
    System.String OpencvVideoLibrary = opencv_video310 : Public, Static, Literal, HasDefault
    System.String OpencvFlannLibrary = opencv_flann310 : Public, Static, Literal, HasDefault
    System.String OpencvMlLibrary = opencv_ml310 : Public, Static, Literal, HasDefault
    System.String OpencvImgcodecsLibrary = opencv_imgcodecs310 : Public, Static, Literal, HasDefault
    System.String OpencvVideoioLibrary = opencv_videoio310 : Public, Static, Literal, HasDefault
    System.String OpencvHighguiLibrary = opencv_highgui310 : Public, Static, Literal, HasDefault
    System.String OpencvObjdetectLibrary = opencv_objdetect310 : Public, Static, Literal, HasDefault
    System.String OpencvFeatures2dLibrary = opencv_features2d310 : Public, Static, Literal, HasDefault
    System.String OpencvCalib3dLibrary = opencv_calib3d310 : Public, Static, Literal, HasDefault
    System.String OpencvCudalegacyLibrary = opencv_cudalegacy310 : Public, Static, Literal, HasDefault
    System.String OpencvCudaarithmLibrary = opencv_cudaarithm310 : Public, Static, Literal, HasDefault
    System.String OpencvCudawarpingLibrary = opencv_cudawarping310 : Public, Static, Literal, HasDefault
    System.String OpencvCudafiltersLibrary = opencv_cudafilters310 : Public, Static, Literal, HasDefault
    System.String OpencvCudaimgprocLibrary = opencv_cudaimgproc310 : Public, Static, Literal, HasDefault
    System.String OpencvCudaoptflowLibrary = opencv_cudaoptflow310 : Public, Static, Literal, HasDefault
    System.String OpencvCudastereoLibrary = opencv_cudastereo310 : Public, Static, Literal, HasDefault
    System.String OpencvCudabgsegmLibrary = opencv_cudabgsegm310 : Public, Static, Literal, HasDefault
    System.String OpencvCudafeatures2dLibrary = opencv_cudafeatures2d310 : Public, Static, Literal, HasDefault
    System.String OpencvCudacodecLibrary = opencv_cudacodec310 : Public, Static, Literal, HasDefault
    System.String OpencvCudaobjdetectLibrary = opencv_cudaobjdetect310 : Public, Static, Literal, HasDefault
    System.String OpencvPhotoLibrary = opencv_photo310 : Public, Static, Literal, HasDefault
    System.String OpencvSuperresLibrary = opencv_superres310 : Public, Static, Literal, HasDefault
    System.String OpencvVideostabLibrary = opencv_videostab310 : Public, Static, Literal, HasDefault
    System.String OpencvShapeLibrary = opencv_shape310 : Public, Static, Literal, HasDefault
    System.String OpencvCudevLibrary = opencv_cudev310 : Public, Static, Literal, HasDefault
    System.String OpencvTextLibrary = opencv_text310 : Public, Static, Literal, HasDefault
    System.String OpencvFaceLibrary = opencv_face310 : Public, Static, Literal, HasDefault
    System.String OpencvXimgprocLibrary = opencv_ximgproc310 : Public, Static, Literal, HasDefault
    System.String OpencvXobjdetectLibrary = opencv_xobjdetect310 : Public, Static, Literal, HasDefault
    System.String OpencvXfeatures2dLibrary = opencv_xfeatures2d310 : Public, Static, Literal, HasDefault
    System.String OpencvXphotoLibrary = opencv_xphoto310 : Public, Static, Literal, HasDefault
    System.String OpencvBgsegmLibrary = opencv_bgsegm310 : Public, Static, Literal, HasDefault
    System.String OpencvOptflowLibrary = opencv_optflow310 : Public, Static, Literal, HasDefault
    System.String OpencvStitchingLibrary = opencv_stitching310 : Public, Static, Literal, HasDefault
    System.String OpencvLine_descriptorLibrary = opencv_line_descriptor310 : Public, Static, Literal, HasDefault
    System.String OpencvTrackingLibrary = opencv_tracking310 : Public, Static, Literal, HasDefault
    System.String OpencvPlotLibrary = opencv_plot310 : Public, Static, Literal, HasDefault
    System.String OpencvDnnLibrary = opencv_dnn310 : Public, Static, Literal, HasDefault
    System.String OpencvArucoLibrary = opencv_aruco310 : Public, Static, Literal, HasDefault
    System.String OpencvFuzzyLibrary = opencv_fuzzy310 : Public, Static, Literal, HasDefault
    System.String OpencvVizLibrary = opencv_viz310 : Public, Static, Literal, HasDefault
  Properties:
    Boolean UseOptimized 'get set' : 
    Boolean HaveOpenCL 'get ' : 
    Boolean UseOpenCL 'get set' : 
    Boolean HaveOpenCLCompatibleGpuDevice 'get ' : 
  Methods:
    ReadCloud(String, IOutputArray(Optional, HasDefault), IOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WriteCloud(String, IInputArray, IInputArray(Optional, HasDefault), IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SegmentMotion(IInputArray, IOutputArray, VectorOfRect, Double, Double): PrivateScope, Public, Static, HideBySig
    CalcGlobalOrientation(IInputArray, IInputArray, IInputArray, Double, Double): PrivateScope, Public, Static, HideBySig
    CalcOpticalFlowPyrLK(IInputArray, IInputArray, PointF[], Size, Int32, MCvTermCriteria, PointF[]&(Out), Byte[]&(Out), Single[]&(Out), LKFlowFlag(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcOpticalFlowPyrLK(IInputArray, IInputArray, IInputArray, IInputOutputArray, IOutputArray, IOutputArray, Size, Int32, MCvTermCriteria, LKFlowFlag(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcOpticalFlowFarneback(Image`2, Image`2, Image`2, Image`2, Double, Int32, Int32, Int32, Int32, Double, OpticalflowFarnebackFlag): PrivateScope, Public, Static, HideBySig
    CalcOpticalFlowFarneback(IInputArray, IInputArray, IInputOutputArray, Double, Int32, Int32, Int32, Int32, Double, OpticalflowFarnebackFlag): PrivateScope, Public, Static, HideBySig
    EstimateRigidTransform(PointF[], PointF[], Boolean): PrivateScope, Public, Static, HideBySig
    EstimateRigidTransform(IInputArray, IInputArray, Boolean): PrivateScope, Public, Static, HideBySig
    SolveLP(Mat, Mat, Mat): PrivateScope, Public, Static, HideBySig
    DenoiseTVL1(Mat[], Mat, Double, Int32): PrivateScope, Public, Static, HideBySig
    Inpaint(IInputArray, IInputArray, IOutputArray, Double, InpaintType): PrivateScope, Public, Static, HideBySig
    FastNlMeansDenoising(IInputArray, IOutputArray, Single(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FastNlMeansDenoisingColored(IInputArray, IOutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EdgePreservingFilter(IInputArray, IOutputArray, EdgePreservingFilterFlag(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DetailEnhance(IInputArray, IOutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PencilSketch(IInputArray, IOutputArray, IOutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Stylization(IInputArray, IOutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ColorChange(IInputArray, IInputArray, IOutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IlluminationChange(IInputArray, IInputArray, IOutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    TextureFlattening(IInputArray, IInputArray, IOutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Decolor(IInputArray, IOutputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    SeamlessClone(IInputArray, IInputArray, IInputArray, Point, IOutputArray, CloningMethod): PrivateScope, Public, Static, HideBySig
    CamShift(IInputArray, Rectangle&, MCvTermCriteria): PrivateScope, Public, Static, HideBySig
    MeanShift(IInputArray, Rectangle&, MCvTermCriteria): PrivateScope, Public, Static, HideBySig
    UpdateMotionHistory(IInputArray, IInputOutputArray, Double, Double): PrivateScope, Public, Static, HideBySig
    CalcMotionGradient(IInputArray, IOutputArray, IOutputArray, Double, Double, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CornerSubPix(IInputArray, IInputOutputArray, Size, Size, MCvTermCriteria): PrivateScope, Public, Static, HideBySig
    Integral(IInputArray, IOutputArray, IOutputArray(Optional, HasDefault), IOutputArray(Optional, HasDefault), DepthType(Optional, HasDefault), DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DistanceTransform(IInputArray, IOutputArray, IOutputArray, DistType, Int32, DistLabelType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FloodFill(IInputOutputArray, IInputOutputArray, Point, MCvScalar, Rectangle&(Out), MCvScalar, MCvScalar, Connectivity(Optional, HasDefault), FloodFillType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PyrMeanShiftFiltering(IInputArray, IOutputArray, Double, Double, Int32, MCvTermCriteria): PrivateScope, Public, Static, HideBySig
    ConvertMaps(IInputArray, IInputArray, IOutputArray, IOutputArray, DepthType, Int32, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Undistort(IInputArray, IOutputArray, IInputArray, IInputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    InitUndistortRectifyMap(IInputArray, IInputArray, IInputArray, IInputArray, Size, DepthType, IOutputArray, IOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    UndistortPoints(IInputArray, IOutputArray, IInputArray, IInputArray, IInputArray(Optional, HasDefault), IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EMD(IInputArray, IInputArray, DistType, IInputArray(Optional, HasDefault), Single[](Optional, HasDefault), IOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PhaseCorrelate(IInputArray, IInputArray, IInputArray, Double&(Out)): PrivateScope, Public, Static, HideBySig
    CreateHanningWindow(IOutputArray, Size, DepthType): PrivateScope, Public, Static, HideBySig
    Line(IInputOutputArray, Point, Point, MCvScalar, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ArrowedLine(IInputOutputArray, Point, Point, MCvScalar, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Polylines(IInputOutputArray, Point[], Boolean, MCvScalar, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Polylines(IInputOutputArray, IInputArray, Boolean, MCvScalar, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Rectangle(IInputOutputArray, Rectangle, MCvScalar, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConnectedComponents(IInputArray, IOutputArray, LineType(Optional, HasDefault), DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConnectedComponentsWithStats(IInputArray, IOutputArray, IOutputArray, IOutputArray, LineType(Optional, HasDefault), DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HoughLinesP(IInputArray, IOutputArray, Double, Double, Int32, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Moments(IInputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MatchTemplate(IInputArray, IInputArray, IOutputArray, TemplateMatchingType, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MatchShapes(IInputArray, IInputArray, ContoursMatchType, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetStructuringElement(ElementShape, Size, Point): PrivateScope, Public, Static, HideBySig
    MorphologyEx(IInputArray, IOutputArray, MorphOp, IInputArray, Point, Int32, BorderType, MCvScalar): PrivateScope, Public, Static, HideBySig
    EqualizeHist(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    CalcHist(IInputArrayOfArrays, Int32[], IInputArray, IOutputArray, Int32[], Single[], Boolean): PrivateScope, Public, Static, HideBySig
    CalcBackProject(IInputArrayOfArrays, Int32[], IInputArray, IOutputArray, Single[], Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CompareHist(IInputArray, IInputArray, HistogramCompMethod): PrivateScope, Public, Static, HideBySig
    cvGetSpatialMoment(MCvMoments&, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetCentralMoment(MCvMoments&, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetNormalizedCentralMoment(MCvMoments&, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    Accumulate(IInputArray, IInputOutputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    AccumulateSquare(IInputArray, IInputOutputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    AccumulateProduct(IInputArray, IInputArray, IInputOutputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    AccumulateWeighted(IInputArray, IInputOutputArray, Double, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HuMoments(MCvMoments, IOutputArray): PrivateScope, Public, Static, HideBySig
    CornerHarris(IInputArray, IOutputArray, Int32, Int32(Optional, HasDefault), Double(Optional, HasDefault), BorderType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IsContourConvex(IInputArray): PrivateScope, Public, Static, HideBySig
    PointPolygonTest(IInputArray, PointF, Boolean): PrivateScope, Public, Static, HideBySig
    ConvexityDefects(IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    MinAreaRect(PointF[]): PrivateScope, Public, Static, HideBySig
    MinAreaRect(IInputArray): PrivateScope, Public, Static, HideBySig
    MinEnclosingCircle(PointF[]): PrivateScope, Public, Static, HideBySig
    MinEnclosingCircle(IInputArray): PrivateScope, Public, Static, HideBySig
    MinEnclosingTriangle(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    ApproxPolyDP(IInputArray, IOutputArray, Double, Boolean): PrivateScope, Public, Static, HideBySig
    BoundingRectangle(IInputArray): PrivateScope, Public, Static, HideBySig
    ContourArea(IInputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ArcLength(IInputArray, Boolean): PrivateScope, Public, Static, HideBySig
    Threshold(IInputArray, IOutputArray, Double, Double, ThresholdType): PrivateScope, Public, Static, HideBySig
    AdaptiveThreshold(IInputArray, IOutputArray, Double, AdaptiveThresholdType, ThresholdType, Int32, Double): PrivateScope, Public, Static, HideBySig
    FindContours(IInputOutputArray, IOutputArray, IOutputArray, RetrType, ChainApproxMethod, Point(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindContourTree(IInputOutputArray, IOutputArray, ChainApproxMethod, Point(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    RawDataToBitmap(IntPtr, Int32, Size, Type, Int32, Type, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CvtColor(IInputArray, IOutputArray, Type, Type): PrivateScope, Public, Static, HideBySig
    CvtColor(IInputArray, IOutputArray, ColorConversion, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HoughCircles(IInputArray, IOutputArray, HoughType, Double, Double, Double(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HoughCircles(IInputArray, HoughType, Double, Double, Double(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HoughLines(IInputArray, IOutputArray, Double, Double, Int32, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HoughLinesP(IInputArray, Double, Double, Int32, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Watershed(IInputArray, IInputOutputArray): PrivateScope, Public, Static, HideBySig
    cvMaxRect(Rectangle, Rectangle): PrivateScope, Public, Static, HideBySig
    FitLine(IInputArray, IOutputArray, DistType, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    FitLine(PointF[], PointF&(Out), PointF&(Out), DistType, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    RotatedRectangleIntersection(RotatedRect, RotatedRect, IOutputArray): PrivateScope, Public, Static, HideBySig
    BoxPoints(RotatedRect): PrivateScope, Public, Static, HideBySig
    BoxPoints(RotatedRect, IOutputArray): PrivateScope, Public, Static, HideBySig
    FitEllipse(IInputArray): PrivateScope, Public, Static, HideBySig
    ConvexHull(PointF[], Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConvexHull(IInputArray, IOutputArray, Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Erode(IInputArray, IOutputArray, IInputArray, Point, Int32, BorderType, MCvScalar): PrivateScope, Public, Static, HideBySig
    Dilate(IInputArray, IOutputArray, IInputArray, Point, Int32, BorderType, MCvScalar): PrivateScope, Public, Static, HideBySig
    GaussianBlur(IInputArray, IOutputArray, Size, Double, Double(Optional, HasDefault), BorderType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Blur(IInputArray, IOutputArray, Size, Point, BorderType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MedianBlur(IInputArray, IOutputArray, Int32): PrivateScope, Public, Static, HideBySig
    BoxFilter(IInputArray, IOutputArray, DepthType, Size, Point, Boolean(Optional, HasDefault), BorderType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BilateralFilter(IInputArray, IOutputArray, Int32, Double, Double, BorderType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Sobel(IInputArray, IOutputArray, DepthType, Int32, Int32, Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), BorderType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Laplacian(IInputArray, IOutputArray, DepthType, Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), BorderType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Canny(IInputArray, IOutputArray, Double, Double, Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Imdecode(Byte[], ImreadModes, Mat): PrivateScope, Public, Static, HideBySig
    Imdecode(IInputArray, ImreadModes, Mat): PrivateScope, Public, Static, HideBySig
    Imencode(String, IInputArray, VectorOfByte, KeyValuePair`2[]): PrivateScope, Public, Static, HideBySig
    cvSampleLine(IntPtr, Point&, Point&, IntPtr, Connectivity): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetRectSubPix(IInputArray, Size, PointF, IOutputArray, DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Resize(IInputArray, IOutputArray, Size, Double(Optional, HasDefault), Double(Optional, HasDefault), Inter(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ResizeForFrame(IInputArray, IOutputArray, Size, Inter(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WarpAffine(IInputArray, IOutputArray, IInputArray, Size, Inter(Optional, HasDefault), Warp(Optional, HasDefault), BorderType(Optional, HasDefault), MCvScalar(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetAffineTransform(PointF[], PointF[]): PrivateScope, Public, Static, HideBySig
    GetAffineTransform(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    GetRotationMatrix2D(PointF, Double, Double, IOutputArray): PrivateScope, Public, Static, HideBySig
    WarpPerspective(IInputArray, IOutputArray, IInputArray, Size, Inter(Optional, HasDefault), Warp(Optional, HasDefault), BorderType(Optional, HasDefault), MCvScalar(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetPerspectiveTransform(IInputArray, IInputArray): PrivateScope, Public, Static, HideBySig
    GetPerspectiveTransform(PointF[], PointF[]): PrivateScope, Public, Static, HideBySig
    Remap(IInputArray, IOutputArray, IInputArray, IInputArray, Inter, BorderType(Optional, HasDefault), MCvScalar(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    InvertAffineTransform(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    GetDefaultNewCameraMatrix(IInputArray, Size(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LogPolar(IInputArray, IOutputArray, PointF, Double, Inter(Optional, HasDefault), Warp(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LinearPolar(IInputArray, IOutputArray, PointF, Double, Inter(Optional, HasDefault), Warp(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PyrDown(IInputArray, IOutputArray, BorderType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PyrUp(IInputArray, IOutputArray, BorderType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Sqrt(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    ApplyColorMap(IInputArray, IOutputArray, ColorMapType): PrivateScope, Public, Static, HideBySig
    CheckRange(IInputArray, Boolean, Point&, Double, Double): PrivateScope, Public, Static, HideBySig
    EstimateAffine3D(MCvPoint3D32f[], MCvPoint3D32f[], Matrix`1&(Out), Byte[]&(Out), Double, Double): PrivateScope, Public, Static, HideBySig
    EstimateAffine3D(IInputArray, IInputArray, IOutputArray, IOutputArray, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MinMaxIdx(IInputArray, Double&(Out), Double&(Out), Int32[], Int32[], IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Filter2D(IInputArray, IOutputArray, IInputArray, Point, Double(Optional, HasDefault), BorderType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CLAHE(IInputArray, Double, Size, IOutputArray): PrivateScope, Public, Static, HideBySig
    GetCvStructSizes(): PrivateScope, Public, Static, HideBySig
    FindCirclesGrid(Image`2, Size, CalibCgType, Feature2D): PrivateScope, Public, Static, HideBySig
    FindCirclesGrid(IInputArray, Size, IOutputArray, CalibCgType, Feature2D): PrivateScope, Public, Static, HideBySig
    NamedWindow(String, NamedWindowType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WaitKey(Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Imshow(String, IInputArray): PrivateScope, Public, Static, HideBySig
    DestroyWindow(String): PrivateScope, Public, Static, HideBySig
    DestroyAllWindows(): PrivateScope, Public, Static, HideBySig
    Imread(String, ImreadModes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Imreadmulti(String, ImreadModes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Imwrite(String, IInputArray, KeyValuePair`2[]): PrivateScope, Public, Static, HideBySig
    cvGetRawData(IntPtr, IntPtr&(Out), Int32&(Out), Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetMat(IntPtr, IntPtr, Int32&(Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetImage(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCheckArr(IntPtr, CheckType, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetNumThreads(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    SetNumThreads(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetThreadNum(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    Compare(IInputArray, IInputArray, IOutputArray, CmpType): PrivateScope, Public, Static, HideBySig
    CvArrToMat(IntPtr, Boolean(Optional, HasDefault), Boolean(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HConcat(IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    VConcat(IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    Swap(Mat, Mat): PrivateScope, Public, Static, HideBySig
    Swap(UMat, UMat): PrivateScope, Public, Static, HideBySig
    get_HaveOpenCL(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UseOpenCL(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_UseOpenCL(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    OclFinish(): PrivateScope, Public, Static, HideBySig
    OclGetPlatformsSummary(): PrivateScope, Public, Static, HideBySig
    OclSetDefaultDevice(String): PrivateScope, Public, Static, HideBySig
    get_HaveOpenCLCompatibleGpuDevice(): PrivateScope, Public, Static, HideBySig, SpecialName
    Kmeans(IInputArray, Int32, IOutputArray, MCvTermCriteria, Int32, KMeansInitType, IOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GrabCut(IInputArray, IInputOutputArray, Rectangle, IInputOutputArray, IInputOutputArray, Int32, GrabcutInitType): PrivateScope, Public, Static, HideBySig
    Normalize(IInputArray, IOutputArray, Double(Optional, HasDefault), Double(Optional, HasDefault), NormType(Optional, HasDefault), DepthType(Optional, HasDefault), IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Gemm(IInputArray, IInputArray, Double, IInputArray, Double, IOutputArray, GemmType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Transform(IInputArray, IOutputArray, IInputArray): PrivateScope, Public, Static, HideBySig
    PerspectiveTransform(PointF[], IInputArray): PrivateScope, Public, Static, HideBySig
    PerspectiveTransform(IInputArray, IOutputArray, IInputArray): PrivateScope, Public, Static, HideBySig
    MulTransposed(IInputArray, IOutputArray, Boolean, IInputArray(Optional, HasDefault), Double(Optional, HasDefault), DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Trace(IInputArray): PrivateScope, Public, Static, HideBySig
    Transpose(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    Determinant(IInputArray): PrivateScope, Public, Static, HideBySig
    Invert(IInputArray, IOutputArray, DecompMethod): PrivateScope, Public, Static, HideBySig
    SVDecomp(IInputArray, IOutputArray, IOutputArray, IOutputArray, SvdFlag): PrivateScope, Public, Static, HideBySig
    SVBackSubst(IInputArray, IInputArray, IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    CalcCovarMatrix(IInputArray, IOutputArray, IInputOutputArray, CovarMethod, DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Mahalanobis(IInputArray, IInputArray, IInputArray): PrivateScope, Public, Static, HideBySig
    PCACompute(IInputArray, IInputOutputArray, IOutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PCACompute(IInputArray, IInputOutputArray, IOutputArray, Double): PrivateScope, Public, Static, HideBySig
    PCAProject(IInputArray, IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    PCABackProject(IInputArray, IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    cvReleaseImage(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    DrawContours(IInputOutputArray, IInputArrayOfArrays, Int32, MCvScalar, Int32(Optional, HasDefault), LineType(Optional, HasDefault), IInputArray(Optional, HasDefault), Int32(Optional, HasDefault), Point(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FillConvexPoly(IInputOutputArray, IInputArray, MCvScalar, LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FillPoly(IInputOutputArray, IInputArray, MCvScalar, LineType(Optional, HasDefault), Int32(Optional, HasDefault), Point(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PutText(IInputOutputArray, String, Point, FontFace, Double, MCvScalar, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetTextSize(String, FontFace, Double, Int32, Int32&): PrivateScope, Public, Static, HideBySig
    MinMaxLoc(IInputArray, Double&, Double&, Point&, Point&, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CopyMakeBorder(IInputArray, IOutputArray, Int32, Int32, Int32, Int32, BorderType, MCvScalar(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    cvGet1D(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    cvGet2D(IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig
    cvGet3D(IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    cvGetReal1D(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetReal2D(IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetReal3D(IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    get_UseOptimized(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_UseOptimized(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    Randn(IInputOutputArray, MCvScalar, MCvScalar): PrivateScope, Public, Static, HideBySig
    Randn(IInputOutputArray, IInputArray, IInputArray): PrivateScope, Public, Static, HideBySig
    Randu(IInputOutputArray, MCvScalar, MCvScalar): PrivateScope, Public, Static, HideBySig
    Randu(IInputOutputArray, IInputArray, IInputArray): PrivateScope, Public, Static, HideBySig
    Eigen(IInputArray, IOutputArray, IOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    cvClearND(IntPtr, Int32[](In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSet2D(IntPtr, Int32, Int32, MCvScalar): PrivateScope, Public, Static, HideBySig
    Flip(IInputArray, IOutputArray, FlipType): PrivateScope, Public, Static, HideBySig
    cvGetSubRect(IntPtr, IntPtr, Rectangle): PrivateScope, Public, Static, HideBySig
    cvGetRows(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetRow(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    cvGetCols(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetCol(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    cvGetDiag(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetSize(IntPtr): PrivateScope, Public, Static, HideBySig
    Circle(IInputOutputArray, Point, Int32, MCvScalar, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Split(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    Ellipse(IInputOutputArray, Point, Size, Double, Double, Double, MCvScalar, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Ellipse(IInputOutputArray, RotatedRect, MCvScalar, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LUT(IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    cvConvertScale(IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ConvertScaleAbs(IInputArray, IOutputArray, Double, Double): PrivateScope, Public, Static, HideBySig
    Mean(IInputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MeanStdDev(IInputArray, MCvScalar&, MCvScalar&, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MeanStdDev(IInputArray, IOutputArray, IOutputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Sum(IInputArray): PrivateScope, Public, Static, HideBySig
    Reduce(IInputArray, IOutputArray, ReduceDimension(Optional, HasDefault), ReduceType(Optional, HasDefault), DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    cvCreateImage(Size, IplDepth, Int32): PrivateScope, Public, Static, HideBySig
    cvCreateImageHeader(Size, IplDepth, Int32): PrivateScope, Public, Static, HideBySig
    cvInitImageHeader(IntPtr, Size, IplDepth, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    cvSetData(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseImageHeader(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvInitMatHeader(IntPtr, Int32, Int32, Int32, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetImageCOI(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetImageCOI(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvResetImageROI(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetImageROI(IntPtr, Rectangle): PrivateScope, Public, Static, HideBySig
    cvGetImageROI(IntPtr): PrivateScope, Public, Static, HideBySig
    cvCreateMat(Int32, Int32, DepthType): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvInitMatNDHeader(IntPtr, Int32, Int32[](In), DepthType, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseMat(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateSparseMat(Int32, IntPtr, DepthType): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseSparseMat(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetReal1D(IntPtr, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetReal2D(IntPtr, Int32, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetReal3D(IntPtr, Int32, Int32, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetRealND(IntPtr, Int32[](In), Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvRange(IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CartToPolar(IInputArray, IInputArray, IOutputArray, IOutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PolarToCart(IInputArray, IInputArray, IOutputArray, IOutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Pow(IInputArray, Double, IOutputArray): PrivateScope, Public, Static, HideBySig
    Exp(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    Log(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    SolveCubic(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    SolvePoly(IInputArray, IOutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Solve(IInputArray, IInputArray, IOutputArray, DecompMethod): PrivateScope, Public, Static, HideBySig
    Dft(IInputArray, IOutputArray, DxtType, Int32): PrivateScope, Public, Static, HideBySig
    GetOptimalDFTSize(Int32): PrivateScope, Public, Static, HideBySig
    MulSpectrums(IInputArray, IInputArray, IOutputArray, MulSpectrumsType, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Dct(IInputArray, IOutputArray, DctType): PrivateScope, Public, Static, HideBySig
    ClipLine(Rectangle, Point&, Point&): PrivateScope, Public, Static, HideBySig
    AbsDiff(IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    AddWeighted(IInputArray, Double, IInputArray, Double, Double, IOutputArray, DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    InRange(IInputArray, IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    Norm(IInputArray, IInputOutputArray, NormType(Optional, HasDefault), IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Norm(IInputArray, NormType(Optional, HasDefault), IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ExtractChannel(IInputArray, IOutputArray, Int32): PrivateScope, Public, Static, HideBySig
    InsertChannel(IInputArray, IInputOutputArray, Int32): PrivateScope, Public, Static, HideBySig
    RandShuffle(IInputOutputArray, Double, UInt64): PrivateScope, Public, Static, HideBySig
    BitwiseNot(IInputArray, IOutputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Max(IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    CountNonZero(IInputArray): PrivateScope, Public, Static, HideBySig
    FindNonZero(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    PSNR(IInputArray, IInputArray): PrivateScope, Public, Static, HideBySig
    Min(IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    Add(IInputArray, IInputArray, IOutputArray, IInputArray(Optional, HasDefault), DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Subtract(IInputArray, IInputArray, IOutputArray, IInputArray(Optional, HasDefault), DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Divide(IInputArray, IInputArray, IOutputArray, Double(Optional, HasDefault), DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Multiply(IInputArray, IInputArray, IOutputArray, Double(Optional, HasDefault), DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BitwiseAnd(IInputArray, IInputArray, IOutputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BitwiseOr(IInputArray, IInputArray, IOutputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BitwiseXor(IInputArray, IInputArray, IOutputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    cvCopy(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    SetIdentity(IInputOutputArray, MCvScalar): PrivateScope, Public, Static, HideBySig
    CorrectMatches(IInputArray, IInputArray, IInputArray, IOutputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    RedirectError(CvErrorCallback, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    RedirectError(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    SetErrMode(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetErrMode(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetErrStatus(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    SetErrStatus(ErrorCodes): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ErrorStr(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReshape(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    Repeat(IInputArray, Int32, Int32, IOutputArray): PrivateScope, Public, Static, HideBySig
    Merge(IInputArrayOfArrays, IOutputArray): PrivateScope, Public, Static, HideBySig
    MixChannels(IInputArrayOfArrays, IInputOutputArray, Int32[]): PrivateScope, Public, Static, HideBySig
    FindEssentialMat(IInputArray, IInputArray, IInputArray, FmType(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), IOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindFundamentalMat(IInputArray, IInputArray, IOutputArray, FmType(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), IOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ComputeCorrespondEpilines(IInputArray, Int32, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    ConvertPointsToHomogeneous(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    ConvertPointsFromHomogeneous(IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    ReprojectImageTo3D(IInputArray, IOutputArray, IInputArray, Boolean(Optional, HasDefault), DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ProjectPoints(MCvPoint3D32f[], IInputArray, IInputArray, IInputArray, IInputArray, IOutputArray(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ProjectPoints(IInputArray, IInputArray, IInputArray, IInputArray, IInputArray, IOutputArray, IOutputArray(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalibrateCamera(MCvPoint3D32f[][], PointF[][], Size, IInputOutputArray, IInputOutputArray, CalibType, MCvTermCriteria, Mat[]&(Out), Mat[]&(Out)): PrivateScope, Public, Static, HideBySig
    CalibrateCamera(IInputArray, IInputArray, Size, IInputOutputArray, IInputOutputArray, IOutputArray, IOutputArray, CalibType, MCvTermCriteria): PrivateScope, Public, Static, HideBySig
    CalibrationMatrixValues(IInputArray, Size, Double, Double, Double&, Double&, Double&, MCvPoint2D64f&, Double&): PrivateScope, Public, Static, HideBySig
    SolvePnP(MCvPoint3D32f[], PointF[], IInputArray, IInputArray, IOutputArray, IOutputArray, Boolean(Optional, HasDefault), SolvePnpMethod(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SolvePnP(IInputArray, IInputArray, IInputArray, IInputArray, IOutputArray, IOutputArray, Boolean(Optional, HasDefault), SolvePnpMethod(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SolvePnPRansac(IInputArray, IInputArray, IInputArray, IInputArray, IOutputArray, IOutputArray, Boolean, Int32, Single, Double, IOutputArray, SolvePnpMethod): PrivateScope, Public, Static, HideBySig
    StereoCalibrate(MCvPoint3D32f[][], PointF[][], PointF[][], IInputOutputArray, IInputOutputArray, IInputOutputArray, IInputOutputArray, Size, IOutputArray, IOutputArray, IOutputArray, IOutputArray, CalibType, MCvTermCriteria): PrivateScope, Public, Static, HideBySig
    StereoCalibrate(IInputArray, IInputArray, IInputArray, IInputOutputArray, IInputOutputArray, IInputOutputArray, IInputOutputArray, Size, IOutputArray, IOutputArray, IOutputArray, IOutputArray, CalibType, MCvTermCriteria): PrivateScope, Public, Static, HideBySig
    StereoRectifyUncalibrated(IInputArray, IInputArray, IInputArray, Size, IOutputArray, IOutputArray, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StereoRectify(IInputArray, IInputArray, IInputArray, IInputArray, Size, IInputArray, IInputArray, IOutputArray, IOutputArray, IOutputArray, IOutputArray, IOutputArray, StereoRectifyType, Double, Size, Rectangle&, Rectangle&): PrivateScope, Public, Static, HideBySig
    Find4QuadCornerSubpix(IInputArray, IInputOutputArray, Size): PrivateScope, Public, Static, HideBySig
    FindChessboardCorners(IInputArray, Size, IOutputArray, CalibCbType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DrawChessboardCorners(IInputOutputArray, Size, IInputArray, Boolean): PrivateScope, Public, Static, HideBySig
    TriangulatePoints(IInputArray, IInputArray, IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    CheckLibraryLoaded(): PrivateScope, Public, Static, HideBySig
    LoadUnmanagedModules(String, String[]): PrivateScope, Public, Static, HideBySig
    GetModuleFormatString(): PrivateScope, Public, Static, HideBySig
    DefaultLoadUnmanagedModules(String[]): PrivateScope, Public, Static, HideBySig
    GetDepthType(DepthType): PrivateScope, Public, Static, HideBySig
    GetDepthType(Type): PrivateScope, Public, Static, HideBySig
    MakeType(DepthType, Int32): PrivateScope, Public, Static, HideBySig
    SanityCheck(): PrivateScope, Public, Static, HideBySig
    FindHomography(PointF[], PointF[], IOutputArray, HomographyMethod, Double(Optional, HasDefault), IOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindHomography(IInputArray, IInputArray, IOutputArray, HomographyMethod(Optional, HasDefault), Double(Optional, HasDefault), IOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Rodrigues(IInputArray, IOutputArray, IOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    cveVideoCaptureGet(IntPtr, CapProp): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cveVideoCaptureSet(IntPtr, CapProp, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class Emgu.CV.CvInvoke+CvErrorCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32, IntPtr, IntPtr, IntPtr, Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, IntPtr, IntPtr, IntPtr, Int32, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.CameraCalibration: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit (Obsolete)
  Methods:
    CalibrateCamera(MCvPoint3D32f[][], PointF[][], Size, IntrinsicCameraParameters, CalibType, MCvTermCriteria, ExtrinsicCameraParameters[]&(Out)): PrivateScope, Public, Static, HideBySig
    StereoCalibrate(MCvPoint3D32f[][], PointF[][], PointF[][], IntrinsicCameraParameters, IntrinsicCameraParameters, Size, CalibType, MCvTermCriteria, ExtrinsicCameraParameters&(Out), Matrix`1&(Out), Matrix`1&(Out)): PrivateScope, Public, Static, HideBySig
    SolvePnP(MCvPoint3D32f[], PointF[], IntrinsicCameraParameters, SolvePnpMethod(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ProjectPoints(MCvPoint3D32f[], ExtrinsicCameraParameters, IntrinsicCameraParameters, Matrix`1[]): PrivateScope, Public, Static, HideBySig
    GetAffineTransform(PointF[], PointF[]): PrivateScope, Public, Static, HideBySig
    EstimateRigidTransform(PointF[], PointF[], Boolean): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.ExtrinsicCameraParameters: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.RotationVector3D, Emgu.CV.Matrix`1[System.Double]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.ExtrinsicCameraParameters]
  Properties:
    Emgu.CV.RotationVector3D RotationVector 'get set' : 
    Emgu.CV.Matrix`1[System.Double] TranslationVector 'get set' : 
    Emgu.CV.Mat ExtrinsicMatrix 'get ' : 
  Methods:
    get_RotationVector(): PrivateScope, Public, HideBySig, SpecialName
    set_RotationVector(RotationVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_TranslationVector(): PrivateScope, Public, HideBySig, SpecialName
    set_TranslationVector(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_ExtrinsicMatrix(): PrivateScope, Public, HideBySig, SpecialName
    Equals(ExtrinsicCameraParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.IntrinsicCameraParameters: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit (Obsolete)
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.IntrinsicCameraParameters]
  Properties:
    Emgu.CV.Matrix`1[System.Double] DistortionCoeffs 'get set' : 
    Emgu.CV.Matrix`1[System.Double] IntrinsicMatrix 'get set' : 
  Methods:
    get_DistortionCoeffs(): PrivateScope, Public, HideBySig, SpecialName
    set_DistortionCoeffs(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_IntrinsicMatrix(): PrivateScope, Public, HideBySig, SpecialName
    set_IntrinsicMatrix(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    InitUndistortMap(Int32, Int32, Matrix`1&(Out), Matrix`1&(Out)): PrivateScope, Public, HideBySig
    GetIntrinsicMatrixValues(Int32, Int32, Double, Double, Double&(Out), Double&(Out), Double&(Out), MCvPoint2D64f&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    Undistort(PointF[], Matrix`1(Optional, HasDefault), Matrix`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Undistort(Image`2): PrivateScope, Public, HideBySig
    Equals(IntrinsicCameraParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Quaternions: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Quaternions]
  Fields:
    Emgu.CV.Quaternions Empty : Public, Static, InitOnly
  Properties:
    Double W   'get set' : 
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Z   'get set' : 
    Emgu.CV.Structure.MCvPoint3D64f AxisAngle 'get set' : 
    Emgu.CV.Structure.MCvPoint3D64f RotationAxis 'get ' : 
    Double RotationAngle 'get ' : 
  Methods:
    get_W(): PrivateScope, Public, HideBySig, SpecialName
    set_W(Double): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Double): PrivateScope, Public, HideBySig, SpecialName
    SetEuler(Double, Double, Double): PrivateScope, Public, HideBySig
    GetEuler(Double&, Double&, Double&): PrivateScope, Public, HideBySig
    get_AxisAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisAngle(MCvPoint3D64f): PrivateScope, Public, HideBySig, SpecialName
    GetRotationMatrix(Matrix`1): PrivateScope, Public, HideBySig
    RotatePoints(Matrix`1, Matrix`1): PrivateScope, Public, HideBySig
    RotatePoint(MCvPoint3D64f): PrivateScope, Public, HideBySig
    get_RotationAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_RotationAngle(): PrivateScope, Public, HideBySig, SpecialName
    Multiply(Quaternions): PrivateScope, Public, HideBySig
    Slerp(Quaternions, Double): PrivateScope, Public, HideBySig
    op_Multiply(Quaternions, Quaternions): PrivateScope, Public, Static, HideBySig, SpecialName
    Conjugate(): PrivateScope, Public, HideBySig
    Equals(Quaternions): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Emgu.CV.MatDataAllocator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Properties:
    System.Array Data 'get ' : 
  Methods:
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
Interface Emgu.CV.IInputArray: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetInputArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Emgu.CV.IOutputArray: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Emgu.CV.IInputArray
  Methods:
    GetOutputArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Emgu.CV.IInputArrayOfArrays: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Emgu.CV.IInputArray
Interface Emgu.CV.IOutputArrayOfArrays: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Emgu.CV.IOutputArray
    Emgu.CV.IInputArray
Interface Emgu.CV.IInputOutputArray: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Methods:
    GetInputOutputArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Emgu.CV.IImage: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
    System.ICloneable
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Properties:
    System.Drawing.Bitmap Bitmap 'get ' : 
    System.Drawing.Size Size 'get ' : 
    IntPtr Ptr 'get ' : 
    Int32 NumberOfChannels 'get ' : 
  Methods:
    get_Bitmap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    MinMax(Double[]&(Out), Double[]&(Out), Point[]&(Out), Point[]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Split(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Ptr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Save(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_NumberOfChannels(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.Mat: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Emgu.CV.MatDataAllocator
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Emgu.CV.CvEnum.DepthType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size, Emgu.CV.CvEnum.DepthType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Emgu.CV.CvEnum.DepthType, Int32, IntPtr, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32[], Emgu.CV.CvEnum.DepthType, IntPtr, IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size, Emgu.CV.CvEnum.DepthType, Int32, IntPtr, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Emgu.CV.CvEnum.ImreadModes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Mat, System.Drawing.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Mat, Emgu.CV.Structure.Range, Emgu.CV.Structure.Range): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IImage
    System.ICloneable
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.IEquatable`1[Emgu.CV.Mat]
    System.Runtime.Serialization.ISerializable
  Properties:
    System.Drawing.Size Size 'get ' : 
    Int32 Rows 'get ' : 
    Int32 Cols 'get ' : 
    IntPtr DataPointer 'get ' : 
    Int32 Step 'get ' : 
    Int32 ElementSize 'get ' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    System.Drawing.Bitmap Bitmap 'get ' : 
    Int32[] SizeOfDimemsion 'get ' : 
    Boolean IsContinuous 'get ' : 
    Boolean IsSubmatrix 'get ' : 
    Emgu.CV.CvEnum.DepthType Depth 'get ' : 
    Boolean IsEmpty 'get ' : 
    Int32 NumberOfChannels 'get ' : 
    IntPtr Total 'get ' : 
    Int32 Dims 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[]): PrivateScope, Public, HideBySig
    SetTo(T[]): PrivateScope, Public, HideBySig
    GetUMat(AccessType, Usage(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Create(Int32, Int32, DepthType, Int32): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    get_Cols(): PrivateScope, Public, HideBySig, SpecialName
    get_DataPointer(): PrivateScope, Public, HideBySig, SpecialName
    GetData(Int32[]): PrivateScope, Public, HideBySig
    get_Step(): PrivateScope, Public, HideBySig, SpecialName
    get_ElementSize(): PrivateScope, Public, HideBySig, SpecialName
    CopyTo(IOutputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ConvertTo(IOutputArray, DepthType, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Reshape(Int32, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    GetValueRange(): PrivateScope, Public, HideBySig
    ToImage(Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_Bitmap(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetTo(MCvScalar, IInputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetTo(IInputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    MinMax(Double[]&(Out), Double[]&(Out), Point[]&(Out), Point[]&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Row(Int32): PrivateScope, Public, HideBySig
    Col(Int32): PrivateScope, Public, HideBySig
    Save(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, HideBySig
    Split(): PrivateScope, Public, HideBySig
    Equals(Mat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dot(IInputArray): PrivateScope, Public, HideBySig
    Cross(IInputArray): PrivateScope, Public, HideBySig
    get_SizeOfDimemsion(): PrivateScope, Public, HideBySig, SpecialName
    get_IsContinuous(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSubmatrix(): PrivateScope, Public, HideBySig, SpecialName
    get_Depth(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfChannels(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    PopBack(Int32): PrivateScope, Public, HideBySig
    PushBack(Mat): PrivateScope, Public, HideBySig
    get_Total(): PrivateScope, Public, HideBySig, SpecialName
    get_Dims(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.RotationMatrix2D: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Emgu.CV.Mat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetRotation(PointF, Double, Double): PrivateScope, Public, HideBySig
    RotatePoints(MCvPoint2D64f[]): PrivateScope, Public, HideBySig
    RotatePoints(PointF[]): PrivateScope, Public, HideBySig
    RotateLines(LineSegment2DF[]): PrivateScope, Public, HideBySig
    RotatePoints(Matrix`1): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    CreateRotationMatrix(PointF, Double, Size, Size&(Out)): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.CvArray`1[TDepth]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.Util.UnmanagedObject
  Interfaces:
    System.Xml.Serialization.IXmlSerializable
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 SerializationCompressionRatio 'get set' : 
    Int32 SizeOfElement 'get ' : 
    IntPtr Ptr 'get set' : 
    System.Drawing.Size Size 'get ' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    Int32 NumberOfChannels 'get ' : 
    Int32 Rows 'get ' : 
    Int32 Cols 'get ' : 
    Byte[] Bytes 'get set' : 
    System.Array ManagedArray 'get set' : 
    Emgu.CV.Structure.MCvScalar Trace 'get ' : 
    Double Norm 'get ' : 
    Emgu.CV.Mat Mat 'get ' : 
  Methods:
    get_SerializationCompressionRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_SerializationCompressionRatio(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SizeOfElement(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ptr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Ptr(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfChannels(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    get_Cols(): PrivateScope, Public, HideBySig, SpecialName
    get_Bytes(): PrivateScope, Public, HideBySig, SpecialName
    set_Bytes(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_ManagedArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ManagedArray(Array): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Trace(): PrivateScope, Public, HideBySig, SpecialName
    get_Norm(): PrivateScope, Public, HideBySig, SpecialName
    DotProduct(CvArray`1): PrivateScope, Public, HideBySig
    CheckRange(Double, Double, Point&): PrivateScope, Public, HideBySig
    Reduce(CvArray`1, ReduceDimension, ReduceType): PrivateScope, Public, HideBySig
    CopyTo(CvArray`1): PrivateScope, Public, HideBySig
    SetValue(MCvScalar, CvArray`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetValue(Double, CvArray`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetRandUniform(MCvScalar, MCvScalar): PrivateScope, Public, HideBySig
    SetRandNormal(MCvScalar, MCvScalar): PrivateScope, Public, HideBySig
    SetIdentity(MCvScalar): PrivateScope, Public, HideBySig
    SetZero(): PrivateScope, Public, HideBySig
    SetIdentity(): PrivateScope, Public, HideBySig
    _Mul(Double): PrivateScope, Public, HideBySig
    _Mul(CvArray`1): PrivateScope, Public, HideBySig
    _Min(Double): PrivateScope, Public, HideBySig
    _Min(CvArray`1): PrivateScope, Public, HideBySig
    _Max(Double): PrivateScope, Public, HideBySig
    _Max(CvArray`1): PrivateScope, Public, HideBySig
    _And(CvArray`1): PrivateScope, Public, HideBySig
    _Or(CvArray`1): PrivateScope, Public, HideBySig
    _Not(): PrivateScope, Public, HideBySig
    Save(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSchema(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReadXml(XmlReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteXml(XmlWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Mat(): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToUMat(): PrivateScope, Public, HideBySig
Class Emgu.CV.Matrix`1[TDepth]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.CvArray`1[TDepth]
    Void .ctor(Int32, Int32, IntPtr, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, IntPtr, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TDepth[,]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TDepth[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.IEquatable`1[Emgu.CV.Matrix`1[TDepth]]
  Properties:
    System.Array ManagedArray 'get set' : 
    TDepth[,] Data 'get set' : 
    Int32 NumberOfChannels 'get ' : 
    Emgu.CV.Structure.MCvMat MCvMat 'get ' : 
    Double Det 'get ' : 
    Double Sum 'get ' : 
    TDepth Item [Int32, Int32] 'get set' : 
    System.Drawing.Size Size 'get ' : 
  Methods:
    get_ManagedArray(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ManagedArray(Array): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    set_Data(TDepth[,]): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfChannels(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MCvMat(): PrivateScope, Public, HideBySig, SpecialName
    get_Det(): PrivateScope, Public, HideBySig, SpecialName
    get_Sum(): PrivateScope, Public, HideBySig, SpecialName
    CopyBlank(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reshape(Int32, Int32): PrivateScope, Public, HideBySig
    Convert(): PrivateScope, Public, HideBySig
    Transpose(): PrivateScope, Public, HideBySig
    get_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32, TDepth): PrivateScope, Public, HideBySig, SpecialName
    GetSubRect(Rectangle): PrivateScope, Public, HideBySig
    GetRow(Int32): PrivateScope, Public, HideBySig
    GetRows(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    GetCol(Int32): PrivateScope, Public, HideBySig
    GetCols(Int32, Int32): PrivateScope, Public, HideBySig
    GetDiag(Int32): PrivateScope, Public, HideBySig
    GetDiag(): PrivateScope, Public, HideBySig
    RemoveRows(Int32, Int32): PrivateScope, Public, HideBySig
    RemoveCols(Int32, Int32): PrivateScope, Public, HideBySig
    ConcateVertical(Matrix`1): PrivateScope, Public, HideBySig
    ConcateHorizontal(Matrix`1): PrivateScope, Public, HideBySig
    MinMax(Double&(Out), Double&(Out), Point&(Out), Point&(Out), IInputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Add(Matrix`1): PrivateScope, Public, HideBySig
    Add(TDepth): PrivateScope, Public, HideBySig
    Sub(Matrix`1): PrivateScope, Public, HideBySig
    Sub(TDepth): PrivateScope, Public, HideBySig
    SubR(TDepth): PrivateScope, Public, HideBySig
    Mul(Double): PrivateScope, Public, HideBySig
    Mul(Matrix`1): PrivateScope, Public, HideBySig
    op_Addition(Matrix`1, Matrix`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Matrix`1, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Double, Matrix`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Double, Matrix`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Matrix`1, Matrix`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Matrix`1, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix`1, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, Matrix`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Matrix`1, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix`1, Matrix`1): PrivateScope, Public, Static, HideBySig, SpecialName
    Cmp(Matrix`1, CmpType): PrivateScope, Public, HideBySig
    Split(): PrivateScope, Public, HideBySig
    Equals(Matrix`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Emgu.CV.RotationVector3D: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Emgu.CV.Matrix`1[System.Double]
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Mat RotationMatrix 'get set' : 
  Methods:
    get_RotationMatrix(): PrivateScope, Public, HideBySig, SpecialName
    set_RotationMatrix(Mat): PrivateScope, Public, HideBySig, SpecialName
Interface Emgu.CV.ICapture: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    QueryFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    QuerySmallFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Emgu.CV.IDuplexCapture: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    DuplexQueryFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DuplexQuerySmallFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Emgu.CV.IDuplexCaptureCallback: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ReceiveFrame(Mat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Emgu.CV.VideoCapture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.CvEnum.CaptureType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IDuplexCapture
    Emgu.CV.ICapture
  Properties:
    CaptureModuleType CaptureSource 'get ' : 
    Emgu.CV.CvEnum.FlipType FlipType 'get set' : 
    Boolean FlipHorizontal 'get set' : 
    Boolean FlipVertical 'get set' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    Boolean IsOpened 'get ' : 
  Events:
    System.EventHandler ImageGrabbed: 
  Methods:
    get_CaptureSource(): PrivateScope, Public, HideBySig, SpecialName
    get_FlipType(): PrivateScope, Public, HideBySig, SpecialName
    set_FlipType(FlipType): PrivateScope, Public, HideBySig, SpecialName
    get_FlipHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_FlipHorizontal(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FlipVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_FlipVertical(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    GetCaptureProperty(CapProp): PrivateScope, Public, HideBySig
    SetCaptureProperty(CapProp, Double): PrivateScope, Public, HideBySig
    Grab(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    add_ImageGrabbed(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ImageGrabbed(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    Start(): PrivateScope, Public, HideBySig
    Pause(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    Retrieve(IOutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Mat): PrivateScope, Public, HideBySig
    QueryFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    QuerySmallFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DuplexQueryFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DuplexQuerySmallFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsOpened(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.VideoCapture+CaptureModuleType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CaptureModuleType Camera = 0 : Public, Static, Literal, HasDefault
    CaptureModuleType Highgui = 1 : Public, Static, Literal, HasDefault
Class Emgu.CV.KinectCapture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.VideoCapture
    Void .ctor(DeviceType, ImageGeneratorOutputMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RetrieveGrayFrame(IOutputArray): PrivateScope, Public, HideBySig
    RetrieveBgrFrame(IOutputArray): PrivateScope, Public, HideBySig
    RetrieveDisparityMap(IOutputArray): PrivateScope, Public, HideBySig
    RetrieveDisparityMap32f(IOutputArray): PrivateScope, Public, HideBySig
    RetrieveValidDepthMap(IOutputArray): PrivateScope, Public, HideBySig
    RetrieveDepthMap(IOutputArray): PrivateScope, Public, HideBySig
    RetrievePointCloudMap(IOutputArray): PrivateScope, Public, HideBySig
    GetColorPoints(Image`2): PrivateScope, Public, HideBySig
    GetMaxDisparity(Double): PrivateScope, Public, HideBySig
Struct Emgu.CV.KinectCapture+ImageGeneratorOutputMode: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ImageGeneratorOutputMode Vga30Hz = 0 : Public, Static, Literal, HasDefault
    ImageGeneratorOutputMode Sxga15Hz = 1 : Public, Static, Literal, HasDefault
    ImageGeneratorOutputMode Sxga30Hz = 2 : Public, Static, Literal, HasDefault
    ImageGeneratorOutputMode Qvga30Hz = 3 : Public, Static, Literal, HasDefault
    ImageGeneratorOutputMode Qvga60Hz = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.KinectCapture+OpenNIDataType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenNIDataType DepthMap = 0 : Public, Static, Literal, HasDefault
    OpenNIDataType PointCloudMap = 1 : Public, Static, Literal, HasDefault
    OpenNIDataType DisparityMap = 2 : Public, Static, Literal, HasDefault
    OpenNIDataType DisparityMap32f = 3 : Public, Static, Literal, HasDefault
    OpenNIDataType ValidDepthMask = 4 : Public, Static, Literal, HasDefault
    OpenNIDataType BgrImage = 5 : Public, Static, Literal, HasDefault
    OpenNIDataType GrayImage = 6 : Public, Static, Literal, HasDefault
Struct Emgu.CV.KinectCapture+DeviceType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DeviceType Kinect = 0 : Public, Static, Literal, HasDefault
    DeviceType Xtion = 1 : Public, Static, Literal, HasDefault
Class Emgu.CV.CascadeClassifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOldFormatCascade 'get ' : 
    System.Drawing.Size OriginalWindowSize 'get ' : 
  Methods:
    Read(FileNode): PrivateScope, Public, HideBySig
    DetectMultiScale(IInputArray, Double(Optional, HasDefault), Int32(Optional, HasDefault), Size(Optional, HasDefault), Size(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_IsOldFormatCascade(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalWindowSize(): PrivateScope, Public, HideBySig, SpecialName
Interface Emgu.CV.IColor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
    Int32 Dimension 'get ' : 
  Methods:
    get_MCvScalar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Dimension(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct Emgu.CV.Structure.Bgr: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Bgr]
  Properties:
    Double Blue 'get set' : 
    Double Green 'get set' : 
    Double Red 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Blue(): PrivateScope, Public, HideBySig, SpecialName
    set_Blue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, HideBySig, SpecialName
    set_Green(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Red(): PrivateScope, Public, HideBySig, SpecialName
    set_Red(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Bgr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Bgra: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Bgra]
  Properties:
    Double Blue 'get set' : 
    Double Green 'get set' : 
    Double Red 'get set' : 
    Double Alpha 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Blue(): PrivateScope, Public, HideBySig, SpecialName
    set_Blue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, HideBySig, SpecialName
    set_Green(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Red(): PrivateScope, Public, HideBySig, SpecialName
    set_Red(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Bgra): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Emgu.CV.ColorInfoAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ConversionCodename 'get set' : 
  Methods:
    get_ConversionCodename(): PrivateScope, Public, HideBySig, SpecialName
    set_ConversionCodename(String): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.Gray: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Gray]
  Properties:
    Double Intensity 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Intensity(): PrivateScope, Public, HideBySig, SpecialName
    set_Intensity(Double): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Gray): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Hls: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Hls]
  Properties:
    Double Hue 'get set' : 
    Double Lightness 'get set' : 
    Double Satuation 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Hue(): PrivateScope, Public, HideBySig, SpecialName
    set_Hue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Lightness(): PrivateScope, Public, HideBySig, SpecialName
    set_Lightness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Satuation(): PrivateScope, Public, HideBySig, SpecialName
    set_Satuation(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Hls): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Hsv: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Hsv]
  Properties:
    Double Hue 'get set' : 
    Double Satuation 'get set' : 
    Double Value 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Hue(): PrivateScope, Public, HideBySig, SpecialName
    set_Hue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Satuation(): PrivateScope, Public, HideBySig, SpecialName
    set_Satuation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Hsv): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Lab: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Lab]
  Properties:
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Z   'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Lab): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Luv: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Luv]
  Properties:
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Z   'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Luv): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Rgb: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Rgb]
  Properties:
    Double Red 'get set' : 
    Double Green 'get set' : 
    Double Blue 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Red(): PrivateScope, Public, HideBySig, SpecialName
    set_Red(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, HideBySig, SpecialName
    set_Green(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Blue(): PrivateScope, Public, HideBySig, SpecialName
    set_Blue(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Rgb): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Bgr565: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Bgr565]
  Properties:
    Double Red 'get set' : 
    Double Green 'get set' : 
    Double Blue 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Red(): PrivateScope, Public, HideBySig, SpecialName
    set_Red(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, HideBySig, SpecialName
    set_Green(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Blue(): PrivateScope, Public, HideBySig, SpecialName
    set_Blue(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Bgr565): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Rgba: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Rgba]
  Properties:
    Double Red 'get set' : 
    Double Green 'get set' : 
    Double Blue 'get set' : 
    Double Alpha 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Red(): PrivateScope, Public, HideBySig, SpecialName
    set_Red(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, HideBySig, SpecialName
    set_Green(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Blue(): PrivateScope, Public, HideBySig, SpecialName
    set_Blue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Rgba): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Xyz: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Xyz]
  Properties:
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Z   'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Xyz): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Ycc: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Ycc]
  Properties:
    Double Y   'get set' : 
    Double Cr  'get set' : 
    Double Cb  'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Cr(): PrivateScope, Public, HideBySig, SpecialName
    set_Cr(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Cb(): PrivateScope, Public, HideBySig, SpecialName
    set_Cb(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Ycc): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Emgu.CV.ConvolutionKernelF: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Matrix`1[System.Single]
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Matrix`1[System.Single], System.Drawing.Point): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[,]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[,], System.Drawing.Point): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point Center 'get set' : 
  Methods:
    Flip(FlipType): PrivateScope, Public, HideBySig
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(Point): PrivateScope, Public, HideBySig, SpecialName
    Transpose(): PrivateScope, Public, HideBySig
Class Emgu.CV.Cvb.CvBlob: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    UInt32 Label 'get ' : 
    System.Drawing.Rectangle BoundingBox 'get ' : 
    Moments BlobMoments 'get ' : 
    System.Drawing.PointF Centroid 'get ' : 
    Int32 Area 'get ' : 
    IntPtr Ptr 'get ' : 
  Methods:
    GetContour(): PrivateScope, Public, HideBySig
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    get_BoundingBox(): PrivateScope, Public, HideBySig, SpecialName
    get_BlobMoments(): PrivateScope, Public, HideBySig, SpecialName
    get_Centroid(): PrivateScope, Public, HideBySig, SpecialName
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
    get_Ptr(): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(CvBlob): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Emgu.CV.Cvb.CvBlob+Moments: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double M00 : Public
    Double M10 : Public
    Double M01 : Public
    Double M11 : Public
    Double M20 : Public
    Double M02 : Public
    Double U11 : Public
    Double U20 : Public
    Double U02 : Public
    Double N11 : Public
    Double N20 : Public
    Double N02 : Public
    Double P1 : Public
    Double P2 : Public
Class Emgu.CV.Cvb.CvBlobDetector: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Detect(Image`2, CvBlobs): PrivateScope, Public, HideBySig
    MeanColor(CvBlob, Image`2): PrivateScope, Public, HideBySig
    DrawBlobs(Image`2, CvBlobs, BlobRenderType, Double): PrivateScope, Public, HideBySig
    DrawBlobsMask(CvBlobs): PrivateScope, Public, HideBySig
Struct Emgu.CV.Cvb.CvBlobDetector+BlobRenderType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BlobRenderType Color = 1 : Public, Static, Literal, HasDefault
    BlobRenderType Centroid = 2 : Public, Static, Literal, HasDefault
    BlobRenderType BoundingBox = 4 : Public, Static, Literal, HasDefault
    BlobRenderType Angle = 8 : Public, Static, Literal, HasDefault
    BlobRenderType ToLog = 16 : Public, Static, Literal, HasDefault
    BlobRenderType ToStd = 32 : Public, Static, Literal, HasDefault
    BlobRenderType Default = 15 : Public, Static, Literal, HasDefault
Class Emgu.CV.Cvb.CvBlobs: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[System.UInt32,Emgu.CV.Cvb.CvBlob]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[System.UInt32,Emgu.CV.Cvb.CvBlob]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.UInt32,Emgu.CV.Cvb.CvBlob]]
    System.Collections.IEnumerable
  Properties:
    System.Collections.Generic.ICollection`1[System.UInt32] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[Emgu.CV.Cvb.CvBlob] Values 'get ' : 
    Emgu.CV.Cvb.CvBlob Item [UInt32] 'get set' : 
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    FilterByArea(Int32, Int32): PrivateScope, Public, HideBySig
    Add(UInt32, CvBlob): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Keys(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetValue(UInt32, CvBlob&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Values(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(UInt32, CvBlob): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(KeyValuePair`2[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Cvb.CvTrack: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed
  :System.ValueType
  Interfaces:
    System.IEquatable`1[Emgu.CV.Cvb.CvTrack]
  Fields:
    UInt32 Id : Public
    UInt32 BlobLabel : Public
    UInt32 MinX : Public
    UInt32 MaxX : Public
    UInt32 MinY : Public
    UInt32 MaxY : Public
    Emgu.CV.Structure.MCvPoint2D64f Centroid : Public
    UInt32 Lifetime : Public
    UInt32 Active : Public
    UInt32 Inactive : Public
  Properties:
    System.Drawing.Rectangle BoundingBox 'get ' : 
  Methods:
    get_BoundingBox(): PrivateScope, Public, HideBySig, SpecialName
    Equals(CvTrack): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.Cvb.CvTracks: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IDictionary`2[System.UInt32,Emgu.CV.Cvb.CvTrack]
    System.Collections.Generic.ICollection`1[System.Collections.Generic.KeyValuePair`2[System.UInt32,Emgu.CV.Cvb.CvTrack]]
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.UInt32,Emgu.CV.Cvb.CvTrack]]
    System.Collections.IEnumerable
  Properties:
    System.Collections.Generic.ICollection`1[System.UInt32] Keys 'get ' : 
    System.Collections.Generic.ICollection`1[Emgu.CV.Cvb.CvTrack] Values 'get ' : 
    Emgu.CV.Cvb.CvTrack Item [UInt32] 'get set' : 
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    Update(CvBlobs, Double, UInt32, UInt32): PrivateScope, Public, HideBySig
    Add(UInt32, CvTrack): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ContainsKey(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Keys(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetValue(UInt32, CvTrack&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Values(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(UInt32, CvTrack): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(KeyValuePair`2[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Remove(KeyValuePair`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.DenseHistogram: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Mat
    Void .ctor(Int32, Emgu.CV.Structure.RangeF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32[], Emgu.CV.Structure.RangeF[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32[] BinDimension 'get ' : 
    Emgu.CV.Structure.RangeF[] Ranges 'get ' : 
  Methods:
    Clear(): PrivateScope, Public, HideBySig
    Calculate(Image`2[], Boolean, Image`2): PrivateScope, Public, HideBySig
    Calculate(Matrix`1[], Boolean, Matrix`1): PrivateScope, Public, HideBySig
    BackProject(Image`2[]): PrivateScope, Public, HideBySig
    BackProject(Matrix`1[]): PrivateScope, Public, HideBySig
    get_BinDimension(): PrivateScope, Public, HideBySig, SpecialName
    get_Ranges(): PrivateScope, Public, HideBySig, SpecialName
    GetBinValues(): PrivateScope, Public, HideBySig
Interface Emgu.CV.IAlgorithm: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    IntPtr AlgorithmPtr 'get ' : 
  Methods:
    get_AlgorithmPtr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Emgu.CV.IDenseOpticalFlow: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Emgu.CV.IAlgorithm
  Properties:
    IntPtr DenseOpticalFlowPtr 'get ' : 
  Methods:
    get_DenseOpticalFlowPtr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.DenseOpticalFlowExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Calc(IDenseOpticalFlow, IInputArray, IInputArray, IInputOutputArray): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.DualTVL1OpticalFlow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IDenseOpticalFlow
    Emgu.CV.IAlgorithm
  Properties:
    IntPtr DenseOpticalFlowPtr 'get ' : 
    IntPtr AlgorithmPtr 'get ' : 
    Double Tau 'get set' : 
    Double Lambda 'get set' : 
    Double Theta 'get set' : 
    Double Gamma 'get set' : 
    Int32 ScalesNumber 'get set' : 
    Int32 WarpingsNumber 'get set' : 
    Double Epsilon 'get set' : 
    Int32 InnerIterations 'get set' : 
    Int32 OuterIterations 'get set' : 
    Boolean UseInitialFlow 'get set' : 
    Double ScaleStep 'get set' : 
    Int32 MedianFiltering 'get set' : 
  Methods:
    get_DenseOpticalFlowPtr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AlgorithmPtr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Tau(): PrivateScope, Public, HideBySig, SpecialName
    set_Tau(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Lambda(): PrivateScope, Public, HideBySig, SpecialName
    set_Lambda(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Theta(): PrivateScope, Public, HideBySig, SpecialName
    set_Theta(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Gamma(): PrivateScope, Public, HideBySig, SpecialName
    set_Gamma(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScalesNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_ScalesNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_WarpingsNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_WarpingsNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Epsilon(): PrivateScope, Public, HideBySig, SpecialName
    set_Epsilon(Double): PrivateScope, Public, HideBySig, SpecialName
    get_InnerIterations(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerIterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OuterIterations(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterIterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UseInitialFlow(): PrivateScope, Public, HideBySig, SpecialName
    set_UseInitialFlow(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleStep(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MedianFiltering(): PrivateScope, Public, HideBySig, SpecialName
    set_MedianFiltering(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Features2D.Feature2D: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Interfaces:
    Emgu.CV.IAlgorithm
  Properties:
    IntPtr Feature2DPtr 'get ' : 
    Int32 DescriptorSize 'get ' : 
  Methods:
    get_Feature2DPtr(): PrivateScope, Public, HideBySig, SpecialName
    DetectAndCompute(IInputArray, IInputArray, VectorOfKeyPoint, IOutputArray, Boolean): PrivateScope, Public, HideBySig
    DetectRaw(IInputArray, VectorOfKeyPoint, IInputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Detect(IInputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Compute(IInputArray, VectorOfKeyPoint, IOutputArray): PrivateScope, Public, HideBySig
    get_DescriptorSize(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Features2D.AKAZE: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(DescriptorType, Int32, Int32, Single, Int32, Int32, Diffusivity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Emgu.CV.Features2D.AKAZE+DescriptorType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DescriptorType KazeUpright = 2 : Public, Static, Literal, HasDefault
    DescriptorType Kaze = 3 : Public, Static, Literal, HasDefault
    DescriptorType MldbUpright = 4 : Public, Static, Literal, HasDefault
    DescriptorType Mldb = 5 : Public, Static, Literal, HasDefault
Class Emgu.CV.Features2D.AgastFeatureDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Int32, Boolean, Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Emgu.CV.Features2D.AgastFeatureDetector+Type: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type AGAST_5_8 = 0 : Public, Static, Literal, HasDefault
    Type AGAST_7_12d = 1 : Public, Static, Literal, HasDefault
    Type AGAST_7_12s = 2 : Public, Static, Literal, HasDefault
    Type OAST_9_16 = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.Features2D.DistanceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.Features2D.DistanceType Inf = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.Features2D.DistanceType L1 = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.Features2D.DistanceType L2 = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.Features2D.DistanceType L2Sqr = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.Features2D.DistanceType Hamming = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.Features2D.DistanceType Hamming2 = 7 : Public, Static, Literal, HasDefault
Class Emgu.CV.Features2D.DescriptorMatcher: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Interfaces:
    Emgu.CV.IAlgorithm
  Methods:
    KnnMatch(IInputArray, VectorOfVectorOfDMatch, Int32, IInputArray): PrivateScope, Public, HideBySig
    Add(IInputArray): PrivateScope, Public, HideBySig
Class Emgu.CV.Features2D.BFMatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.DescriptorMatcher
    Void .ctor(Emgu.CV.Features2D.DistanceType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Features2D.BOWImgDescriptorExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.Features2D.Feature2D, Emgu.CV.Features2D.DescriptorMatcher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetVocabulary(Mat): PrivateScope, Public, HideBySig
    Compute(IInputArray, VectorOfKeyPoint, Mat): PrivateScope, Public, HideBySig
Class Emgu.CV.Features2D.BOWKMeansTrainer: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Emgu.CV.Structure.MCvTermCriteria, Int32, Emgu.CV.CvEnum.KMeansInitType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 DescriptorCount 'get ' : 
  Methods:
    get_DescriptorCount(): PrivateScope, Public, HideBySig, SpecialName
    Add(Mat): PrivateScope, Public, HideBySig
    Cluster(IOutputArray): PrivateScope, Public, HideBySig
Class Emgu.CV.Features2D.Brisk: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Int32, Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Features2D.FastDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Int32, Boolean, DetectorType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Emgu.CV.Features2D.FastDetector+DetectorType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DetectorType Type5_8 = 0 : Public, Static, Literal, HasDefault
    DetectorType Type7_12 = 1 : Public, Static, Literal, HasDefault
    DetectorType Type9_16 = 2 : Public, Static, Literal, HasDefault
Class Emgu.CV.Features2D.Features2DInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
Class Emgu.CV.Features2D.Features2DToolbox: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    DrawKeypoints(IInputArray, VectorOfKeyPoint, IInputOutputArray, Bgr, KeypointDrawType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DrawMatches(IInputArray, VectorOfKeyPoint, IInputArray, VectorOfKeyPoint, VectorOfVectorOfDMatch, IInputOutputArray, MCvScalar, MCvScalar, IInputArray(Optional, HasDefault), KeypointDrawType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    VoteForSizeAndOrientation(VectorOfKeyPoint, VectorOfKeyPoint, VectorOfVectorOfDMatch, Mat, Double, Int32): PrivateScope, Public, Static, HideBySig
    GetHomographyMatrixFromMatchedFeatures(VectorOfKeyPoint, VectorOfKeyPoint, VectorOfVectorOfDMatch, Mat, Double): PrivateScope, Public, Static, HideBySig
    VoteForUniqueness(VectorOfVectorOfDMatch, Double, Mat): PrivateScope, Public, Static, HideBySig
Struct Emgu.CV.Features2D.Features2DToolbox+KeypointDrawType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    KeypointDrawType Default = 0 : Public, Static, Literal, HasDefault
    KeypointDrawType NotDrawSinglePoints = 2 : Public, Static, Literal, HasDefault
    KeypointDrawType DrawRichKeypoints = 4 : Public, Static, Literal, HasDefault
Class Emgu.CV.Features2D.FlannBasedMatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.DescriptorMatcher
    Void .ctor(Emgu.CV.Flann.IIndexParams, Emgu.CV.Flann.SearchParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Features2D.GFTTDetector: AutoLayout, AnsiClass, Class, Public
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Int32, Double, Double, Int32, Boolean, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Features2D.KAZE: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Boolean, Boolean, Single, Int32, Int32, Diffusivity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Emgu.CV.Features2D.KAZE+Diffusivity: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Diffusivity PmG1 = 0 : Public, Static, Literal, HasDefault
    Diffusivity PmG2 = 1 : Public, Static, Literal, HasDefault
    Diffusivity Weickert = 2 : Public, Static, Literal, HasDefault
    Diffusivity Charbonnier = 3 : Public, Static, Literal, HasDefault
Class Emgu.CV.Features2D.MSERDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Int32, Int32, Int32, Double, Double, Int32, Double, Double, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Features2D.ORBDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Int32, Single, Int32, Int32, Int32, Int32, ScoreType, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Emgu.CV.Features2D.ORBDetector+ScoreType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ScoreType Harris = 0 : Public, Static, Literal, HasDefault
    ScoreType Fast = 1 : Public, Static, Literal, HasDefault
Class Emgu.CV.Features2D.SimpleBlobDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Emgu.CV.Features2D.SimpleBlobDetectorParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Features2D.SimpleBlobDetectorParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single ThresholdStep 'get set' : 
    Single MinThreshold 'get set' : 
    Single MaxThreshold 'get set' : 
    Single MinDistBetweenBlobs 'get set' : 
    Boolean FilterByColor 'get set' : 
    Byte blobColor 'get set' : 
    Boolean FilterByArea 'get set' : 
    Single MinArea 'get set' : 
    Single MaxArea 'get set' : 
    Boolean FilterByCircularity 'get set' : 
    Single MinCircularity 'get set' : 
    Single MaxCircularity 'get set' : 
    Boolean FilterByInertia 'get set' : 
    Single MinInertiaRatio 'get set' : 
    Single MaxInertiaRatio 'get set' : 
    Boolean FilterByConvexity 'get set' : 
    Single MinConvexity 'get set' : 
    Single MaxConvexity 'get set' : 
    IntPtr MinRepeatability 'get set' : 
  Methods:
    get_ThresholdStep(): PrivateScope, Public, HideBySig, SpecialName
    set_ThresholdStep(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MinThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_MinThreshold(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MaxThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxThreshold(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MinDistBetweenBlobs(): PrivateScope, Public, HideBySig, SpecialName
    set_MinDistBetweenBlobs(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FilterByColor(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterByColor(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_blobColor(): PrivateScope, Public, HideBySig, SpecialName
    set_blobColor(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_FilterByArea(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterByArea(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinArea(): PrivateScope, Public, HideBySig, SpecialName
    set_MinArea(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MaxArea(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxArea(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FilterByCircularity(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterByCircularity(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinCircularity(): PrivateScope, Public, HideBySig, SpecialName
    set_MinCircularity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MaxCircularity(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxCircularity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FilterByInertia(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterByInertia(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinInertiaRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_MinInertiaRatio(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MaxInertiaRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxInertiaRatio(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FilterByConvexity(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterByConvexity(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinConvexity(): PrivateScope, Public, HideBySig, SpecialName
    set_MinConvexity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MaxConvexity(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxConvexity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MinRepeatability(): PrivateScope, Public, HideBySig, SpecialName
    set_MinRepeatability(IntPtr): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.FileNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Properties:
    Boolean IsEmpty 'get ' : 
    Type NodeType 'get ' : 
  Methods:
    ReadMat(Mat, Mat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_NodeType(): PrivateScope, Public, HideBySig, SpecialName
    ReadString(String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ReadInt(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ReadFloat(Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ReadDouble(Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
Struct Emgu.CV.FileNode+Type: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type None = 0 : Public, Static, Literal, HasDefault
    Type Int = 1 : Public, Static, Literal, HasDefault
    Type Real = 2 : Public, Static, Literal, HasDefault
    Type Float = 2 : Public, Static, Literal, HasDefault
    Type Str = 3 : Public, Static, Literal, HasDefault
    Type String = 3 : Public, Static, Literal, HasDefault
    Type Ref = 4 : Public, Static, Literal, HasDefault
    Type Seq = 5 : Public, Static, Literal, HasDefault
    Type Map = 6 : Public, Static, Literal, HasDefault
    Type TypeMask = 7 : Public, Static, Literal, HasDefault
    Type Flow = 8 : Public, Static, Literal, HasDefault
    Type User = 16 : Public, Static, Literal, HasDefault
    Type Empty = 32 : Public, Static, Literal, HasDefault
    Type Named = 64 : Public, Static, Literal, HasDefault
Class Emgu.CV.FileStorage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String, Mode, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOpened 'get ' : 
    Emgu.CV.FileNode Item [System.String] 'get ' : 
  Methods:
    Write(Mat, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Write(Int32, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Write(Single, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Write(Double, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Write(String, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_IsOpened(): PrivateScope, Public, HideBySig, SpecialName
    ReleaseAndGetString(): PrivateScope, Public, HideBySig
    GetRoot(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetFirstTopLevelNode(): PrivateScope, Public, HideBySig
    GetNode(String): PrivateScope, Public, HideBySig
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.FileStorage+Mode: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mode Read = 0 : Public, Static, Literal, HasDefault
    Mode Write = 1 : Public, Static, Literal, HasDefault
    Mode Append = 2 : Public, Static, Literal, HasDefault
    Mode Memory = 4 : Public, Static, Literal, HasDefault
    Mode FormatMask = 56 : Public, Static, Literal, HasDefault
    Mode FormatAuto = 0 : Public, Static, Literal, HasDefault
    Mode FormatXml = 8 : Public, Static, Literal, HasDefault
    Mode FormatYaml = 16 : Public, Static, Literal, HasDefault
Struct Emgu.CV.Flann.CenterInitType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.Flann.CenterInitType Random = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.Flann.CenterInitType Gonzales = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.Flann.CenterInitType Kmeanspp = 2 : Public, Static, Literal, HasDefault
Interface Emgu.CV.Flann.IIndexParams: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    IntPtr IndexParamPtr 'get ' : 
  Methods:
    get_IndexParamPtr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.Flann.Index: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.IInputArray, Emgu.CV.Flann.IIndexParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    KnnSearch(IInputArray, IOutputArray, IOutputArray, Int32, Int32): PrivateScope, Public, HideBySig
    RadiusSearch(IInputArray, IOutputArray, IOutputArray, Single, Int32, Int32): PrivateScope, Public, HideBySig
Class Emgu.CV.Flann.Index3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.Structure.MCvPoint3D32f[], Emgu.CV.Flann.IIndexParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ApproximateNearestNeighbour(MCvPoint3D32f, Double&(Out)): PrivateScope, Public, HideBySig
Class Emgu.CV.Flann.LinearIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Flann.IIndexParams
Class Emgu.CV.Flann.KdTreeIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Flann.IIndexParams
Class Emgu.CV.Flann.LshIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Flann.IIndexParams
Class Emgu.CV.Flann.KMeansIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Emgu.CV.Flann.CenterInitType, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Flann.IIndexParams
Class Emgu.CV.Flann.CompositeIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Int32, Emgu.CV.Flann.CenterInitType, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Flann.IIndexParams
Class Emgu.CV.Flann.AutotunedIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Flann.IIndexParams
Class Emgu.CV.Flann.HierarchicalClusteringIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Emgu.CV.Flann.CenterInitType, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Flann.IIndexParams
Class Emgu.CV.Flann.SearchParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Flann.IIndexParams
Struct Emgu.CV.Geodetic.GeodeticCoordinate: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Geodetic.GeodeticCoordinate]
  Fields:
    Emgu.CV.Geodetic.GeodeticCoordinate Empty : Public, Static, InitOnly
  Properties:
    Double Latitude 'get set' : 
    Double Longitude 'get set' : 
    Double Altitude 'get set' : 
  Methods:
    get_Latitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Latitude(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Longitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Longitude(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Altitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Altitude(Double): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(GeodeticCoordinate, GeodeticCoordinate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(GeodeticCoordinate, GeodeticCoordinate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(GeodeticCoordinate, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(GeodeticCoordinate): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RadianToDegree(Double): PrivateScope, Public, Static, HideBySig
    DegreeToRadian(Double): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.HOGDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size, System.Drawing.Size, System.Drawing.Size, System.Drawing.Size, Int32, Int32, Double, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.IInputArray, System.Drawing.Size, System.Drawing.Size, System.Drawing.Size, Int32, Int32, Double, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.IInputArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 DescriptorSize 'get ' : 
  Methods:
    GetDefaultPeopleDetector(): PrivateScope, Public, Static, HideBySig
    SetSVMDetector(Single[]): PrivateScope, Public, HideBySig
    DetectMultiScale(IInputArray, Double(Optional, HasDefault), Size(Optional, HasDefault), Size(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Compute(IInputArray, Size(Optional, HasDefault), Size(Optional, HasDefault), Point[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_DescriptorSize(): PrivateScope, Public, HideBySig, SpecialName
Interface Emgu.CV.IStereoMatcher: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    IntPtr StereoMatcherPtr 'get ' : 
  Methods:
    get_StereoMatcherPtr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.Image`2[TColor,TDepth]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.CvArray`1[TDepth]
    Void .ctor(TDepth[,,]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Bitmap): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, TColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Image`2[Emgu.CV.Structure.Gray,TDepth][]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IImage
    System.ICloneable
    System.IEquatable`1[Emgu.CV.Image`2[TColor,TDepth]]
  Properties:
    TDepth[,,] Data 'get set' : 
    Emgu.CV.Structure.MIplImage MIplImage 'get ' : 
    System.Drawing.Rectangle ROI 'get set' : 
    Int32 NumberOfChannels 'get ' : 
    System.Array ManagedArray 'get set' : 
    Emgu.CV.CvEnum.IplDepth CvDepth 'get ' : 
    Boolean IsROISet 'get ' : 
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,TDepth] Item [Int32] 'get set' : 
    TColor Item [Int32, Int32] 'get set' : 
    TColor Item [System.Drawing.Point] 'get set' : 
    System.Drawing.Bitmap Bitmap 'get set' : 
    System.Drawing.Size Size 'get ' : 
  Methods:
    WarpPerspective(Matrix`1, Int32, Int32, Inter, Warp, BorderType, TColor): PrivateScope, Public, HideBySig
    Rotate(Double, TColor, Boolean): PrivateScope, Public, HideBySig
    Rotate(Double, PointF, Inter, TColor, Boolean): PrivateScope, Public, HideBySig
    LogPolar(PointF, Double, Inter(Optional, HasDefault), Warp(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Convert(): PrivateScope, Public, HideBySig
    ConvertFrom(Image`2): PrivateScope, Public, HideBySig
    ConvertFrom(IInputArray): PrivateScope, Public, HideBySig
    ConvertScale(Double, Double): PrivateScope, Public, HideBySig
    get_Bitmap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Bitmap(Bitmap): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToBitmap(): PrivateScope, Public, HideBySig
    ToBitmap(Int32, Int32): PrivateScope, Public, HideBySig
    PyrDown(): PrivateScope, Public, HideBySig
    PyrUp(): PrivateScope, Public, HideBySig
    BuildPyramid(Int32): PrivateScope, Public, HideBySig
    InPaint(Image`2, Double): PrivateScope, Public, HideBySig
    MorphologyEx(MorphOp, IInputArray, Point, Int32, BorderType, MCvScalar): PrivateScope, Public, HideBySig
    _MorphologyEx(MorphOp, IInputArray, Point, Int32, BorderType, MCvScalar): PrivateScope, Public, HideBySig
    Erode(Int32): PrivateScope, Public, HideBySig
    Dilate(Int32): PrivateScope, Public, HideBySig
    _Erode(Int32): PrivateScope, Public, HideBySig
    _Dilate(Int32): PrivateScope, Public, HideBySig
    Action(Action`1): PrivateScope, Public, HideBySig
    Action(Image`2, Action`2): PrivateScope, Public, HideBySig
    Convert(Func`4): PrivateScope, Public, HideBySig
    Convert(Converter`2): PrivateScope, Public, HideBySig
    Convert(Image`2, Func`3): PrivateScope, Public, HideBySig
    Convert(Image`2, Image`2, Func`4): PrivateScope, Public, HideBySig
    Convert(Image`2, Image`2, Image`2, Func`5): PrivateScope, Public, HideBySig
    op_BitwiseAnd(Image`2, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(Image`2, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(Double, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(Image`2, TColor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(TColor, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Image`2, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Image`2, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Double, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Image`2, TColor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(TColor, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_OnesComplement(Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Image`2, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Double, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Image`2, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Image`2, TColor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(TColor, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Image`2, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Image`2, TColor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(TColor, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Double, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Image`2, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Image`2, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Image`2, ConvolutionKernelF): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Image`2, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Double, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    SmoothBlur(Int32, Int32): PrivateScope, Public, HideBySig
    SmoothBlur(Int32, Int32, Boolean): PrivateScope, Public, HideBySig
    SmoothMedian(Int32): PrivateScope, Public, HideBySig
    SmoothBilatral(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SmoothGaussian(Int32): PrivateScope, Public, HideBySig
    SmoothGaussian(Int32, Int32, Double, Double): PrivateScope, Public, HideBySig
    _SmoothGaussian(Int32): PrivateScope, Public, HideBySig
    _SmoothGaussian(Int32, Int32, Double, Double): PrivateScope, Public, HideBySig
    Convolution(ConvolutionKernelF): PrivateScope, Public, HideBySig
    Integral(): PrivateScope, Public, HideBySig
    Integral(Image`2&(Out), Image`2&(Out)): PrivateScope, Public, HideBySig
    Integral(Image`2&(Out), Image`2&(Out), Image`2&(Out)): PrivateScope, Public, HideBySig
    ThresholdAdaptive(TColor, AdaptiveThresholdType, ThresholdType, Int32, TColor): PrivateScope, Public, HideBySig
    ThresholdToZero(TColor): PrivateScope, Public, HideBySig
    ThresholdToZeroInv(TColor): PrivateScope, Public, HideBySig
    ThresholdTrunc(TColor): PrivateScope, Public, HideBySig
    ThresholdBinary(TColor, TColor): PrivateScope, Public, HideBySig
    ThresholdBinaryInv(TColor, TColor): PrivateScope, Public, HideBySig
    _ThresholdToZero(TColor): PrivateScope, Public, HideBySig
    _ThresholdToZeroInv(TColor): PrivateScope, Public, HideBySig
    _ThresholdTrunc(TColor): PrivateScope, Public, HideBySig
    _ThresholdBinary(TColor, TColor): PrivateScope, Public, HideBySig
    _ThresholdBinaryInv(TColor, TColor): PrivateScope, Public, HideBySig
    AvgSdv(TColor&(Out), MCvScalar&(Out), Image`2): PrivateScope, Public, HideBySig
    AvgSdv(TColor&(Out), MCvScalar&(Out)): PrivateScope, Public, HideBySig
    CountNonzero(): PrivateScope, Public, HideBySig
    MinMax(Double[]&(Out), Double[]&(Out), Point[]&(Out), Point[]&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Flip(FlipType): PrivateScope, Public, HideBySig
    _Flip(FlipType): PrivateScope, Public, HideBySig
    ConcateVertical(Image`2): PrivateScope, Public, HideBySig
    ConcateHorizontal(Image`2): PrivateScope, Public, HideBySig
    GetMoments(Boolean): PrivateScope, Public, HideBySig
    _GammaCorrect(Double): PrivateScope, Public, HideBySig
    Split(): PrivateScope, Public, HideBySig
    Save(String): PrivateScope, Public, Virtual, HideBySig
    _EqualizeHist(): PrivateScope, Public, HideBySig
    FromIplImagePtr(IntPtr): PrivateScope, Public, Static, HideBySig
    ToJpegData(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    set_Data(TDepth[,,]): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
    get_MIplImage(): PrivateScope, Public, HideBySig, SpecialName
    set_ROI(Rectangle): PrivateScope, Public, HideBySig, SpecialName
    get_ROI(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfChannels(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ManagedArray(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ManagedArray(Array): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CvDepth(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsROISet(): PrivateScope, Public, HideBySig, SpecialName
    GetAverage(): PrivateScope, Public, HideBySig
    GetAverage(Image`2): PrivateScope, Public, HideBySig
    GetSum(): PrivateScope, Public, HideBySig
    SetValue(TColor): PrivateScope, Public, HideBySig
    SetValue(TColor, Image`2): PrivateScope, Public, HideBySig
    Copy(Image`2, Image`2): PrivateScope, Public, HideBySig
    Copy(Image`2): PrivateScope, Public, HideBySig
    Copy(Rectangle): PrivateScope, Public, HideBySig
    Copy(RotatedRect): PrivateScope, Public, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    CopyBlank(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    GetSubRect(Rectangle): PrivateScope, Public, HideBySig
    Draw(Rectangle, TColor, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Draw(Cross2DF, TColor, Int32): PrivateScope, Public, HideBySig
    Draw(LineSegment2DF, TColor, Int32, LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Draw(LineSegment2D, TColor, Int32, LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Draw(IConvexPolygonF, TColor, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FillConvexPoly(Point[], TColor, LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    DrawPolyline(Point[], Boolean, TColor, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    DrawPolyline(Point[][], Boolean, TColor, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Draw(CircleF, TColor, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Draw(Ellipse, TColor, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Draw(String, Point, FontFace, Double, TColor, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Draw(IInputArrayOfArrays, Int32, TColor, Int32(Optional, HasDefault), LineType(Optional, HasDefault), IInputArray(Optional, HasDefault), Int32(Optional, HasDefault), Point(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Draw(Point[], TColor, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Point(Optional, HasDefault)): PrivateScope, Public, HideBySig
    HoughLinesBinary(Double, Double, Int32, Double, Double): PrivateScope, Public, HideBySig
    HoughLines(Double, Double, Double, Double, Int32, Double, Double): PrivateScope, Public, HideBySig
    HoughCircles(TColor, TColor, Double, Double, Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Image`2): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32, TColor): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Point): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Point, TColor): PrivateScope, Public, HideBySig, SpecialName
    Sobel(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Laplace(Int32): PrivateScope, Public, HideBySig
    Canny(Double, Double): PrivateScope, Public, HideBySig
    Canny(Double, Double, Int32, Boolean): PrivateScope, Public, HideBySig
    FindCornerSubPix(PointF[][], Size, Size, MCvTermCriteria): PrivateScope, Public, HideBySig
    MatchTemplate(Image`2, TemplateMatchingType): PrivateScope, Public, HideBySig
    And(Image`2): PrivateScope, Public, HideBySig
    And(Image`2, Image`2): PrivateScope, Public, HideBySig
    And(TColor): PrivateScope, Public, HideBySig
    And(TColor, Image`2): PrivateScope, Public, HideBySig
    Or(Image`2): PrivateScope, Public, HideBySig
    Or(Image`2, Image`2): PrivateScope, Public, HideBySig
    Or(TColor): PrivateScope, Public, HideBySig
    Or(TColor, Image`2): PrivateScope, Public, HideBySig
    Xor(Image`2): PrivateScope, Public, HideBySig
    Xor(Image`2, Image`2): PrivateScope, Public, HideBySig
    Xor(TColor): PrivateScope, Public, HideBySig
    Xor(TColor, Image`2): PrivateScope, Public, HideBySig
    Not(): PrivateScope, Public, HideBySig
    Max(Image`2): PrivateScope, Public, HideBySig
    Max(Double): PrivateScope, Public, HideBySig
    Min(Image`2): PrivateScope, Public, HideBySig
    Min(Double): PrivateScope, Public, HideBySig
    InRange(TColor, TColor): PrivateScope, Public, HideBySig
    InRange(Image`2, Image`2): PrivateScope, Public, HideBySig
    Cmp(Image`2, CmpType): PrivateScope, Public, HideBySig
    Cmp(Double, CmpType): PrivateScope, Public, HideBySig
    Equals(Image`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GrabCut(Rectangle, Int32): PrivateScope, Public, HideBySig
    Sub(Image`2): PrivateScope, Public, HideBySig
    Sub(Image`2, Image`2): PrivateScope, Public, HideBySig
    Sub(TColor): PrivateScope, Public, HideBySig
    SubR(TColor): PrivateScope, Public, HideBySig
    SubR(TColor, Image`2): PrivateScope, Public, HideBySig
    Add(Image`2): PrivateScope, Public, HideBySig
    Add(Image`2, Image`2): PrivateScope, Public, HideBySig
    Add(TColor): PrivateScope, Public, HideBySig
    Mul(Image`2, Double): PrivateScope, Public, HideBySig
    Mul(Image`2): PrivateScope, Public, HideBySig
    Mul(Double): PrivateScope, Public, HideBySig
    Accumulate(Image`2, Image`2): PrivateScope, Public, HideBySig
    Accumulate(Image`2): PrivateScope, Public, HideBySig
    AddWeighted(Image`2, Double, Double, Double): PrivateScope, Public, HideBySig
    AccumulateWeighted(Image`2, Double): PrivateScope, Public, HideBySig
    AccumulateWeighted(Image`2, Double, Image`2): PrivateScope, Public, HideBySig
    AbsDiff(Image`2): PrivateScope, Public, HideBySig
    AbsDiff(TColor): PrivateScope, Public, HideBySig
    Pow(Double): PrivateScope, Public, HideBySig
    Exp(): PrivateScope, Public, HideBySig
    Log(): PrivateScope, Public, HideBySig
    Sample(LineSegment2D): PrivateScope, Public, HideBySig
    Sample(LineSegment2D, Connectivity): PrivateScope, Public, HideBySig
    Resize(Int32, Int32, Inter): PrivateScope, Public, HideBySig
    Resize(Int32, Int32, Inter, Boolean): PrivateScope, Public, HideBySig
    Resize(Double, Inter): PrivateScope, Public, HideBySig
    Rotate(Double, TColor): PrivateScope, Public, HideBySig
    WarpAffine(Mat, Inter, Warp, BorderType, TColor): PrivateScope, Public, HideBySig
    WarpAffine(Mat, Int32, Int32, Inter, Warp, BorderType, TColor): PrivateScope, Public, HideBySig
    WarpPerspective(Matrix`1, Inter, Warp, BorderType, TColor): PrivateScope, Public, HideBySig
Class Emgu.CV.KalmanFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Int32, Emgu.CV.CvEnum.DepthType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Mat StatePre 'get ' : 
    Emgu.CV.Mat StatePost 'get ' : 
    Emgu.CV.Mat TransitionMatrix 'get ' : 
    Emgu.CV.Mat ControlMatrix 'get ' : 
    Emgu.CV.Mat MeasurementMatrix 'get ' : 
    Emgu.CV.Mat ProcessNoiseCov 'get ' : 
    Emgu.CV.Mat MeasurementNoiseCov 'get ' : 
    Emgu.CV.Mat ErrorCovPre 'get ' : 
    Emgu.CV.Mat Gain 'get ' : 
    Emgu.CV.Mat ErrorCovPost 'get ' : 
  Methods:
    Predict(Mat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Correct(Mat): PrivateScope, Public, HideBySig
    get_StatePre(): PrivateScope, Public, HideBySig, SpecialName
    get_StatePost(): PrivateScope, Public, HideBySig, SpecialName
    get_TransitionMatrix(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlMatrix(): PrivateScope, Public, HideBySig, SpecialName
    get_MeasurementMatrix(): PrivateScope, Public, HideBySig, SpecialName
    get_ProcessNoiseCov(): PrivateScope, Public, HideBySig, SpecialName
    get_MeasurementNoiseCov(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorCovPre(): PrivateScope, Public, HideBySig, SpecialName
    get_Gain(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorCovPost(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Map`2[TColor,TDepth]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.Image`2[TColor,TDepth]
    Void .ctor(System.Drawing.RectangleF, System.Drawing.PointF, TColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF, System.Drawing.PointF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.RectangleF Area 'get ' : 
    System.Drawing.PointF Resolution 'get ' : 
    System.Drawing.RectangleF ROI 'get set' : 
  Methods:
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
    get_Resolution(): PrivateScope, Public, HideBySig, SpecialName
    MapPointToImagePoint(MCvPoint2D64f): PrivateScope, Public, HideBySig
    MapPointToImagePoint(PointF): PrivateScope, Public, HideBySig
    ImagePointToMapPoint(Point): PrivateScope, Public, HideBySig
    Copy(RectangleF): PrivateScope, Public, HideBySig
    set_ROI(RectangleF): PrivateScope, Public, HideBySig, SpecialName
    get_ROI(): PrivateScope, Public, HideBySig, SpecialName
    Draw(RectangleF, TColor, Int32): PrivateScope, Public, HideBySig
    Draw(LineSegment2DF, TColor, Int32, LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    Draw(CircleF, TColor, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    Draw(IConvexPolygonF, TColor, Int32): PrivateScope, Public, Virtual, HideBySig
    Draw(String, Point, FontFace, Double, TColor, Int32(Optional, HasDefault), LineType(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    DrawPolyline(PointF[], Boolean, TColor, Int32): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Class Emgu.CV.MatND`1[TDepth]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.CvArray`1[TDepth]
    Void .ctor(Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.MatND`1[TDepth]]
  Properties:
    Int32 NumberOfChannels 'get ' : 
    System.Array ManagedArray 'get set' : 
    Emgu.CV.Structure.MCvMatND MCvMatND 'get ' : 
  Methods:
    get_NumberOfChannels(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ManagedArray(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ManagedArray(Array): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
    ReadXml(XmlReader): PrivateScope, Public, Virtual, HideBySig
    WriteXml(XmlWriter): PrivateScope, Public, Virtual, HideBySig
    get_MCvMatND(): PrivateScope, Public, HideBySig, SpecialName
    Convert(): PrivateScope, Public, HideBySig
    Equals(MatND`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.MotionHistory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.DisposableObject
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Mat Mask 'get ' : 
  Methods:
    get_Mask(): PrivateScope, Public, HideBySig, SpecialName
    Update(Mat): PrivateScope, Public, HideBySig
    Update(Mat, DateTime): PrivateScope, Public, HideBySig
    GetMotionComponents(IOutputArray, VectorOfRect): PrivateScope, Public, HideBySig
    MotionInfo(Mat, Rectangle, Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
Class Emgu.CV.Ocl.Device: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Ocl.Device Default 'get ' : 
    IntPtr NativeDevicePointer 'get ' : 
    Boolean IsNVidia 'get ' : 
    Boolean IsIntel 'get ' : 
    Boolean IsAMD 'get ' : 
    Int32 AddressBits 'get ' : 
    Boolean LinkerAvailable 'get ' : 
    Boolean CompilerAvailable 'get ' : 
    Boolean Available 'get ' : 
    Int32 MaxWorkGroupSize 'get ' : 
    Int32 MaxComputeUnits 'get ' : 
    Int32 LocalMemSize 'get ' : 
    Int32 MaxMemAllocSize 'get ' : 
    Int32 DeviceVersionMajor 'get ' : 
    Int32 DeviceVersionMinor 'get ' : 
    Emgu.CV.Ocl.FpConfig HalfFPConfig 'get ' : 
    Emgu.CV.Ocl.FpConfig SingleFPConfig 'get ' : 
    Emgu.CV.Ocl.FpConfig DoubleFPConfig 'get ' : 
    Boolean HostUnifiedMemory 'get ' : 
    IntPtr GlobalMemSize 'get ' : 
    Int32 Image2DMaxWidth 'get ' : 
    Int32 Image2DMaxHeight 'get ' : 
    Emgu.CV.Ocl.DeviceType Type 'get ' : 
    System.String Name 'get ' : 
    System.String Version 'get ' : 
    System.String VendorName 'get ' : 
    System.String DriverVersion 'get ' : 
    System.String Extensions 'get ' : 
    System.String OpenCLVersion 'get ' : 
    System.String OpenCLCVersion 'get ' : 
  Methods:
    get_Default(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_NativeDevicePointer(): PrivateScope, Public, HideBySig, SpecialName
    Set(IntPtr): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_IsNVidia(): PrivateScope, Public, HideBySig, SpecialName
    get_IsIntel(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAMD(): PrivateScope, Public, HideBySig, SpecialName
    get_AddressBits(): PrivateScope, Public, HideBySig, SpecialName
    get_LinkerAvailable(): PrivateScope, Public, HideBySig, SpecialName
    get_CompilerAvailable(): PrivateScope, Public, HideBySig, SpecialName
    get_Available(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxWorkGroupSize(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxComputeUnits(): PrivateScope, Public, HideBySig, SpecialName
    get_LocalMemSize(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxMemAllocSize(): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceVersionMajor(): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceVersionMinor(): PrivateScope, Public, HideBySig, SpecialName
    get_HalfFPConfig(): PrivateScope, Public, HideBySig, SpecialName
    get_SingleFPConfig(): PrivateScope, Public, HideBySig, SpecialName
    get_DoubleFPConfig(): PrivateScope, Public, HideBySig, SpecialName
    get_HostUnifiedMemory(): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalMemSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Image2DMaxWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_Image2DMaxHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_VendorName(): PrivateScope, Public, HideBySig, SpecialName
    get_DriverVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_Extensions(): PrivateScope, Public, HideBySig, SpecialName
    get_OpenCLVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_OpenCLCVersion(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Ocl.DeviceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.Ocl.DeviceType Default = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.DeviceType Cpu = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.DeviceType Gpu = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.DeviceType Accelerator = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.DeviceType DGpu = 65540 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.DeviceType IGpu = 131076 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.DeviceType All = -1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.Ocl.FpConfig: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.Ocl.FpConfig Denorm = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.FpConfig InfNan = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.FpConfig RoundToNearest = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.FpConfig RoundToZero = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.FpConfig RoundToInf = 16 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.FpConfig Fma = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.FpConfig SoftFloat = 64 : Public, Static, Literal, HasDefault
    Emgu.CV.Ocl.FpConfig CorrectlyRoundedDivideSqrt = 128 : Public, Static, Literal, HasDefault
Class Emgu.CV.Ocl.OclInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    GetPlatformsInfo(): PrivateScope, Public, Static, HideBySig
    TypeToString(DepthType, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.Ocl.Image2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.UMat, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Ocl.Kernel: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Empty 'get ' : 
    IntPtr NativeKernelPtr 'get ' : 
  Methods:
    Create(String, ProgramSource, String(Optional, HasDefault), CvString(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Set(Int32, Image2D): PrivateScope, Public, HideBySig
    Set(Int32, UMat): PrivateScope, Public, HideBySig
    Set(Int32, Int32&): PrivateScope, Public, HideBySig
    Set(Int32, Single&): PrivateScope, Public, HideBySig
    Set(Int32, Double&): PrivateScope, Public, HideBySig
    Set(Int32, KernelArg): PrivateScope, Public, HideBySig
    Set(Int32, IntPtr, Int32): PrivateScope, Public, HideBySig
    Run(IntPtr[], IntPtr[], Boolean, Queue(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    get_NativeKernelPtr(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Ocl.KernelArg: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Flags, Emgu.CV.UMat, Int32, Int32, IntPtr, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Emgu.CV.Ocl.KernelArg+Flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Flags Local = 1 : Public, Static, Literal, HasDefault
    Flags ReadOnly = 2 : Public, Static, Literal, HasDefault
    Flags WriteOnly = 4 : Public, Static, Literal, HasDefault
    Flags ReadWrite = 6 : Public, Static, Literal, HasDefault
    Flags Constant = 8 : Public, Static, Literal, HasDefault
    Flags PtrOnly = 16 : Public, Static, Literal, HasDefault
    Flags NoSize = 256 : Public, Static, Literal, HasDefault
Class Emgu.CV.Ocl.PlatformInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Properties:
    System.String Name 'get ' : 
    System.String Version 'get ' : 
    System.String Vendor 'get ' : 
    Int32 DeviceNumber 'get ' : 
  Methods:
    GetDevice(Int32): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Vendor(): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceNumber(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Ocl.ProgramSource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Source 'get ' : 
  Methods:
    get_Source(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Ocl.Queue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Finish(): PrivateScope, Public, HideBySig
Struct Emgu.CV.CvEnum.NormType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.NormType C = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NormType L1 = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NormType L2 = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NormType NormMask = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NormType Relative = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NormType Diff = 16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NormType MinMax = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NormType DiffC = 17 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NormType DiffL1 = 18 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NormType DiffL2 = 20 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NormType RelativeC = 9 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NormType RelativeL1 = 10 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NormType RelativeL2 = 12 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ReduceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ReduceType ReduceSum = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ReduceType ReduceAvg = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ReduceType ReduceMax = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ReduceType ReduceMin = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ReduceDimension: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ReduceDimension SingleRow = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ReduceDimension SingleCol = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ReduceDimension Auto = -1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CmpType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CmpType Equal = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CmpType GreaterThan = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CmpType GreaterEqual = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CmpType LessThan = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CmpType LessEqual = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CmpType NotEqual = 5 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CapProp: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CapProp DC1394Off = -4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp DC1394ModeManual = -3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp DC1394ModeAuto = -2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp DC1394ModeOnePushAuto = -1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp PosMsec = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp PosFrames = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp PosAviRatio = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp FrameWidth = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp FrameHeight = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Fps = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp FourCC = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp FrameCount = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Format = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Mode = 9 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Brightness = 10 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Contrast = 11 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Staturation = 12 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Hue = 13 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Gain = 14 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Exposure = 15 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp ConvertRgb = 16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp WhiteBalanceBlueU = 17 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Rectification = 18 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Monochrome = 19 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Sharpness = 20 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp AutoExposure = 21 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Gamma = 22 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Temperature = 23 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Trigger = 24 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp TriggerDelay = 25 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp WhiteBalanceRedV = 26 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Zoom = 27 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Focus = 28 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Guid = 29 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp IsoSpeed = 30 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp MaxDC1394 = 31 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Backlight = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Pan = 33 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Tilt = 34 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Roll = 35 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Iris = 36 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Settings = 37 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp Autograb = 1024 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp SupportedPreviewSizesString = 1025 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp PreviewFormat = 1026 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniDepthGenerator = -2147483648 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniImageGenerator = 1073741824 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniGeneratorsMask = -1073741824 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniOutputMode = 100 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniFrameMaxDepth = 101 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniBaseline = 102 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniFocalLength = 103 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniRegistration = 104 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniRegistrationOn = 104 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniApproxFrameSync = 105 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniMaxBufferSize = 106 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniCircleBuffer = 107 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniMaxTimeDuration = 108 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniGeneratorPresent = 109 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniImageGeneratorPresent = 1073741933 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniImageGeneratorOutputMode = 1073741924 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniDepthGeneratorBaseline = -2147483546 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniDepthGeneratorFocalLength = -2147483545 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniDepthGeneratorRegistration = -2147483544 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp OpenniDepthGeneratorRegistrationOn = -2147483544 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp GstreamerQueueLength = 200 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp PvapiMulticastip = 300 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiDownsampling = 400 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiDataFormat = 401 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiOffsetX = 402 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiOffsetY = 403 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiTrgSource = 404 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiTrgSoftware = 405 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiGpiSelector = 406 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiGpiMode = 407 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiGpiLevel = 408 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiGpoSelector = 409 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiGpoMode = 410 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiLedSelector = 411 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiLedMode = 412 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiManualWb = 413 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiAutoWb = 414 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiAeag = 415 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiExpPriority = 416 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiAeMaxLimit = 417 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiAgMaxLimit = 418 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiAeagLevel = 419 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp XiTimeout = 420 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp AndroidFlashMode = 8001 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp AndroidFocusMode = 8002 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp AndroidWhiteBalance = 8003 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp AndroidAntibanding = 8004 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp AndroidFocalLength = 8005 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp AndroidFocusDistanceNear = 8006 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp AndroidFocusDistanceOptimal = 8007 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp AndroidFocusDistanceFar = 8008 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp IOSDeviceFocus = 9001 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp IOSDeviceExposure = 9002 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp IOSDeviceFlash = 9003 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp IOSDeviceWhitebalance = 9004 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp IOSDeviceTorch = 9005 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp GigaFrameOffsetX = 10001 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp GigaFrameOffsetY = 10002 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp GigaFrameWidthMax = 10003 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp GigaFrameHeighMax = 10004 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp GigaFrameSensWidth = 10005 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CapProp GigaFrameSensHeigh = 10006 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.NamedWindowType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.NamedWindowType Normal = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NamedWindowType AutoSize = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NamedWindowType Opengl = 4096 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NamedWindowType Fullscreen = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NamedWindowType FreeRatio = 256 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NamedWindowType KeepRatio = 0 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ChainApproxMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ChainApproxMethod ChainCode = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ChainApproxMethod ChainApproxNone = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ChainApproxMethod ChainApproxSimple = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ChainApproxMethod ChainApproxTc89L1 = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ChainApproxMethod ChainApproxTc89Kcos = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ChainApproxMethod LinkRuns = 5 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ColorConversion: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ColorConversion Bgr2Bgra = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2Rgba = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgra2Bgr = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgba2Rgb = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2Rgba = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2Bgra = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgba2Bgr = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgra2Rgb = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2Rgb = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2Bgr = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgra2Rgba = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgba2Bgra = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2Gray = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2Gray = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Gray2Bgr = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Gray2Rgb = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Gray2Bgra = 9 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Gray2Rgba = 9 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgra2Gray = 10 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgba2Gray = 11 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2Bgr565 = 12 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2Bgr565 = 13 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr5652Bgr = 14 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr5652Rgb = 15 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgra2Bgr565 = 16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgba2Bgr565 = 17 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr5652Bgra = 18 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr5652Rgba = 19 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Gray2Bgr565 = 20 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr5652Gray = 21 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2Bgr555 = 22 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2Bgr555 = 23 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr5552Bgr = 24 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr5552Rgb = 25 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgra2Bgr555 = 26 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgba2Bgr555 = 27 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr5552Bgra = 28 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr5552Rgba = 29 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Gray2Bgr555 = 30 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr5552Gray = 31 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2Xyz = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2Xyz = 33 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Xyz2Bgr = 34 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Xyz2Rgb = 35 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2YCrCb = 36 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2YCrCb = 37 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion YCrCb2Bgr = 38 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion YCrCb2Rgb = 39 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2Hsv = 40 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2Hsv = 41 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2Lab = 44 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2Lab = 45 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerBg2Bgr = 46 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGb2Bgr = 47 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerRg2Bgr = 48 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGr2Bgr = 49 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerBg2Rgb = 48 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGb2Rgb = 49 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerRg2Rgb = 46 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGr2Rgb = 47 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2Luv = 50 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2Luv = 51 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2Hls = 52 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2Hls = 53 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Hsv2Bgr = 54 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Hsv2Rgb = 55 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Lab2Bgr = 56 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Lab2Rgb = 57 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Luv2Bgr = 58 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Luv2Rgb = 59 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Hls2Bgr = 60 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Hls2Rgb = 61 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerBg2BgrVng = 62 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGb2BgrVng = 63 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerRg2BgrVng = 64 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGr2BgrVng = 65 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerBg2RgbVng = 64 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGb2RgbVng = 65 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerRg2RgbVng = 62 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGr2RgbVng = 63 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2HsvFull = 66 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2HsvFull = 67 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2HlsFull = 68 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2HlsFull = 69 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Hsv2BgrFull = 70 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Hsv2RgbFull = 71 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Hls2BgrFull = 72 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Hls2RgbFull = 73 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Lbgr2Lab = 74 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Lrgb2Lab = 75 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Lbgr2Luv = 76 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Lrgb2Luv = 77 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Lab2Lbgr = 78 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Lab2Lrgb = 79 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Luv2Lbgr = 80 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Luv2Lrgb = 81 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2Yuv = 82 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2Yuv = 83 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2Bgr = 84 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2Rgb = 85 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerBg2Gray = 86 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGb2Gray = 87 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerRg2Gray = 88 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGr2Gray = 89 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420I2Rgb = 90 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420I2Bgr = 91 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420Sp2Rgb = 92 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420Sp2Bgr = 93 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420I2Rgba = 94 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420I2Bgra = 95 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420Sp2Rgba = 96 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420Sp2Bgra = 97 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbYv12 = 98 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgrYv12 = 99 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbIyuv = 100 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgrIyuv = 101 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbI420 = 100 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgrI420 = 101 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420P2Rgb = 98 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420P2Bgr = 99 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbaYv12 = 102 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgraYv12 = 103 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbaIyuv = 104 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgraIyuv = 105 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbaI420 = 104 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgraI420 = 105 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420P2Rgba = 102 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420P2Bgra = 103 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2Gray420 = 106 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2GrayNv21 = 106 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2GrayNv12 = 106 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2GrayYv12 = 106 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2GrayIyuv = 106 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2GrayI420 = 106 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420Sp2Gray = 106 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv420P2Gray = 106 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbUyvy = 107 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgrUyvy = 108 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbY422 = 107 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgrY422 = 108 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbUynv = 107 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgrUynv = 108 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbaUyvy = 111 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgraUyvy = 112 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbaY422 = 111 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgraY422 = 112 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbaUynv = 111 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgraUynv = 112 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbYuy2 = 115 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgrYuy2 = 116 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbYvyu = 117 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgrYvyu = 118 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbYuyv = 115 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgrYuyv = 116 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbYunv = 115 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgrYunv = 116 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbaYuy2 = 119 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgraYuy2 = 120 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbaYvyu = 121 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgraYvyu = 122 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbaYuyv = 119 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgraYuyv = 120 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2RgbaYunv = 119 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2BgraYunv = 120 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2GrayUyvy = 123 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2GrayYuy2 = 124 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2GrayY422 = 123 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2GrayUynv = 123 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2GrayYvyu = 124 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2GrayYuyv = 124 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Yuv2GrayYunv = 124 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgba2MRgba = 125 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion MRgba2Rgba = 126 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2YuvI420 = 127 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2YuvI420 = 128 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2YuvIyuv = 127 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2YuvIyuv = 128 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgba2YuvI420 = 129 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgra2YuvI420 = 130 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgba2YuvIyuv = 129 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgra2YuvIyuv = 130 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgb2YuvYv12 = 131 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgr2YuvYv12 = 132 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Rgba2YuvYv12 = 133 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion Bgra2YuvYv12 = 134 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerBg2BgrEa = 135 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGb2BgrEa = 136 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerRg2BgrEa = 137 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGr2BgrEa = 138 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerBg2RgbEa = 137 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGb2RgbEa = 138 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerRg2RgbEa = 135 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion BayerGr2RgbEa = 136 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorConversion ColorcvtMax = 139 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.FontFace: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.FontFace HersheySimplex = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FontFace HersheyPlain = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FontFace HersheyDuplex = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FontFace HersheyComplex = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FontFace HersheyTriplex = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FontFace HersheyComplexSmall = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FontFace HersheyScriptSimplex = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FontFace HersheyScriptComplex = 7 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.GemmType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.GemmType Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.GemmType Src1Transpose = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.GemmType Src2Transpose = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.GemmType Src3Transpose = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.HoughType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.HoughType Gradient = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.InpaintType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.InpaintType NS = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.InpaintType Telea = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.EdgePreservingFilterFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.EdgePreservingFilterFlag RecursFilter = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.EdgePreservingFilterFlag NormconvFilter = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.Inter: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.Inter Nearest = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Inter Linear = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Inter Cubic = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Inter Area = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Inter Lanczos4 = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SmoothType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SmoothType BlurNoScale = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SmoothType Blur = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SmoothType Gaussian = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SmoothType Median = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SmoothType Bilateral = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ImreadModes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ImreadModes Unchanged = -1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImreadModes Grayscale = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImreadModes Color = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImreadModes AnyDepth = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImreadModes AnyColor = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImreadModes LoadGdal = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImreadModes ReducedGrayscale2 = 16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImreadModes ReducedColor2 = 17 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImreadModes ReducedGrayscale4 = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImreadModes ReducedColor4 = 33 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImreadModes ReducedGrayscale8 = 64 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImreadModes ReducedColor8 = 65 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ImwriteFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ImwriteFlags JpegQuality = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImwriteFlags JpegProgressive = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImwriteFlags JpegOptimize = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImwriteFlags JpegRstInterval = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImwriteFlags JpegLumaQuality = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImwriteFlags JpegChromaQuality = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImwriteFlags PngCompression = 16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImwriteFlags PngStrategy = 17 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImwriteFlags PngBilevel = 18 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImwriteFlags PxmBinary = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ImwriteFlags WebpQuality = 64 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.DepthType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.DepthType Default = -1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DepthType Cv8U = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DepthType Cv8S = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DepthType Cv16U = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DepthType Cv16S = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DepthType Cv32S = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DepthType Cv32F = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DepthType Cv64F = 6 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.RetrType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.RetrType External = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.RetrType List = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.RetrType Ccomp = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.RetrType Tree = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SeqEltype: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SeqEltype Point = 12 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqEltype Code = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqEltype Generic = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqEltype Ptr = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqEltype Ppoint = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqEltype Index = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqEltype GraphEdge = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqEltype GraphVertex = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqEltype TrainAtr = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqEltype ConnectedComp = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqEltype Point3D = 56 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SeqKind: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SeqKind Generic = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqKind Curve = 4096 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqKind BinTree = 8192 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqKind Graph = 4096 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqKind Subdiv2D = 8192 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SeqFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SeqFlag Closed = 16384 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqFlag Simple = 32768 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqFlag Convex = 65536 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqFlag Hole = 131072 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SeqType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SeqType PointSet = 12 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqType Point3DSet = 56 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqType Polyline = 4108 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqType Polygon = 20492 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SeqType SimplePolygon = 53260 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.TermCritType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.TermCritType Iter = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.TermCritType Eps = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ThresholdType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ThresholdType Binary = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ThresholdType BinaryInv = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ThresholdType Trunc = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ThresholdType ToZero = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ThresholdType ToZeroInv = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ThresholdType Mask = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ThresholdType Otsu = 8 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.TemplateMatchingType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.TemplateMatchingType Sqdiff = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.TemplateMatchingType SqdiffNormed = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.TemplateMatchingType Ccorr = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.TemplateMatchingType CcorrNormed = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.TemplateMatchingType Ccoeff = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.TemplateMatchingType CcoeffNormed = 5 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.IplDepth: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.IplDepth IplDepthSign = 2147483648 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IplDepth IplDepth_1U = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IplDepth IplDepth_8U = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IplDepth IplDepth16U = 16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IplDepth IplDepth32F = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IplDepth IplDepth_8S = 2147483656 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IplDepth IplDepth16S = 2147483664 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IplDepth IplDepth32S = 2147483680 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IplDepth IplDepth64F = 64 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.FlipType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.FlipType None = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FlipType Horizontal = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FlipType Vertical = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CheckType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CheckType NanInfinity = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CheckType Range = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CheckType Quite = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.FloodFillType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.FloodFillType Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FloodFillType FixedRange = 65536 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FloodFillType MaskOnly = 131072 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.Connectivity: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.Connectivity EightConnected = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Connectivity FourConnected = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.LineType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.LineType EightConnected = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LineType FourConnected = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LineType AntiAlias = 16 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.DistLabelType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.DistLabelType CComp = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DistLabelType Pixel = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.DistType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.DistType User = -1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DistType L1 = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DistType L2 = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DistType C = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DistType L12 = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DistType Fair = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DistType Welsch = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DistType Huber = 7 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.MulSpectrumsType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.MulSpectrumsType Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MulSpectrumsType DxtRows = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MulSpectrumsType DxtMulConj = 8 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.DxtType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.DxtType Forward = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DxtType Inverse = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DxtType Scale = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DxtType Rows = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DxtType InvScale = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.DctType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.DctType Forward = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DctType Inverse = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DctType Rows = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.FmType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.FmType SevenPoint = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FmType EightPoint = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FmType LMedsOnly = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FmType RansacOnly = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FmType LMeds = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FmType Ransac = 10 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.General: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.General MaxDim = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.General SeqMagicVal = 1117323264 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.General SetMagicVal = 1117257728 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ErrorCodes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ErrorCodes StsOk = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsBacktrace = -1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsError = -2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsInternal = -3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsNoMem = -4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsBadArg = -5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsBadFunc = -6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsNoConv = -7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsAutoTrace = -8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes HeaderIsNull = -9 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadImageSize = -10 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadOffset = -11 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadDataPtr = -12 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes Badstep = -13 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadModelOrChseq = -14 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadNumChannels = -15 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadNumChannel1U = -16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadDepth = -17 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadAlphaChannel = -18 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadOrder = -19 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadOrigin = -20 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadAlign = -21 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadCallback = -22 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadTileSize = -23 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadCoi = -24 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes BadRoiSize = -25 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes MaskIsTiled = -26 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsNullPtr = -27 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsVecLengthErr = -28 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsFilterStructContenterr = -29 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsKernelStructContenterr = -30 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsFilterOffSetErr = -31 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsBadSize = -201 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsDivByZero = -202 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsInplaceNotSupported = -203 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsObjectNotFound = -204 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsUnmatchedFormats = -205 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsBadFlag = -206 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsBadPoint = -207 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsBadMask = -208 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsUnmatchedSizes = -209 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsUnsupportedFormat = -210 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsOutOfRange = -211 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsParseError = -212 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsNotImplemented = -213 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ErrorCodes StsBadMemBlock = -214 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.Warp: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.Warp Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Warp FillOutliers = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Warp InverseMap = 16 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.AdaptiveThresholdType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.AdaptiveThresholdType MeanC = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.AdaptiveThresholdType GaussianC = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ElementShape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ElementShape Rectangle = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ElementShape Cross = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ElementShape Ellipse = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ElementShape Custom = 100 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.PcaType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.PcaType DataAsRow = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.PcaType DataAsCol = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.PcaType UseAvg = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.DecompMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.DecompMethod LU = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DecompMethod Svd = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DecompMethod Eig = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DecompMethod Cholesky = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DecompMethod QR = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DecompMethod Normal = 16 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CovarMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CovarMethod Scrambled = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CovarMethod Normal = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CovarMethod UseAvg = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CovarMethod Scale = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CovarMethod Rows = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CovarMethod Cols = 16 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SvdFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SvdFlag Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SvdFlag ModifyA = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SvdFlag NoUV = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SvdFlag FullUV = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.LKFlowFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.LKFlowFlag Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LKFlowFlag UserInitialFlow = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LKFlowFlag LKGetMinEigenvals = 8 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CalibType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CalibType Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibType UserIntrinsicGuess = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibType FixAspectRatio = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibType FixPrincipalPoint = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibType ZeroTangentDist = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibType FixFocalLength = 16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibType FixK1 = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibType FixK2 = 64 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibType FixK3 = 128 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibType FixK4 = 2048 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibType FixK5 = 4096 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibType FixK6 = 8192 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibType RationalModel = 16384 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CalibCbType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CalibCbType Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibCbType AdaptiveThresh = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibCbType NormalizeImage = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibCbType FilterQuads = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibCbType FastCheck = 8 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CalibCgType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CalibCgType SymmetricGrid = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibCgType AsymmetricGrid = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CalibCgType Clustering = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.EigobjType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.EigobjType NoCallback = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.EigobjType InputCallback = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.EigobjType OutputCallback = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.EigobjType BothCallback = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.NextEdgeType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.NextEdgeType NextAroundOrg = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NextEdgeType NextAroundDst = 34 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NextEdgeType PrevAroundOrg = 17 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NextEdgeType PreAroundDst = 51 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NextEdgeType NextAroundLeft = 19 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NextEdgeType NextAroundRight = 49 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NextEdgeType PrevAroundLeft = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NextEdgeType PrevAroundRight = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.Orientation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.Orientation Clockwise = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Orientation CounterClockwise = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.StereoBmPrefilter: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.StereoBmPrefilter NormalizedResponse = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.StereoBmPrefilter XSobel = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.HomographyMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.HomographyMethod Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HomographyMethod LMEDS = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HomographyMethod Ransac = 8 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ContoursMatchType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ContoursMatchType I1 = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ContoursMatchType I2 = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ContoursMatchType I3 = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.Subdiv2DPointLocationType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.Subdiv2DPointLocationType Error = -2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Subdiv2DPointLocationType OutsideRect = -1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Subdiv2DPointLocationType Inside = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Subdiv2DPointLocationType Vertex = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Subdiv2DPointLocationType OnEdge = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.StereoRectifyType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.StereoRectifyType Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.StereoRectifyType CalibZeroDisparity = 1024 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.BorderType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.BorderType NegativeOne = -1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BorderType Constant = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BorderType Replicate = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BorderType Reflect = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BorderType Wrap = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BorderType Reflect101 = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BorderType Transparent = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BorderType Default = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BorderType Isolated = 16 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.HaarDetectionType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.HaarDetectionType Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HaarDetectionType DoCannyPruning = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HaarDetectionType ScaleImage = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HaarDetectionType FindBiggestObject = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HaarDetectionType DoRoughSearch = 8 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.BackOrFront: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.BackOrFront Back = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BackOrFront Front = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.StorageOp: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.StorageOp Read = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.StorageOp Write = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.StorageOp Append = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.HistogramCompMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.HistogramCompMethod Correl = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HistogramCompMethod Chisqr = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HistogramCompMethod Intersect = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HistogramCompMethod Bhattacharyya = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HistogramCompMethod Hellinger = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HistogramCompMethod ChisqrAlt = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.OpticalflowFarnebackFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.OpticalflowFarnebackFlag Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.OpticalflowFarnebackFlag UseInitialFlow = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.OpticalflowFarnebackFlag FarnebackGaussian = 256 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.GrabcutInitType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.GrabcutInitType InitWithRect = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.GrabcutInitType InitWithMask = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.GrabcutInitType Eval = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CaptureType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CaptureType Any = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Vfw = 200 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType V4L = 200 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType V4L2 = 200 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Firewire = 300 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType IEEE1394 = 300 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType DC1394 = 300 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType CMU1394 = 300 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType QT = 500 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Unicap = 600 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType DShow = 700 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Pvapi = 800 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType OpenNI = 900 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType OpenNIAsus = 910 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Android = 1000 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType XiApi = 1100 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType AVFoundation = 1200 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Giganetix = 1300 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Msmf = 1400 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Winrt = 1410 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType IntelPerc = 1500 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Openni2 = 1600 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Openni2Asus = 1610 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Gphoto2 = 1700 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Gstreamer = 1800 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Ffmpeg = 1900 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CaptureType Images = 2000 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.KMeansInitType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.KMeansInitType RandomCenters = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.KMeansInitType UseInitialLabels = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.KMeansInitType PPCenters = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ColorMapType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ColorMapType Autumn = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorMapType Bone = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorMapType Jet = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorMapType Winter = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorMapType Rainbow = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorMapType Ocean = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorMapType Summer = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorMapType Spring = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorMapType Cool = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorMapType Hsv = 9 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorMapType Pink = 10 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ColorMapType Hot = 11 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SolveLPResult: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SolveLPResult Unbounded = -2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SolveLPResult Unfeasible = -1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SolveLPResult Single = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SolveLPResult Multi = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.MorphOp: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.MorphOp Erode = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MorphOp Dilate = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MorphOp Open = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MorphOp Close = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MorphOp Gradient = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MorphOp Tophat = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MorphOp Blackhat = 6 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.AccessType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.AccessType Read = 16777216 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.AccessType Write = 33554432 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.AccessType ReadWrite = 50331648 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.AccessType Mask = 50331648 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.AccessType Fast = 67108864 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.RectIntersectType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.RectIntersectType None = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.RectIntersectType Partial = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.RectIntersectType Full = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SolvePnpMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SolvePnpMethod Iterative = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SolvePnpMethod EPnP = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SolvePnpMethod P3P = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SolvePnpMethod Dls = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SolvePnpMethod UPnP = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.WhiteBalanceMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.WhiteBalanceMethod Simple = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.WhiteBalanceMethod Grayworld = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CloningMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CloningMethod Normal = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CloningMethod Mixed = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CloningMethod MonochromeTransfer = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ConnectecComponentsTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ConnectecComponentsTypes Left = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ConnectecComponentsTypes Top = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ConnectecComponentsTypes Width = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ConnectecComponentsTypes Height = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ConnectecComponentsTypes Area = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ConnectecComponentsTypes Max = 5 : Public, Static, Literal, HasDefault
Class Emgu.CV.Fisheye: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ProjectPoints(IInputArray, IOutputArray, IInputArray, IInputArray, IInputArray, IInputArray, Double(Optional, HasDefault), IOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DistortPoints(IInputArray, IOutputArray, IInputArray, IInputArray, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    UndistorPoints(IInputArray, IOutputArray, IInputArray, IInputArray, IInputArray(Optional, HasDefault), IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    InitUndistorRectifyMap(IInputArray, IInputArray, IInputArray, IInputArray, Size, DepthType, IOutputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
    UndistorImage(IInputArray, IOutputArray, IInputArray, IInputArray, IInputArray(Optional, HasDefault), Size(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EstimateNewCameraMatrixForUndistorRectify(IInputArray, IInputArray, Size, IInputArray, IOutputArray, Double(Optional, HasDefault), Size(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SteteoRectify(IInputArray, IInputArray, IInputArray, IInputArray, Size, IInputArray, IInputArray, IOutputArray, IOutputArray, IOutputArray, IOutputArray, IOutputArray, Int32, Size(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Calibrate(IInputArray, IInputArray, Size, IInputOutputArray, IInputOutputArray, IOutputArray, IOutputArray, CalibrationFlag, MCvTermCriteria): PrivateScope, Public, Static, HideBySig
    StereoCalibrate(IInputArray, IInputArray, IInputArray, IInputOutputArray, IInputOutputArray, IInputOutputArray, IInputOutputArray, Size, IOutputArray, IOutputArray, CalibrationFlag, MCvTermCriteria): PrivateScope, Public, Static, HideBySig
Struct Emgu.CV.Fisheye+CalibrationFlag: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CalibrationFlag Default = 0 : Public, Static, Literal, HasDefault
    CalibrationFlag UseIntrinsicGuess = 1 : Public, Static, Literal, HasDefault
    CalibrationFlag RecomputeExtrinsic = 2 : Public, Static, Literal, HasDefault
    CalibrationFlag CheckCond = 4 : Public, Static, Literal, HasDefault
    CalibrationFlag FixSkew = 8 : Public, Static, Literal, HasDefault
    CalibrationFlag FixK1 = 16 : Public, Static, Literal, HasDefault
    CalibrationFlag FixK2 = 32 : Public, Static, Literal, HasDefault
    CalibrationFlag FixK3 = 64 : Public, Static, Literal, HasDefault
    CalibrationFlag FixK4 = 128 : Public, Static, Literal, HasDefault
    CalibrationFlag FixIntrinsic = 256 : Public, Static, Literal, HasDefault
Struct Emgu.CV.Structure.ColorPoint: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Emgu.CV.Structure.MCvPoint3D32f Position : Public
    Byte Blue : Public
    Byte Green : Public
    Byte Red : Public
Struct Emgu.CV.Structure.Cuboid: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Emgu.CV.Structure.MCvPoint3D64f Min : Public
    Emgu.CV.Structure.MCvPoint3D64f Max : Public
  Properties:
    Emgu.CV.Structure.MCvPoint3D64f Centroid 'get ' : 
  Methods:
    Contains(MCvPoint3D64f): PrivateScope, Public, HideBySig
    get_Centroid(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.CvStructSizes: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 CvPoint : Public
    Int32 CvPoint2D32f : Public
    Int32 CvPoint3D32f : Public
    Int32 CvSize : Public
    Int32 CvSize2D32f : Public
    Int32 CvScalar : Public
    Int32 CvRect : Public
    Int32 CvBox2D : Public
    Int32 CvMat : Public
    Int32 CvMatND : Public
    Int32 CvTermCriteria : Public
    Int32 IplImage : Public
Struct Emgu.CV.Structure.MCvAvgComp: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Drawing.Rectangle Rect : Public
    Int32 Neighbors : Public
Struct Emgu.CV.Structure.MCvMat: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Type : Public
    Int32 Step : Public
    IntPtr Refcount : Public
    Int32 HdrRefcount : Public
    IntPtr Data : Public
    Int32 Rows : Public
    Int32 Cols : Public
  Properties:
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    Int32 NumberOfChannels 'get ' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfChannels(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.MCvMatND: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 type : Public
    Int32 dims : Public
    IntPtr refcount : Public
    Int32 hdr_refcount : Public
    IntPtr data : Public
    Dimension dim0 : Public
    Dimension dim1 : Public
    Dimension dim2 : Public
    Dimension dim3 : Public
    Dimension dim4 : Public
    Dimension dim5 : Public
    Dimension dim6 : Public
    Dimension dim7 : Public
    Dimension dim8 : Public
    Dimension dim9 : Public
    Dimension dim10 : Public
    Dimension dim11 : Public
    Dimension dim12 : Public
    Dimension dim13 : Public
    Dimension dim14 : Public
    Dimension dim15 : Public
    Dimension dim16 : Public
    Dimension dim17 : Public
    Dimension dim18 : Public
    Dimension dim19 : Public
    Dimension dim20 : Public
    Dimension dim21 : Public
    Dimension dim22 : Public
    Dimension dim23 : Public
    Dimension dim24 : Public
    Dimension dim25 : Public
    Dimension dim26 : Public
    Dimension dim27 : Public
    Dimension dim28 : Public
    Dimension dim29 : Public
    Dimension dim30 : Public
    Dimension dim31 : Public
  Properties:
    Dimension[] dim 'get ' : 
  Methods:
    get_dim(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.MCvMatND+Dimension: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Int32 Size 'get set' : 
    Int32 Step 'get set' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Step(): PrivateScope, Public, HideBySig, SpecialName
    set_Step(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.MCvMoments: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double M00 : Public
    Double M10 : Public
    Double M01 : Public
    Double M20 : Public
    Double M11 : Public
    Double M02 : Public
    Double M30 : Public
    Double M21 : Public
    Double M12 : Public
    Double M03 : Public
    Double Mu20 : Public
    Double Mu11 : Public
    Double Mu02 : Public
    Double Mu30 : Public
    Double Mu21 : Public
    Double Mu12 : Public
    Double Mu03 : Public
    Double InvSqrtM00 : Public
  Properties:
    Emgu.CV.Structure.MCvPoint2D64f GravityCenter 'get ' : 
  Methods:
    get_GravityCenter(): PrivateScope, Public, HideBySig, SpecialName
    GetSpatialMoment(Int32, Int32): PrivateScope, Public, HideBySig
    GetCentralMoment(Int32, Int32): PrivateScope, Public, HideBySig
    GetNormalizedCentralMoment(Int32, Int32): PrivateScope, Public, HideBySig
    GetHuMoment(): PrivateScope, Public, HideBySig
Struct Emgu.CV.Structure.MCvObjectDetection: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Drawing.Rectangle Rect : Public
    Single Score : Public
    Int32 ClassId : Public
Struct Emgu.CV.Structure.MCvPoint2D64f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.MCvPoint2D64f]
    Emgu.Util.IInterpolatable`1[Emgu.CV.Structure.MCvPoint2D64f]
  Fields:
    Double X : Public
    Double Y : Public
  Methods:
    op_Addition(MCvPoint2D64f, MCvPoint2D64f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(MCvPoint2D64f, MCvPoint2D64f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(MCvPoint2D64f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, MCvPoint2D64f): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(MCvPoint2D64f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.MCvPoint3D32f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.MCvPoint3D32f]
  Fields:
    Single X : Public
    Single Y : Public
    Single Z : Public
  Properties:
    Double Norm 'get ' : 
  Methods:
    CrossProduct(MCvPoint3D32f): PrivateScope, Public, HideBySig
    DotProduct(MCvPoint3D32f): PrivateScope, Public, HideBySig
    get_Norm(): PrivateScope, Public, HideBySig, SpecialName
    GetNormalizedPoint(): PrivateScope, Public, HideBySig
    op_Implicit(MCvPoint3D32f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(MCvPoint3D32f, MCvPoint3D32f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(MCvPoint3D32f, MCvPoint3D32f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(MCvPoint3D32f, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, MCvPoint3D32f): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(MCvPoint3D32f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.MCvPoint3D64f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.MCvPoint3D64f]
  Fields:
    Double X : Public
    Double Y : Public
    Double Z : Public
  Methods:
    CrossProduct(MCvPoint3D64f): PrivateScope, Public, HideBySig
    DotProduct(MCvPoint3D64f): PrivateScope, Public, HideBySig
    op_Addition(MCvPoint3D64f, MCvPoint3D64f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(MCvPoint3D64f, MCvPoint3D64f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(MCvPoint3D64f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, MCvPoint3D64f): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(MCvPoint3D64f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.MCvScalar: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.Util.ICodeGenerable
    System.IEquatable`1[Emgu.CV.Structure.MCvScalar]
  Fields:
    Double V0 : Public
    Double V1 : Public
    Double V2 : Public
    Double V3 : Public
  Methods:
    ToArray(): PrivateScope, Public, HideBySig
    ToCode(ProgrammingLanguage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.MCvSlice: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 start_index : Public
    Int32 end_index : Public
  Properties:
    Emgu.CV.Structure.MCvSlice WholeSeq 'get ' : 
  Methods:
    get_WholeSeq(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Emgu.CV.Structure.MCvTermCriteria: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Emgu.CV.CvEnum.TermCritType Type : Public
    Int32 MaxIter : Public
    Double Epsilon : Public
Struct Emgu.CV.Structure.MDMatch: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 QueryIdx : Public
    Int32 TrainIdx : Public
    Int32 ImgIdx : Public
    Single Distance : Public
Struct Emgu.CV.Structure.MIplImage: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 NSize : Public
    Int32 ID : Public
    Int32 NChannels : Public
    Int32 AlphaChannel : Public
    Emgu.CV.CvEnum.IplDepth Depth : Public
    Byte ColorModel0 : Public
    Byte ColorModel1 : Public
    Byte ColorModel2 : Public
    Byte ColorModel3 : Public
    Byte ChannelSeq0 : Public
    Byte ChannelSeq1 : Public
    Byte ChannelSeq2 : Public
    Byte ChannelSeq3 : Public
    Int32 DataOrder : Public
    Int32 Origin : Public
    Int32 Align : Public
    Int32 Width : Public
    Int32 Height : Public
    IntPtr Roi : Public
    IntPtr MaskROI : Public
    IntPtr ImageId : Public
    IntPtr TileInfo : Public
    Int32 ImageSize : Public
    IntPtr ImageData : Public
    Int32 WidthStep : Public
    Int32 BorderMode0 : Public
    Int32 BorderMode1 : Public
    Int32 BorderMode2 : Public
    Int32 BorderMode3 : Public
    Int32 BorderConst0 : Public
    Int32 BorderConst1 : Public
    Int32 BorderConst2 : Public
    Int32 BorderConst3 : Public
    IntPtr ImageDataOrigin : Public
Struct Emgu.CV.Structure.MKeyPoint: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Drawing.PointF Point : Public
    Single Size : Public
    Single Angle : Public
    Single Response : Public
    Int32 Octave : Public
    Int32 ClassId : Public
Struct Emgu.CV.Structure.Range: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.Range]
  Properties:
    Emgu.CV.Structure.Range All 'get ' : 
    Int32 Start 'get set' : 
    Int32 End  'get set' : 
  Methods:
    get_All(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Start(): PrivateScope, Public, HideBySig, SpecialName
    set_Start(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_End(): PrivateScope, Public, HideBySig, SpecialName
    set_End(Int32): PrivateScope, Public, HideBySig, SpecialName
    Equals(Range): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.RangeF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.RangeF]
  Properties:
    Single Min 'get set' : 
    Single Max 'get set' : 
  Methods:
    get_Min(): PrivateScope, Public, HideBySig, SpecialName
    set_Min(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Max(): PrivateScope, Public, HideBySig, SpecialName
    set_Max(Single): PrivateScope, Public, HideBySig, SpecialName
    Equals(RangeF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Emgu.CV.IConvexPolygonF: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetVertices(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Emgu.CV.Structure.RotatedRect: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, System.Drawing.SizeF, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IConvexPolygonF
    System.IEquatable`1[Emgu.CV.Structure.RotatedRect]
  Fields:
    System.Drawing.PointF Center : Public
    System.Drawing.SizeF Size : Public
    Single Angle : Public
  Properties:
    Emgu.CV.Structure.RotatedRect Empty 'get ' : 
  Methods:
    Offset(Int32, Int32): PrivateScope, Public, HideBySig
    get_Empty(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetVertices(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MinAreaRect(): PrivateScope, Public, HideBySig
    Equals(RotatedRect): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Implicit(RectangleF): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.CalibrateCRF: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Methods:
    Process(IInputArray, IOutputArray, IInputArray): PrivateScope, Public, HideBySig
Class Emgu.CV.CalibrateDebevec: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.CalibrateCRF
    Void .ctor(Int32, Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.CalibrateRobertson: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.CalibrateCRF
    Void .ctor(Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.MergeExposures: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Methods:
    Process(IInputArray, IOutputArray, IInputArray, IInputArray): PrivateScope, Public, HideBySig
Class Emgu.CV.MergeDebevec: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.MergeExposures
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.MergeMertens: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.MergeExposures
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.MergeRobertson: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.MergeExposures
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Tonemap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Process(IInputArray, IOutputArray): PrivateScope, Public, HideBySig
Class Emgu.CV.TonemapDrago: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Tonemap
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.TonemapDurand: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Tonemap
    Void .ctor(Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.TonemapReinhard: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Tonemap
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.TonemapMantiuk: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Tonemap
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Emgu.CV.Structure.LineSegment2D: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.Point, System.Drawing.Point): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point P1 'get set' : 
    System.Drawing.Point P2 'get set' : 
    System.Drawing.PointF Direction 'get ' : 
    Double Length 'get ' : 
  Methods:
    get_P1(): PrivateScope, Public, HideBySig, SpecialName
    set_P1(Point): PrivateScope, Public, HideBySig, SpecialName
    get_P2(): PrivateScope, Public, HideBySig, SpecialName
    set_P2(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    Side(Point): PrivateScope, Public, HideBySig
    GetExteriorAngleDegree(LineSegment2D): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.LineSegment2DF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, System.Drawing.PointF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF P1 'get set' : 
    System.Drawing.PointF P2 'get set' : 
    Double Length 'get ' : 
    System.Drawing.PointF Direction 'get ' : 
  Methods:
    get_P1(): PrivateScope, Public, HideBySig, SpecialName
    set_P1(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_P2(): PrivateScope, Public, HideBySig, SpecialName
    set_P2(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    YByX(Single): PrivateScope, Public, HideBySig
    Side(PointF): PrivateScope, Public, HideBySig
    GetExteriorAngleDegree(LineSegment2DF): PrivateScope, Public, HideBySig
Struct Emgu.CV.Structure.LineSegment3DF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Emgu.CV.Structure.MCvPoint3D32f, Emgu.CV.Structure.MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Structure.MCvPoint3D32f P1 'get set' : 
    Emgu.CV.Structure.MCvPoint3D32f P2 'get set' : 
    Double Length 'get ' : 
  Methods:
    get_P1(): PrivateScope, Public, HideBySig, SpecialName
    set_P1(MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName
    get_P2(): PrivateScope, Public, HideBySig, SpecialName
    set_P2(MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.PointCollection: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    EllipseLeastSquareFitting(PointF[]): PrivateScope, Public, Static, HideBySig
    PolyLine(PointF[], Boolean): PrivateScope, Public, Static, HideBySig
    PolyLine(Point[], Boolean): PrivateScope, Public, Static, HideBySig
    BoundingRectangle(PointF[]): PrivateScope, Public, Static, HideBySig
    ReprojectImageTo3D(IInputArray, IInputArray): PrivateScope, Public, Static, HideBySig
    GeneratePointCloud(Ellipse, Int32): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.Reflection.ExposableMethodAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Exposable 'get set' : 
    System.String Category 'get set' : 
    Int32[] GenericParametersOptionSizes 'get set' : 
    System.Type[] GenericParametersOptions 'get set' : 
  Methods:
    get_Exposable(): PrivateScope, Public, HideBySig, SpecialName
    set_Exposable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Category(): PrivateScope, Public, HideBySig, SpecialName
    set_Category(String): PrivateScope, Public, HideBySig, SpecialName
    get_GenericParametersOptionSizes(): PrivateScope, Public, HideBySig, SpecialName
    set_GenericParametersOptionSizes(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_GenericParametersOptions(): PrivateScope, Public, HideBySig, SpecialName
    set_GenericParametersOptions(Type[]): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Reflection.GenericParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Type, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type SelectedType 'get set' : 
    System.Type[] AvailableTypes 'get set' : 
  Methods:
    get_SelectedType(): PrivateScope, Public, HideBySig, SpecialName
    set_SelectedType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_AvailableTypes(): PrivateScope, Public, HideBySig, SpecialName
    set_AvailableTypes(Type[]): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Reflection.ReflectColorType: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetDisplayColorOfChannels(IColor): PrivateScope, Public, Static, HideBySig
    GetNamesOfChannels(IColor): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.Reflection.ReflectIImage: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetImageMethods(IImage): PrivateScope, Public, Static, HideBySig
    GetTypeOfColor(IImage): PrivateScope, Public, Static, HideBySig
    GetTypeOfDepth(IImage): PrivateScope, Public, Static, HideBySig
    GetPixelColor(IImage, Point): PrivateScope, Public, Static, HideBySig
Struct Emgu.CV.Structure.CircleF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.CircleF]
  Properties:
    System.Drawing.PointF Center 'get set' : 
    Single Radius 'get set' : 
    Double Area 'get ' : 
  Methods:
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    set_Radius(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
    Equals(CircleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.Cross2DF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF Center 'get set' : 
    System.Drawing.SizeF Size 'get set' : 
    Emgu.CV.Structure.LineSegment2DF Horizontal 'get ' : 
    Emgu.CV.Structure.LineSegment2DF Vertical 'get ' : 
  Methods:
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(SizeF): PrivateScope, Public, HideBySig, SpecialName
    get_Horizontal(): PrivateScope, Public, HideBySig, SpecialName
    get_Vertical(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.Ellipse: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, System.Drawing.SizeF, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Structure.RotatedRect): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Structure.RotatedRect RotatedRect 'get set' : 
  Methods:
    get_RotatedRect(): PrivateScope, Public, HideBySig, SpecialName
    set_RotatedRect(RotatedRect): PrivateScope, Public, HideBySig, SpecialName
Interface Emgu.CV.IConvexPolygon: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetVertices(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Emgu.CV.Structure.Triangle2DF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, System.Drawing.PointF, System.Drawing.PointF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IConvexPolygonF
    System.IEquatable`1[Emgu.CV.Structure.Triangle2DF]
  Properties:
    System.Drawing.PointF V0 'get set' : 
    System.Drawing.PointF V1 'get set' : 
    System.Drawing.PointF V2 'get set' : 
    Double Area 'get ' : 
    System.Drawing.PointF Centeroid 'get ' : 
  Methods:
    get_V0(): PrivateScope, Public, HideBySig, SpecialName
    set_V0(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_V1(): PrivateScope, Public, HideBySig, SpecialName
    set_V1(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_V2(): PrivateScope, Public, HideBySig, SpecialName
    set_V2(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
    get_Centeroid(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Triangle2DF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetVertices(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.Triangle3DF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Emgu.CV.Structure.MCvPoint3D32f, Emgu.CV.Structure.MCvPoint3D32f, Emgu.CV.Structure.MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.Triangle3DF]
  Properties:
    Emgu.CV.Structure.MCvPoint3D32f V0 'get set' : 
    Emgu.CV.Structure.MCvPoint3D32f V1 'get set' : 
    Emgu.CV.Structure.MCvPoint3D32f V2 'get set' : 
    Double Area 'get ' : 
    Emgu.CV.Structure.MCvPoint3D32f Normal 'get ' : 
    Emgu.CV.Structure.MCvPoint3D32f Centeroid 'get ' : 
  Methods:
    get_V0(): PrivateScope, Public, HideBySig, SpecialName
    set_V0(MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName
    get_V1(): PrivateScope, Public, HideBySig, SpecialName
    set_V1(MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName
    get_V2(): PrivateScope, Public, HideBySig, SpecialName
    set_V2(MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    get_Centeroid(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Triangle3DF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.SparseMatrix`1[TDepth]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Item [Int32, Int32] 'get set' : 
  Methods:
    get_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32, Double): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.StereoBM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IStereoMatcher
  Properties:
    IntPtr StereoMatcherPtr 'get ' : 
  Methods:
    get_StereoMatcherPtr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.StereoMatcherExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    Compute(IStereoMatcher, IInputArray, IInputArray, IOutputArray): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.StereoSGBM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Mode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IStereoMatcher
  Properties:
    IntPtr StereoMatcherPtr 'get ' : 
  Methods:
    get_StereoMatcherPtr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Emgu.CV.StereoSGBM+Mode: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mode SGBM = 0 : Public, Static, Literal, HasDefault
    Mode HH = 1 : Public, Static, Literal, HasDefault
Class Emgu.CV.Subdiv2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Drawing.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Insert(PointF[], Boolean): PrivateScope, Public, HideBySig
    Insert(PointF): PrivateScope, Public, HideBySig
    Locate(PointF, Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    FindNearest(PointF, PointF&(Out)): PrivateScope, Public, HideBySig
    GetVoronoiFacets(Int32[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetDelaunayTriangles(Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.VoronoiFacet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Drawing.PointF, System.Drawing.PointF[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF Point 'get set' : 
    System.Drawing.PointF[] Vertices 'get set' : 
  Methods:
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
    set_Point(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_Vertices(): PrivateScope, Public, HideBySig, SpecialName
    set_Vertices(PointF[]): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Tiff.TiffWriter`2[TColor,TDepth]: AutoLayout, AnsiClass, Class, Public
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteImage(Image`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteGeoTag(Double[], Double[]): PrivateScope, Public, HideBySig
Class Emgu.CV.Tiff.TileTiffWriter`2[TColor,TDepth]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.Tiff.TiffWriter`2[TColor,TDepth]
    Void .ctor(System.String, System.Drawing.Size, System.Drawing.Size): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 TileSizeInBytes 'get ' : 
    Int32 TileRowSizeInBytes 'get ' : 
    System.Drawing.Size TileSize 'get ' : 
  Methods:
    WriteTile(Int32, Int32, Image`2): PrivateScope, Public, HideBySig
    get_TileSizeInBytes(): PrivateScope, Public, HideBySig, SpecialName
    get_TileRowSizeInBytes(): PrivateScope, Public, HideBySig, SpecialName
    get_TileSize(): PrivateScope, Public, HideBySig, SpecialName
    WriteImage(Image`2): PrivateScope, Public, Virtual, HideBySig
Class Emgu.CV.TimedImage`2[TColor,TDepth]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.Image`2[TColor,TDepth]
    Void .ctor(Int32, Int32, TColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.DateTime Timestamp 'get set' : 
  Methods:
    get_Timestamp(): PrivateScope, Public, HideBySig, SpecialName
    set_Timestamp(DateTime): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.UMat: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Emgu.CV.MatDataAllocator
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Emgu.CV.CvEnum.DepthType, Int32, Usage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size, Emgu.CV.CvEnum.DepthType, Int32, Usage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.UMat, System.Drawing.Rectangle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.UMat, Emgu.CV.Structure.Range, Emgu.CV.Structure.Range): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Emgu.CV.CvEnum.ImreadModes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IImage
    System.ICloneable
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.IEquatable`1[Emgu.CV.UMat]
    System.Runtime.Serialization.ISerializable
  Properties:
    Byte[] Bytes 'get set' : 
    System.Drawing.Size Size 'get ' : 
    Int32 Rows 'get ' : 
    Int32 Cols 'get ' : 
    Int32 ElementSize 'get ' : 
    System.Drawing.Bitmap Bitmap 'get ' : 
    Boolean IsContinuous 'get ' : 
    Boolean IsSubmatrix 'get ' : 
    Emgu.CV.CvEnum.DepthType Depth 'get ' : 
    Boolean IsEmpty 'get ' : 
    Int32 NumberOfChannels 'get ' : 
    IntPtr Total 'get ' : 
    Int32 Dims 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Bytes(): PrivateScope, Public, HideBySig, SpecialName
    set_Bytes(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    Create(Int32, Int32, DepthType, Int32, Usage(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    get_Cols(): PrivateScope, Public, HideBySig, SpecialName
    get_ElementSize(): PrivateScope, Public, HideBySig, SpecialName
    CopyTo(IOutputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetTo(IInputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetTo(MCvScalar, IInputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetMat(AccessType): PrivateScope, Public, HideBySig
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reshape(Int32, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ToImage(): PrivateScope, Public, HideBySig
    get_Bitmap(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MinMax(Double[]&(Out), Double[]&(Out), Point[]&(Out), Point[]&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ConvertTo(IOutputArray, DepthType, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Split(): PrivateScope, Public, HideBySig
    Save(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, HideBySig
    Equals(UMat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[]): PrivateScope, Public, HideBySig
    SetTo(T[]): PrivateScope, Public, HideBySig
    Dot(IInputArray): PrivateScope, Public, HideBySig
    Row(Int32): PrivateScope, Public, HideBySig
    Col(Int32): PrivateScope, Public, HideBySig
    get_IsContinuous(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSubmatrix(): PrivateScope, Public, HideBySig, SpecialName
    get_Depth(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfChannels(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Total(): PrivateScope, Public, HideBySig, SpecialName
    get_Dims(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.UMat+Usage: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Usage Default = 0 : Public, Static, Literal, HasDefault
    Usage AllocateHostMemory = 1 : Public, Static, Literal, HasDefault
    Usage AllocateDeviceMemory = 2 : Public, Static, Literal, HasDefault
    Usage AllocateSharedMemory = 4 : Public, Static, Literal, HasDefault
Class Emgu.CV.Util.BinaryFileStorage`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Properties:
    System.String FileName 'get ' : 
  Methods:
    Append(IEnumerable`1): PrivateScope, Public, HideBySig
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    EstimateSize(): PrivateScope, Public, HideBySig
    Peek(): PrivateScope, Public, HideBySig
    GetSubsamples(Int32): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.Util.CvException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(Int32, System.String, System.String, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Status 'get set' : 
    System.String ErrorStr 'get ' : 
    System.String FunctionName 'get set' : 
    System.String ErrorMessage 'get set' : 
    System.String FileName 'get set' : 
    Int32 Line 'get set' : 
  Methods:
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    set_Status(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorStr(): PrivateScope, Public, HideBySig, SpecialName
    get_FunctionName(): PrivateScope, Public, HideBySig, SpecialName
    set_FunctionName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorMessage(): PrivateScope, Public, HideBySig, SpecialName
    set_ErrorMessage(String): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Line(): PrivateScope, Public, HideBySig, SpecialName
    set_Line(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.CvString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Util.CvToolbox: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Drawing.Imaging.ColorPalette GrayscalePalette : Public, Static, InitOnly
  Methods:
    ColorPaletteToLookupTable(ColorPalette, Matrix`1&(Out), Matrix`1&(Out), Matrix`1&(Out), Matrix`1&(Out)): PrivateScope, Public, Static, HideBySig
    GetMatrixFromArrays(T[][]): PrivateScope, Public, Static, HideBySig
    GetMatrixFromPoints(MCvPoint2D64f[][]): PrivateScope, Public, Static, HideBySig
    GetMinMax(IEnumerable`1, MCvPoint3D64f&(Out), MCvPoint3D64f&(Out)): PrivateScope, Public, Static, HideBySig
    CopyVector(TData[], IntPtr, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CopyMatrix(TData[][], IntPtr): PrivateScope, Public, Static, HideBySig
    CopyMatrix(IntPtr, D[][]): PrivateScope, Public, Static, HideBySig
    Memcpy(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    GetColorCvtCode(Type, Type): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.Util.DataLogger: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Events:
    System.EventHandler`1[Emgu.Util.EventArgs`1[System.IntPtr]] OnDataReceived: 
  Methods:
    add_OnDataReceived(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_OnDataReceived(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    Log(IntPtr, Int32): PrivateScope, Public, HideBySig
Class Emgu.CV.Util.DataLogger`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :Emgu.Util.DisposableObject
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr Ptr 'get ' : 
  Events:
    System.EventHandler`1[Emgu.Util.EventArgs`1[T]] OnDataReceived: 
  Methods:
    add_OnDataReceived(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_OnDataReceived(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    Log(T, Int32): PrivateScope, Public, HideBySig
    get_Ptr(): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(DataLogger`1): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.AlgorithmExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Read(IAlgorithm, FileNode): PrivateScope, Public, Static, HideBySig
    Write(IAlgorithm, FileStorage): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.IInputArrayExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsUmat(IInputArray): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.InputArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(IntPtr, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsMat 'get ' : 
    Boolean IsUMat 'get ' : 
    Boolean IsMatVector 'get ' : 
    Boolean IsUMatVector 'get ' : 
    Boolean IsMatx 'get ' : 
    Type Kind  'get ' : 
  Methods:
    GetEmpty(): PrivateScope, Public, Static, HideBySig
    GetMat(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetUMat(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetSize(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    IsEmpty(): PrivateScope, Public, HideBySig
    GetDepth(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetDims(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetChannels(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CopyTo(IOutputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_IsMat(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUMat(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMatVector(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUMatVector(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMatx(): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    GetGpuMat(): PrivateScope, Public, HideBySig
Struct Emgu.CV.InputArray+Type: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type KindShift = 16 : Public, Static, Literal, HasDefault
    Type FixedType = -2147483648 : Public, Static, Literal, HasDefault
    Type FixedSize = 1073741824 : Public, Static, Literal, HasDefault
    Type KindMask = 2031616 : Public, Static, Literal, HasDefault
    Type None = 0 : Public, Static, Literal, HasDefault
    Type Mat = 65536 : Public, Static, Literal, HasDefault
    Type Matx = 131072 : Public, Static, Literal, HasDefault
    Type StdVector = 196608 : Public, Static, Literal, HasDefault
    Type StdVectorVector = 262144 : Public, Static, Literal, HasDefault
    Type StdVectorMat = 327680 : Public, Static, Literal, HasDefault
    Type Expr = 393216 : Public, Static, Literal, HasDefault
    Type OpenglBuffer = 458752 : Public, Static, Literal, HasDefault
    Type CudaHostMem = 524288 : Public, Static, Literal, HasDefault
    Type CudaGpuMat = 589824 : Public, Static, Literal, HasDefault
    Type UMat = 655360 : Public, Static, Literal, HasDefault
    Type StdVectorUMat = 720896 : Public, Static, Literal, HasDefault
    Type StdBoolVector = 786432 : Public, Static, Literal, HasDefault
    Type StdVectorCudaGpuMat = 851968 : Public, Static, Literal, HasDefault
Class Emgu.CV.OutputArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.InputArray
    Void .ctor(IntPtr, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean FixedSize 'get ' : 
    Boolean FixedType 'get ' : 
    Boolean Needed 'get ' : 
  Methods:
    GetEmpty(): PrivateScope, Public, Static, HideBySig
    get_FixedSize(): PrivateScope, Public, HideBySig, SpecialName
    get_FixedType(): PrivateScope, Public, HideBySig, SpecialName
    get_Needed(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.InputOutputArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.OutputArray
    Void .ctor(IntPtr, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetEmpty(): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.ScalarArray: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputArray
  Methods:
    op_Explicit(Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(MCvScalar): PrivateScope, Public, Static, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.Util.StructSize: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Properties:
    Int32 PointF 'get ' : 
    Int32 RangF 'get ' : 
    Int32 MCvPoint2D64f 'get ' : 
    Int32 MCvMat 'get ' : 
    Int32 MIplImage 'get ' : 
    Int32 MCvPoint3D32f 'get ' : 
    Int32 MCvMatND 'get ' : 
  Methods:
    get_PointF(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RangF(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvPoint2D64f(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvMat(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MIplImage(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvPoint3D32f(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvMatND(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.TbbTaskScheduler: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Util.VectorOfByte: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    Byte Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(Byte[]): PrivateScope, Public, HideBySig
    Push(VectorOfByte): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfColorPoint: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Structure.ColorPoint[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    Emgu.CV.Structure.ColorPoint Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(ColorPoint[]): PrivateScope, Public, HideBySig
    Push(VectorOfColorPoint): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfCvString: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.CvString[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Properties:
    Int32 Size 'get ' : 
    Emgu.CV.CvString Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Push(CvString): PrivateScope, Public, HideBySig
    Push(CvString[]): PrivateScope, Public, HideBySig
    Push(VectorOfCvString): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfDMatch: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Structure.MDMatch[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    Emgu.CV.Structure.MDMatch Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(MDMatch[]): PrivateScope, Public, HideBySig
    Push(VectorOfDMatch): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfDouble: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    Double Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(Double[]): PrivateScope, Public, HideBySig
    Push(VectorOfDouble): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfFloat: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    Single Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(Single[]): PrivateScope, Public, HideBySig
    Push(VectorOfFloat): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfInt: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    Int32 Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(Int32[]): PrivateScope, Public, HideBySig
    Push(VectorOfInt): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfKeyPoint: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Structure.MKeyPoint[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    Emgu.CV.Structure.MKeyPoint Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(MKeyPoint[]): PrivateScope, Public, HideBySig
    Push(VectorOfKeyPoint): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
    FilterByImageBorder(Size, Int32): PrivateScope, Public, HideBySig
    FilterByKeypointSize(Single, Single): PrivateScope, Public, HideBySig
    FilterByPixelsMask(Image`2): PrivateScope, Public, HideBySig
Class Emgu.CV.Util.VectorOfMat: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Mat[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Properties:
    Int32 Size 'get ' : 
    Emgu.CV.Mat Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Push(Mat): PrivateScope, Public, HideBySig
    Push(Mat[]): PrivateScope, Public, HideBySig
    Push(VectorOfMat): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
    Push(CvArray`1): PrivateScope, Public, HideBySig
    Push(CvArray`1[]): PrivateScope, Public, HideBySig
Class Emgu.CV.Util.VectorOfOclPlatformInfo: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Ocl.PlatformInfo[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Properties:
    Int32 Size 'get ' : 
    Emgu.CV.Ocl.PlatformInfo Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Push(PlatformInfo): PrivateScope, Public, HideBySig
    Push(PlatformInfo[]): PrivateScope, Public, HideBySig
    Push(VectorOfOclPlatformInfo): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfPoint: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Point[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    System.Drawing.Point Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(Point[]): PrivateScope, Public, HideBySig
    Push(VectorOfPoint): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfPoint3D32F: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Structure.MCvPoint3D32f[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    Emgu.CV.Structure.MCvPoint3D32f Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(MCvPoint3D32f[]): PrivateScope, Public, HideBySig
    Push(VectorOfPoint3D32F): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfPointF: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    System.Drawing.PointF Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(PointF[]): PrivateScope, Public, HideBySig
    Push(VectorOfPointF): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfRect: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Rectangle[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    System.Drawing.Rectangle Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(Rectangle[]): PrivateScope, Public, HideBySig
    Push(VectorOfRect): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfTriangle2DF: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Structure.Triangle2DF[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    Emgu.CV.Structure.Triangle2DF Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(Triangle2DF[]): PrivateScope, Public, HideBySig
    Push(VectorOfTriangle2DF): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfUMat: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.UMat[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Properties:
    Int32 Size 'get ' : 
    Emgu.CV.UMat Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Push(UMat): PrivateScope, Public, HideBySig
    Push(UMat[]): PrivateScope, Public, HideBySig
    Push(VectorOfUMat): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Util.VectorOfVectorOfDMatch: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Util.VectorOfDMatch[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Structure.MDMatch[][]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Properties:
    Int32 Size 'get ' : 
    Emgu.CV.Util.VectorOfDMatch Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Push(VectorOfDMatch): PrivateScope, Public, HideBySig
    Push(VectorOfDMatch[]): PrivateScope, Public, HideBySig
    Push(VectorOfVectorOfDMatch): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
    ToArrayOfArray(): PrivateScope, Public, HideBySig
Class Emgu.CV.Util.VectorOfVectorOfInt: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Util.VectorOfInt[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32[][]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Properties:
    Int32 Size 'get ' : 
    Emgu.CV.Util.VectorOfInt Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Push(VectorOfInt): PrivateScope, Public, HideBySig
    Push(VectorOfInt[]): PrivateScope, Public, HideBySig
    Push(VectorOfVectorOfInt): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
    ToArrayOfArray(): PrivateScope, Public, HideBySig
Class Emgu.CV.Util.VectorOfVectorOfPoint: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Util.VectorOfPoint[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Point[][]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Properties:
    Int32 Size 'get ' : 
    Emgu.CV.Util.VectorOfPoint Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Push(VectorOfPoint): PrivateScope, Public, HideBySig
    Push(VectorOfPoint[]): PrivateScope, Public, HideBySig
    Push(VectorOfVectorOfPoint): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
    ToArrayOfArray(): PrivateScope, Public, HideBySig
Class Emgu.CV.Util.VectorOfVectorOfPoint3D32F: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Util.VectorOfPoint3D32F[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Structure.MCvPoint3D32f[][]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Properties:
    Int32 Size 'get ' : 
    Emgu.CV.Util.VectorOfPoint3D32F Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Push(VectorOfPoint3D32F): PrivateScope, Public, HideBySig
    Push(VectorOfPoint3D32F[]): PrivateScope, Public, HideBySig
    Push(VectorOfVectorOfPoint3D32F): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
    ToArrayOfArray(): PrivateScope, Public, HideBySig
Class Emgu.CV.Util.VectorOfVectorOfPointF: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Util.VectorOfPointF[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF[][]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Properties:
    Int32 Size 'get ' : 
    Emgu.CV.Util.VectorOfPointF Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Push(VectorOfPointF): PrivateScope, Public, HideBySig
    Push(VectorOfPointF[]): PrivateScope, Public, HideBySig
    Push(VectorOfVectorOfPointF): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
    ToArrayOfArray(): PrivateScope, Public, HideBySig
Class Emgu.CV.VideoSurveillance.BackgroundSubtractor: AutoLayout, AnsiClass, Class, Public, Abstract
  :Emgu.Util.UnmanagedObject
  Methods:
    Apply(IInputArray, IOutputArray, Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetBackgroundImage(IOutputArray): PrivateScope, Public, HideBySig
Class Emgu.CV.VideoSurveillance.BackgroundSubtractorKNN: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.VideoSurveillance.BackgroundSubtractor
    Void .ctor(Int32, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.VideoSurveillance.BackgroundSubtractorMOG2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.VideoSurveillance.BackgroundSubtractor
    Void .ctor(Int32, Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.VideoWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String, Int32, System.Drawing.Size, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, Int32, System.Drawing.Size, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOpened 'get ' : 
  Methods:
    Write(Mat): PrivateScope, Public, HideBySig
    Fourcc(Char, Char, Char, Char): PrivateScope, Public, Static, HideBySig
    get_IsOpened(): PrivateScope, Public, HideBySig, SpecialName
    Set(WriterProperty, Double): PrivateScope, Public, HideBySig
    Get(WriterProperty): PrivateScope, Public, HideBySig
Struct Emgu.CV.VideoWriter+WriterProperty: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WriterProperty Quality = 0 : Public, Static, Literal, HasDefault
    WriterProperty Framebytes = 1 : Public, Static, Literal, HasDefault
    WriterProperty NStripes = 2 : Public, Static, Literal, HasDefault
Class Emgu.CV.Viz3d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean WasStopped 'get ' : 
  Methods:
    ShowWidget(String, IWidget, Affine3d(Optional, HasDefault)): PrivateScope, Public, HideBySig
    RemoveWidget(String): PrivateScope, Public, HideBySig
    SetWidgetPose(String, Affine3d): PrivateScope, Public, HideBySig
    Spin(): PrivateScope, Public, HideBySig
    SpinOnce(Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_WasStopped(): PrivateScope, Public, HideBySig, SpecialName
    SetBackgroundMeshLab(): PrivateScope, Public, HideBySig
Interface Emgu.CV.IWidget: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    IntPtr GetWidget 'get ' : 
  Methods:
    get_GetWidget(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Emgu.CV.IWidget3D: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Emgu.CV.IWidget
  Properties:
    IntPtr GetWidget3D 'get ' : 
  Methods:
    get_GetWidget3D(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Emgu.CV.IWidget2D: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Emgu.CV.IWidget
  Properties:
    IntPtr GetWidget2D 'get ' : 
  Methods:
    get_GetWidget2D(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.WCloud: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.IInputArray, Emgu.CV.IInputArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.IInputArray, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IWidget3D
    Emgu.CV.IWidget
  Properties:
    IntPtr GetWidget3D 'get ' : 
    IntPtr GetWidget 'get ' : 
  Methods:
    get_GetWidget3D(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GetWidget(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.WText: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String, System.Drawing.Point, Int32, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IWidget2D
    Emgu.CV.IWidget
  Properties:
    IntPtr GetWidget2D 'get ' : 
    IntPtr GetWidget 'get ' : 
  Methods:
    get_GetWidget2D(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GetWidget(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.WCoordinateSystem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IWidget3D
    Emgu.CV.IWidget
  Properties:
    IntPtr GetWidget3D 'get ' : 
    IntPtr GetWidget 'get ' : 
  Methods:
    get_GetWidget3D(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GetWidget(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.WCube: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.Structure.MCvPoint3D64f, Emgu.CV.Structure.MCvPoint3D64f, Boolean, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IWidget3D
    Emgu.CV.IWidget
  Properties:
    IntPtr GetWidget3D 'get ' : 
    IntPtr GetWidget 'get ' : 
  Methods:
    get_GetWidget3D(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GetWidget(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.WCylinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.Structure.MCvPoint3D64f ByRef, Emgu.CV.Structure.MCvPoint3D64f, Double, Int32, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IWidget3D
    Emgu.CV.IWidget
  Properties:
    IntPtr GetWidget3D 'get ' : 
    IntPtr GetWidget 'get ' : 
  Methods:
    get_GetWidget3D(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GetWidget(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.WCircle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Double, Double, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Emgu.CV.Structure.MCvPoint3D64f, Emgu.CV.Structure.MCvPoint3D64f, Double, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IWidget3D
    Emgu.CV.IWidget
  Properties:
    IntPtr GetWidget3D 'get ' : 
    IntPtr GetWidget 'get ' : 
  Methods:
    get_GetWidget3D(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GetWidget(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.WCone: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Double, Double, Int32, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Emgu.CV.Structure.MCvPoint3D64f, Emgu.CV.Structure.MCvPoint3D64f, Int32, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IWidget3D
    Emgu.CV.IWidget
  Properties:
    IntPtr GetWidget3D 'get ' : 
    IntPtr GetWidget 'get ' : 
  Methods:
    get_GetWidget3D(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GetWidget(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.WArrow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.Structure.MCvPoint3D64f, Emgu.CV.Structure.MCvPoint3D64f, Double, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IWidget3D
    Emgu.CV.IWidget
  Properties:
    IntPtr GetWidget3D 'get ' : 
    IntPtr GetWidget 'get ' : 
  Methods:
    get_GetWidget3D(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GetWidget(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Interface Emgu.CV.ML.IStatModel: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Emgu.CV.IAlgorithm
  Properties:
    IntPtr StatModelPtr 'get ' : 
  Methods:
    get_StatModelPtr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.ML.ANN_MLP: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.ML.IStatModel
    Emgu.CV.IAlgorithm
  Properties:
    Emgu.CV.Structure.MCvTermCriteria TermCriteria 'get set' : 
    Double BackpropWeightScale 'get set' : 
    Double BackpropMomentumScale 'get set' : 
    Double RpropDW0 'get set' : 
    Double RpropDWPlus 'get set' : 
    Double RpropDWMinus 'get set' : 
    Double RpropDWMin 'get set' : 
    Double RpropDWMax 'get set' : 
  Methods:
    SetLayerSizes(IInputArray): PrivateScope, Public, HideBySig
    SetActivationFunction(AnnMlpActivationFunction, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetTrainMethod(AnnMlpTrainMethod(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_TermCriteria(): PrivateScope, Public, HideBySig, SpecialName
    set_TermCriteria(MCvTermCriteria): PrivateScope, Public, HideBySig, SpecialName
    get_BackpropWeightScale(): PrivateScope, Public, HideBySig, SpecialName
    set_BackpropWeightScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BackpropMomentumScale(): PrivateScope, Public, HideBySig, SpecialName
    set_BackpropMomentumScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RpropDW0(): PrivateScope, Public, HideBySig, SpecialName
    set_RpropDW0(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RpropDWPlus(): PrivateScope, Public, HideBySig, SpecialName
    set_RpropDWPlus(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RpropDWMinus(): PrivateScope, Public, HideBySig, SpecialName
    set_RpropDWMinus(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RpropDWMin(): PrivateScope, Public, HideBySig, SpecialName
    set_RpropDWMin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RpropDWMax(): PrivateScope, Public, HideBySig, SpecialName
    set_RpropDWMax(Double): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.ML.ANN_MLP+AnnMlpActivationFunction: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AnnMlpActivationFunction Identity = 0 : Public, Static, Literal, HasDefault
    AnnMlpActivationFunction SigmoidSym = 1 : Public, Static, Literal, HasDefault
    AnnMlpActivationFunction Gaussian = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.ML.ANN_MLP+AnnMlpTrainMethod: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AnnMlpTrainMethod Backprop = 0 : Public, Static, Literal, HasDefault
    AnnMlpTrainMethod Rprop = 1 : Public, Static, Literal, HasDefault
Class Emgu.CV.ML.MlInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
Class Emgu.CV.ML.Boost: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.ML.IStatModel
    Emgu.CV.IAlgorithm
  Properties:
    Int32 MaxCategories 'get set' : 
    Int32 MaxDepth 'get set' : 
    Int32 MinSampleCount 'get set' : 
    Int32 CVFolds 'get set' : 
    Boolean UseSurrogates 'get set' : 
    Boolean Use1SERule 'get set' : 
    Boolean TruncatePrunedTree 'get set' : 
    Single RegressionAccuracy 'get set' : 
  Methods:
    get_MaxCategories(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxCategories(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxDepth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MinSampleCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MinSampleCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CVFolds(): PrivateScope, Public, HideBySig, SpecialName
    set_CVFolds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UseSurrogates(): PrivateScope, Public, HideBySig, SpecialName
    set_UseSurrogates(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Use1SERule(): PrivateScope, Public, HideBySig, SpecialName
    set_Use1SERule(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TruncatePrunedTree(): PrivateScope, Public, HideBySig, SpecialName
    set_TruncatePrunedTree(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RegressionAccuracy(): PrivateScope, Public, HideBySig, SpecialName
    set_RegressionAccuracy(Single): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.ML.Boost+Type: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type Discrete = 0 : Public, Static, Literal, HasDefault
    Type Real = 1 : Public, Static, Literal, HasDefault
    Type Logit = 2 : Public, Static, Literal, HasDefault
    Type Gentle = 3 : Public, Static, Literal, HasDefault
Class Emgu.CV.ML.DTrees: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.ML.IStatModel
    Emgu.CV.IAlgorithm
  Properties:
    Int32 MaxCategories 'get set' : 
    Int32 MaxDepth 'get set' : 
    Int32 MinSampleCount 'get set' : 
    Int32 CVFolds 'get set' : 
    Boolean UseSurrogates 'get set' : 
    Boolean Use1SERule 'get set' : 
    Boolean TruncatePrunedTree 'get set' : 
    Single RegressionAccuracy 'get set' : 
  Methods:
    get_MaxCategories(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxCategories(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxDepth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MinSampleCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MinSampleCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CVFolds(): PrivateScope, Public, HideBySig, SpecialName
    set_CVFolds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UseSurrogates(): PrivateScope, Public, HideBySig, SpecialName
    set_UseSurrogates(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Use1SERule(): PrivateScope, Public, HideBySig, SpecialName
    set_Use1SERule(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TruncatePrunedTree(): PrivateScope, Public, HideBySig, SpecialName
    set_TruncatePrunedTree(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RegressionAccuracy(): PrivateScope, Public, HideBySig, SpecialName
    set_RegressionAccuracy(Single): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.ML.EM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.ML.IStatModel
    Emgu.CV.IAlgorithm
  Properties:
    Int32 ClustersNumber 'get set' : 
    CovarianMatrixType CovarianceMatrixType 'get set' : 
    Emgu.CV.Structure.MCvTermCriteria TermCriteria 'get set' : 
  Methods:
    trainE(IInputArray, IInputArray, IInputArray(Optional, HasDefault), IInputArray(Optional, HasDefault), IOutputArray(Optional, HasDefault), IOutputArray(Optional, HasDefault), IOutputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    TrainM(IInputArray, IInputArray, IOutputArray(Optional, HasDefault), IOutputArray(Optional, HasDefault), IOutputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Predict(IInputArray, IOutputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_ClustersNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_ClustersNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CovarianceMatrixType(): PrivateScope, Public, HideBySig, SpecialName
    set_CovarianceMatrixType(CovarianMatrixType): PrivateScope, Public, HideBySig, SpecialName
    get_TermCriteria(): PrivateScope, Public, HideBySig, SpecialName
    set_TermCriteria(MCvTermCriteria): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.ML.EM+CovarianMatrixType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CovarianMatrixType Spherical = 0 : Public, Static, Literal, HasDefault
    CovarianMatrixType Diagonal = 1 : Public, Static, Literal, HasDefault
    CovarianMatrixType Generic = 2 : Public, Static, Literal, HasDefault
    CovarianMatrixType Default = 1 : Public, Static, Literal, HasDefault
Class Emgu.CV.ML.KNearest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.ML.IStatModel
    Emgu.CV.IAlgorithm
  Properties:
    Int32 DefaultK 'get set' : 
    Boolean IsClassifier 'get set' : 
    Int32 Emax 'get set' : 
    Int32 AlgorithmType 'get set' : 
  Methods:
    get_DefaultK(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultK(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsClassifier(): PrivateScope, Public, HideBySig, SpecialName
    set_IsClassifier(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Emax(): PrivateScope, Public, HideBySig, SpecialName
    set_Emax(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AlgorithmType(): PrivateScope, Public, HideBySig, SpecialName
    set_AlgorithmType(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.ML.LogisticRegression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.ML.IStatModel
    Emgu.CV.IAlgorithm
  Properties:
    IntPtr StatModelPtr 'get ' : 
    IntPtr AlgorithmPtr 'get ' : 
    Double LearningRate 'get set' : 
    Int32 Iterations 'get set' : 
    RegularizationMethod Regularization 'get set' : 
    TrainType TrainMethod 'get set' : 
    Int32 MiniBatchSize 'get set' : 
    Emgu.CV.Structure.MCvTermCriteria TermCriteria 'get set' : 
  Methods:
    get_StatModelPtr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AlgorithmPtr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LearningRate(): PrivateScope, Public, HideBySig, SpecialName
    set_LearningRate(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Iterations(): PrivateScope, Public, HideBySig, SpecialName
    set_Iterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Regularization(): PrivateScope, Public, HideBySig, SpecialName
    set_Regularization(RegularizationMethod): PrivateScope, Public, HideBySig, SpecialName
    get_TrainMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_TrainMethod(TrainType): PrivateScope, Public, HideBySig, SpecialName
    get_MiniBatchSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MiniBatchSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TermCriteria(): PrivateScope, Public, HideBySig, SpecialName
    set_TermCriteria(MCvTermCriteria): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.ML.LogisticRegression+TrainType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TrainType Batch = 0 : Public, Static, Literal, HasDefault
    TrainType MiniBatch = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.ML.LogisticRegression+RegularizationMethod: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RegularizationMethod Disable = -1 : Public, Static, Literal, HasDefault
    RegularizationMethod L1 = 0 : Public, Static, Literal, HasDefault
    RegularizationMethod L2 = 1 : Public, Static, Literal, HasDefault
Class Emgu.CV.ML.NormalBayesClassifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.ML.IStatModel
    Emgu.CV.IAlgorithm
Struct Emgu.CV.ML.Structure.MCvDTreeNode: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 classIdx : Public
    Int32 Tn : Public
    Double value : Public
    IntPtr parent : Public
    IntPtr left : Public
    IntPtr right : Public
    IntPtr split : Public
    Int32 sampleCount : Public
    Int32 depth : Public
    IntPtr numValid : Public
    Int32 offset : Public
    Int32 bufIdx : Public
    Double maxlr : Public
    Int32 complexity : Public
    Double alpha : Public
    Double nodeRisk : Public
    Double treeRisk : Public
    Double treeError : Public
    IntPtr cvTn : Public
    IntPtr cvNodeRisk : Public
    IntPtr cvNodeError : Public
Struct Emgu.CV.ML.Structure.MCvDTreeSplit: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 var_idx : Public
    Int32 inversed : Public
    Single quality : Public
    IntPtr next : Public
  Properties:
    MOrder Order 'get set' : 
    Int32[] Subset 'get ' : 
  Methods:
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    set_Order(MOrder): PrivateScope, Public, HideBySig, SpecialName
    get_Subset(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.ML.Structure.MCvDTreeSplit+MOrder: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single c : Public
    Int32 split_point : Public
Struct Emgu.CV.ML.Structure.MCvParamGrid: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double MinVal : Public
    Double MaxVal : Public
    Double Step : Public
Struct Emgu.CV.ML.MlEnum.AnnMlpTrainingFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.ML.MlEnum.AnnMlpTrainingFlag Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.ML.MlEnum.AnnMlpTrainingFlag UpdateWeights = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.ML.MlEnum.AnnMlpTrainingFlag NoInputScale = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.ML.MlEnum.AnnMlpTrainingFlag NoOutputScale = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.ML.MlEnum.DataLayoutType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.ML.MlEnum.DataLayoutType ColSample = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.ML.MlEnum.DataLayoutType RowSample = 0 : Public, Static, Literal, HasDefault
Struct Emgu.CV.ML.MlEnum.BoostType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.ML.MlEnum.BoostType Discrete = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.ML.MlEnum.BoostType Real = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.ML.MlEnum.BoostType Logit = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.ML.MlEnum.BoostType Gentle = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.ML.MlEnum.BoostSplitCreiteria: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.ML.MlEnum.BoostSplitCreiteria Default = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.ML.MlEnum.BoostSplitCreiteria Gini = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.ML.MlEnum.BoostSplitCreiteria Misclass = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.ML.MlEnum.BoostSplitCreiteria Sqerr = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.ML.MlEnum.VarType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.ML.MlEnum.VarType Numerical = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.ML.MlEnum.VarType Categorical = 1 : Public, Static, Literal, HasDefault
Class Emgu.CV.ML.RTrees: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.ML.IStatModel
    Emgu.CV.IAlgorithm
  Properties:
    Int32 MaxCategories 'get set' : 
    Int32 MaxDepth 'get set' : 
    Int32 MinSampleCount 'get set' : 
    Int32 CVFolds 'get set' : 
    Boolean UseSurrogates 'get set' : 
    Boolean Use1SERule 'get set' : 
    Boolean TruncatePrunedTree 'get set' : 
    Single RegressionAccuracy 'get set' : 
    Boolean CalculateVarImportance 'get set' : 
    Int32 ActiveVarCount 'get set' : 
    Emgu.CV.Structure.MCvTermCriteria TermCriteria 'get set' : 
  Methods:
    get_MaxCategories(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxCategories(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxDepth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MinSampleCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MinSampleCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CVFolds(): PrivateScope, Public, HideBySig, SpecialName
    set_CVFolds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UseSurrogates(): PrivateScope, Public, HideBySig, SpecialName
    set_UseSurrogates(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Use1SERule(): PrivateScope, Public, HideBySig, SpecialName
    set_Use1SERule(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TruncatePrunedTree(): PrivateScope, Public, HideBySig, SpecialName
    set_TruncatePrunedTree(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RegressionAccuracy(): PrivateScope, Public, HideBySig, SpecialName
    set_RegressionAccuracy(Single): PrivateScope, Public, HideBySig, SpecialName
    get_CalculateVarImportance(): PrivateScope, Public, HideBySig, SpecialName
    set_CalculateVarImportance(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ActiveVarCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ActiveVarCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TermCriteria(): PrivateScope, Public, HideBySig, SpecialName
    set_TermCriteria(MCvTermCriteria): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.ML.SVM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.ML.IStatModel
    Emgu.CV.IAlgorithm
  Properties:
    SvmType Type 'get set' : 
    Double Gamma 'get set' : 
    Double Coef0 'get set' : 
    Double Degree 'get set' : 
    Double C   'get set' : 
    Double Nu  'get set' : 
    Double P   'get set' : 
    Emgu.CV.Structure.MCvTermCriteria TermCriteria 'get set' : 
    SvmKernelType KernelType 'get ' : 
  Methods:
    GetDefaultGrid(ParamType): PrivateScope, Public, Static, HideBySig
    TrainAuto(TrainData, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    TrainAuto(TrainData, Int32, MCvParamGrid, MCvParamGrid, MCvParamGrid, MCvParamGrid, MCvParamGrid, MCvParamGrid, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetSupportVectors(): PrivateScope, Public, HideBySig
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(SvmType): PrivateScope, Public, HideBySig, SpecialName
    get_Gamma(): PrivateScope, Public, HideBySig, SpecialName
    set_Gamma(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Coef0(): PrivateScope, Public, HideBySig, SpecialName
    set_Coef0(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Degree(): PrivateScope, Public, HideBySig, SpecialName
    set_Degree(Double): PrivateScope, Public, HideBySig, SpecialName
    get_C(): PrivateScope, Public, HideBySig, SpecialName
    set_C(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Nu(): PrivateScope, Public, HideBySig, SpecialName
    set_Nu(Double): PrivateScope, Public, HideBySig, SpecialName
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    set_P(Double): PrivateScope, Public, HideBySig, SpecialName
    SetKernel(SvmKernelType): PrivateScope, Public, HideBySig
    get_TermCriteria(): PrivateScope, Public, HideBySig, SpecialName
    set_TermCriteria(MCvTermCriteria): PrivateScope, Public, HideBySig, SpecialName
    get_KernelType(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.ML.SVM+SvmType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SvmType CSvc = 100 : Public, Static, Literal, HasDefault
    SvmType NuSvc = 101 : Public, Static, Literal, HasDefault
    SvmType OneClass = 102 : Public, Static, Literal, HasDefault
    SvmType EpsSvr = 103 : Public, Static, Literal, HasDefault
    SvmType NuSvr = 104 : Public, Static, Literal, HasDefault
Struct Emgu.CV.ML.SVM+SvmKernelType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SvmKernelType Custom = -1 : Public, Static, Literal, HasDefault
    SvmKernelType Linear = 0 : Public, Static, Literal, HasDefault
    SvmKernelType Poly = 1 : Public, Static, Literal, HasDefault
    SvmKernelType Rbf = 2 : Public, Static, Literal, HasDefault
    SvmKernelType Sigmoid = 3 : Public, Static, Literal, HasDefault
    SvmKernelType Chi2 = 4 : Public, Static, Literal, HasDefault
    SvmKernelType Inter = 5 : Public, Static, Literal, HasDefault
Struct Emgu.CV.ML.SVM+ParamType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ParamType C = 0 : Public, Static, Literal, HasDefault
    ParamType Gamma = 1 : Public, Static, Literal, HasDefault
    ParamType P = 2 : Public, Static, Literal, HasDefault
    ParamType Nu = 3 : Public, Static, Literal, HasDefault
    ParamType Coef = 4 : Public, Static, Literal, HasDefault
    ParamType Degree = 5 : Public, Static, Literal, HasDefault
Class Emgu.CV.ML.StatModelExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Save(IStatModel, String): PrivateScope, Public, Static, HideBySig
    Train(IStatModel, IInputArray, DataLayoutType, IInputArray): PrivateScope, Public, Static, HideBySig
    Train(IStatModel, TrainData, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Predict(IStatModel, IInputArray, IOutputArray(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Clear(IStatModel): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.ML.TrainData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.IInputArray, Emgu.CV.ML.MlEnum.DataLayoutType, Emgu.CV.IInputArray, Emgu.CV.IInputArray, Emgu.CV.IInputArray, Emgu.CV.IInputArray, Emgu.CV.IInputArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.VideoStab.FrameSource: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Fields:
    IntPtr FrameSourcePtr : Public
  Properties:
    CaptureModuleType CaptureSource 'get set' : 
  Methods:
    get_CaptureSource(): PrivateScope, Public, HideBySig, SpecialName
    set_CaptureSource(CaptureModuleType): PrivateScope, Public, HideBySig, SpecialName
    NextFrame(): PrivateScope, Public, HideBySig
Class Emgu.CV.VideoStab.CaptureFrameSource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.VideoStab.FrameSource
    Void .ctor(Emgu.CV.VideoCapture): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.VideoStab.GaussianMotionFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.VideoStab.OnePassStabilizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.VideoStab.FrameSource
    Void .ctor(Emgu.CV.VideoStab.FrameSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetMotionFilter(GaussianMotionFilter): PrivateScope, Public, HideBySig
Class Emgu.CV.VideoStab.TwoPassStabilizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.VideoStab.FrameSource
    Void .ctor(Emgu.CV.VideoStab.FrameSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Superres.FrameSource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    NextFrame(IOutputArray): PrivateScope, Public, HideBySig
Class Emgu.CV.Superres.SuperResolution: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Superres.FrameSource
    Void .ctor(OpticalFlowType, Emgu.CV.Superres.FrameSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Emgu.CV.Superres.SuperResolution+OpticalFlowType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpticalFlowType Btvl = 0 : Public, Static, Literal, HasDefault
    OpticalFlowType Btvl1Gpu = 1 : Public, Static, Literal, HasDefault
Class Emgu.CV.Stitching.FeaturesFinder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Properties:
    IntPtr FeaturesFinderPtr 'get ' : 
  Methods:
    get_FeaturesFinderPtr(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Stitching.OrbFeaturesFinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Stitching.FeaturesFinder
    Void .ctor(System.Drawing.Size, Int32, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Stitching.StitchingInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
Class Emgu.CV.Stitching.Stitcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean WaveCorrection 'get set' : 
    WaveCorrectionType WaveCorrectionKind 'get set' : 
    Double PanoConfidenceThresh 'get set' : 
    Double CompositingResol 'get set' : 
    Double SeamEstimationResol 'get set' : 
    Double RegistrationResol 'get set' : 
    Double WorkScale 'get ' : 
  Methods:
    Stitch(IInputArray, IOutputArray): PrivateScope, Public, HideBySig
    SetFeaturesFinder(FeaturesFinder): PrivateScope, Public, HideBySig
    SetWarper(WarperCreator): PrivateScope, Public, HideBySig
    get_WaveCorrection(): PrivateScope, Public, HideBySig, SpecialName
    set_WaveCorrection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WaveCorrectionKind(): PrivateScope, Public, HideBySig, SpecialName
    set_WaveCorrectionKind(WaveCorrectionType): PrivateScope, Public, HideBySig, SpecialName
    get_PanoConfidenceThresh(): PrivateScope, Public, HideBySig, SpecialName
    set_PanoConfidenceThresh(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CompositingResol(): PrivateScope, Public, HideBySig, SpecialName
    set_CompositingResol(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SeamEstimationResol(): PrivateScope, Public, HideBySig, SpecialName
    set_SeamEstimationResol(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RegistrationResol(): PrivateScope, Public, HideBySig, SpecialName
    set_RegistrationResol(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WorkScale(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Stitching.Stitcher+Status: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Status Ok = 0 : Public, Static, Literal, HasDefault
    Status ErrNeedMoreImgs = 1 : Public, Static, Literal, HasDefault
    Status ErrHomographyEstFail = 2 : Public, Static, Literal, HasDefault
    Status ErrCameraParamsAdjustFail = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.Stitching.Stitcher+WaveCorrectionType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WaveCorrectionType Horiz = 0 : Public, Static, Literal, HasDefault
    WaveCorrectionType Vert = 1 : Public, Static, Literal, HasDefault
Class Emgu.CV.Stitching.WarperCreator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Properties:
    IntPtr WarperCreatorPtr 'get ' : 
  Methods:
    get_WarperCreatorPtr(): PrivateScope, Public, HideBySig, SpecialName
    BuildMaps(Size, IInputArray, IInputArray, IOutputArray, IOutputArray): PrivateScope, Public, HideBySig
    Warp(IInputArray, IInputArray, IInputArray, Inter, BorderType, IOutputArray): PrivateScope, Public, HideBySig
Class Emgu.CV.Stitching.PlaneWarper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Stitching.WarperCreator
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Stitching.SphericalWarper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Stitching.WarperCreator
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Stitching.FisheyeWarper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Stitching.WarperCreator
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Stitching.StereographicWarper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Stitching.WarperCreator
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Stitching.CompressedRectilinearWarper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Stitching.WarperCreator
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Stitching.PaniniWarper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Stitching.WarperCreator
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Stitching.PaniniPortraitWarper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Stitching.WarperCreator
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Stitching.MercatorWarper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Stitching.WarperCreator
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Stitching.TransverseMercatorWarper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Stitching.WarperCreator
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Shape.HistogramCostExtractor: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
Class Emgu.CV.Shape.NormHistogramCostExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Shape.HistogramCostExtractor
    Void .ctor(Emgu.CV.CvEnum.DistType, Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Shape.EMDHistogramCostExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Shape.HistogramCostExtractor
    Void .ctor(Emgu.CV.CvEnum.DistType, Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Shape.ChiHistogramCostExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Shape.HistogramCostExtractor
    Void .ctor(Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Shape.EMDL1HistogramCostExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Shape.HistogramCostExtractor
    Void .ctor(Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Shape.ShapeInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
Class Emgu.CV.Shape.ShapeDistanceExtractor: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Methods:
    ComputeDistance(Point[], Point[]): PrivateScope, Public, HideBySig
    ComputeDistance(IInputArray, IInputArray): PrivateScope, Public, HideBySig
Class Emgu.CV.Shape.ShapeContextDistanceExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Shape.ShapeDistanceExtractor
    Void .ctor(Emgu.CV.Shape.HistogramCostExtractor, Emgu.CV.Shape.IShapeTransformer, Int32, Int32, Single, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Iterations 'get set' : 
    Int32 AngularBins 'get set' : 
    Int32 RadialBins 'get set' : 
    Single InnerRadius 'get set' : 
    Single OuterRadius 'get set' : 
    Boolean RotationInvariant 'get set' : 
    Single ShapeContextWeight 'get set' : 
    Single ImageAppearanceWeight 'get set' : 
    Single BendingEnergyWeight 'get set' : 
    Single StdDev 'get set' : 
  Methods:
    get_Iterations(): PrivateScope, Public, HideBySig, SpecialName
    set_Iterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AngularBins(): PrivateScope, Public, HideBySig, SpecialName
    set_AngularBins(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RadialBins(): PrivateScope, Public, HideBySig, SpecialName
    set_RadialBins(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_InnerRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerRadius(Single): PrivateScope, Public, HideBySig, SpecialName
    get_OuterRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterRadius(Single): PrivateScope, Public, HideBySig, SpecialName
    get_RotationInvariant(): PrivateScope, Public, HideBySig, SpecialName
    set_RotationInvariant(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShapeContextWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ShapeContextWeight(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ImageAppearanceWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ImageAppearanceWeight(Single): PrivateScope, Public, HideBySig, SpecialName
    get_BendingEnergyWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_BendingEnergyWeight(Single): PrivateScope, Public, HideBySig, SpecialName
    get_StdDev(): PrivateScope, Public, HideBySig, SpecialName
    set_StdDev(Single): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Shape.HausdorffDistanceExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Shape.ShapeDistanceExtractor
    Void .ctor(Emgu.CV.CvEnum.DistType, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Emgu.CV.Shape.IShapeTransformer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    IntPtr ShapeTransformerPtr 'get ' : 
  Methods:
    get_ShapeTransformerPtr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.Shape.ThinPlateSplineShapeTransformer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Shape.IShapeTransformer
  Properties:
    IntPtr ShapeTransformerPtr 'get ' : 
  Methods:
    get_ShapeTransformerPtr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.Shape.AffineTransformer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Shape.IShapeTransformer
  Properties:
    IntPtr ShapeTransformerPtr 'get ' : 
  Methods:
    get_ShapeTransformerPtr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.OCR.OcrInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
Class Emgu.CV.OCR.PageIterator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Properties:
    Emgu.CV.OCR.Orientation Orientation 'get ' : 
  Methods:
    get_Orientation(): PrivateScope, Public, HideBySig, SpecialName
    GetBaseLine(PageIteratorLevel): PrivateScope, Public, HideBySig
Struct Emgu.CV.OCR.Orientation: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Emgu.CV.OCR.PageOrientation PageOrientation : Public
    Emgu.CV.OCR.WritingDirection WritingDirection : Public
    Emgu.CV.OCR.TextlineOrder TextlineOrder : Public
    Single DeskewAngle : Public
Struct Emgu.CV.OCR.PageOrientation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.OCR.PageOrientation Up = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageOrientation Right = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageOrientation Down = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageOrientation Left = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.OCR.WritingDirection: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.OCR.WritingDirection LeftToRight = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.WritingDirection RightToLeft = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.WritingDirection TopToBottom = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.OCR.TextlineOrder: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.OCR.TextlineOrder LeftToRight = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.TextlineOrder RightToLeft = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.TextlineOrder TopToBottom = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.OCR.PageIteratorLevel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.OCR.PageIteratorLevel Block = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageIteratorLevel Para = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageIteratorLevel Textline = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageIteratorLevel Word = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageIteratorLevel Symbol = 4 : Public, Static, Literal, HasDefault
Class Emgu.CV.OCR.Tesseract: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Emgu.CV.OCR.OcrEngineMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Emgu.CV.OCR.OcrEngineMode, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Version Version 'get ' : 
    Emgu.CV.OCR.PageSegMode PageSegMode 'get set' : 
  Methods:
    get_Version(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetOpenCLDevice(IntPtr&): PrivateScope, Public, HideBySig
    IsValidWord(String): PrivateScope, Public, HideBySig
    get_PageSegMode(): PrivateScope, Public, HideBySig, SpecialName
    set_PageSegMode(PageSegMode): PrivateScope, Public, HideBySig, SpecialName
    Init(String, String, OcrEngineMode): PrivateScope, Public, HideBySig
    Recognize(IInputArray): PrivateScope, Public, HideBySig
    SetVariable(String, String): PrivateScope, Public, HideBySig
    GetText(): PrivateScope, Public, HideBySig
    GetHOCRText(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetCharacters(): PrivateScope, Public, HideBySig
    AnalyseLayout(Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
Struct Emgu.CV.OCR.Tesseract+Character: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String Text : Public
    Single Cost : Public
    System.Drawing.Rectangle Region : Public
Struct Emgu.CV.OCR.OcrEngineMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.OCR.OcrEngineMode TesseractOnly = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.OcrEngineMode CubeOnly = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.OcrEngineMode TesseractCubeCombined = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.OcrEngineMode Default = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.OCR.PageSegMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.OCR.PageSegMode OsdOnly = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode AutoOsd = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode AutoOnly = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode Auto = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode SingleColumn = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode SingleBlockVertText = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode SingleBlock = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode SingleLine = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode SingleWord = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode CircleWord = 9 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode SingleChar = 10 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode SparseText = 11 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode SparseTextOsd = 12 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode RawLine = 13 : Public, Static, Literal, HasDefault
    Emgu.CV.OCR.PageSegMode Count = 14 : Public, Static, Literal, HasDefault
Struct Emgu.CV.OCR.TesseractResult: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Length : Public
    Single Cost : Public
    System.Drawing.Rectangle Region : Public
Class Emgu.CV.OCR.VectorOfTesseractResult: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.OCR.TesseractResult[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    Emgu.CV.OCR.TesseractResult Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(TesseractResult[]): PrivateScope, Public, HideBySig
    Push(VectorOfTesseractResult): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Cuda.CudaBackgroundSubtractorMOG: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Update(IInputArray, IOutputArray, Double, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Properties:
    Boolean HasCuda 'get ' : 
  Methods:
    Calc(ICudaDenseOpticalFlow, IInputArray, IInputArray, IInputOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Calc(ICudaSparseOpticalFlow, IInputArray, IInputArray, IInputArray, IInputOutputArray, IOutputArray(Optional, HasDefault), IOutputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GammaCorrection(IInputArray, IOutputArray, Boolean(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    AlphaComp(IInputArray, IInputArray, IOutputArray, AlphaCompTypes, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcHist(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EqualizeHist(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HistEven(IInputArray, IOutputArray, Int32, Int32, Int32, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HistRange(IInputArray, IOutputArray, IInputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BlendLinear(IInputArray, IInputArray, IInputArray, IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BilateralFilter(IInputArray, IOutputArray, Int32, Single, Single, BorderType(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MeanShiftFiltering(IInputArray, IOutputArray, Int32, Int32, MCvTermCriteria, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MeanShiftProc(IInputArray, IOutputArray, IOutputArray, Int32, Int32, MCvTermCriteria, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MeanShiftSegmentation(IInputArray, IOutputArray, Int32, Int32, Int32, MCvTermCriteria, Stream): PrivateScope, Public, Static, HideBySig
    CvtColor(IInputArray, IOutputArray, ColorConversion, Int32(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Demosaicing(IInputArray, IOutputArray, DemosaicTypes, Int32(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SwapChannels(IInputOutputArray, Int32[], Stream): PrivateScope, Public, Static, HideBySig
    Threshold(IInputArray, IOutputArray, Double, Double, ThresholdType, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Gemm(IInputArray, IInputArray, Double, IInputArray, Double, IOutputArray, GemmType(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WarpAffine(IInputArray, IOutputArray, IInputArray, Size, Inter(Optional, HasDefault), BorderType(Optional, HasDefault), MCvScalar(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WarpPerspective(IInputArray, IOutputArray, IInputArray, Size, Inter(Optional, HasDefault), BorderType(Optional, HasDefault), MCvScalar(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Remap(IInputArray, IOutputArray, IInputArray, IInputArray, Inter, BorderType(Optional, HasDefault), MCvScalar(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Rotate(IInputArray, IOutputArray, Size, Double, Double(Optional, HasDefault), Double(Optional, HasDefault), Inter(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CopyMakeBorder(IInputArray, IOutputArray, Int32, Int32, Int32, Int32, BorderType, MCvScalar(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Integral(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SqrIntegral(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Dft(IInputArray, IOutputArray, Size, DxtType(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MulAndScaleSpectrums(IInputArray, IInputArray, IOutputArray, Int32, Single, Boolean(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MulSpectrums(IInputArray, IInputArray, IOutputArray, Int32, Boolean(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Norm(IInputArray, NormType, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcNorm(IInputArray, IOutputArray, NormType(Optional, HasDefault), IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcNormDiff(IInputArray, IInputArray, IOutputArray, NormType(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    AbsSum(IInputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcAbsSum(IInputArray, IOutputArray, IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SqrSum(IInputArray, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcSqrSum(IInputArray, IOutputArray, IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CountNonZero(IInputArray): PrivateScope, Public, Static, HideBySig
    CountNonZero(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Normalize(IInputArray, IOutputArray, Double, Double, NormType, DepthType, IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Reduce(IInputArray, IOutputArray, ReduceDimension, ReduceType, DepthType(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Flip(IInputArray, IOutputArray, FlipType, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BitwiseXor(IInputArray, IInputArray, IOutputArray, IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BitwiseOr(IInputArray, IInputArray, IOutputArray, IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BitwiseAnd(IInputArray, IInputArray, IOutputArray, IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BitwiseNot(IInputArray, IOutputArray, IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Min(IInputArray, IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Max(IInputArray, IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Compare(IInputArray, IInputArray, IOutputArray, CmpType, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Resize(IInputArray, IOutputArray, Size, Double(Optional, HasDefault), Double(Optional, HasDefault), Inter(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Split(IInputArray, VectorOfGpuMat, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Merge(VectorOfGpuMat, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Exp(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Pow(IInputArray, Double, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Log(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Magnitude(IInputArray, IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MagnitudeSqr(IInputArray, IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Phase(IInputArray, IInputArray, IOutputArray, Boolean(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CartToPolar(IInputArray, IInputArray, IOutputArray, IOutputArray, Boolean(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PolarToCart(IInputArray, IInputArray, IOutputArray, IOutputArray, Boolean(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MinMaxLoc(IInputArray, Double&, Double&, Point&, Point&, IInputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindMinMaxLoc(IInputArray, IOutputArray, IOutputArray, IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PyrDown(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PyrUp(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MeanStdDev(IInputArray, MCvScalar&, MCvScalar&): PrivateScope, Public, Static, HideBySig
    Norm(IInputArray, IInputArray, NormType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_HasCuda(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetCudaDevicesSummary(): PrivateScope, Public, Static, HideBySig
    GetCudaEnabledDeviceCount(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    SetDevice(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetDevice(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetRegion(IntPtr, Range&, Range&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GpuMatResize(IntPtr, IntPtr, Inter, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GpuMatReshape(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetSubRect(IntPtr, Rectangle&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    LShift(IntPtr, MCvScalar&, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    RShift(IntPtr, MCvScalar&, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    Add(IInputArray, IInputArray, IOutputArray, IInputArray(Optional, HasDefault), DepthType(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Subtract(IInputArray, IInputArray, IOutputArray, IInputArray(Optional, HasDefault), DepthType(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Multiply(IInputArray, IInputArray, IOutputArray, Double(Optional, HasDefault), DepthType(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Divide(IInputArray, IInputArray, IOutputArray, Double(Optional, HasDefault), DepthType(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    AddWeighted(IInputArray, Double, IInputArray, Double, Double, IOutputArray, DepthType(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Absdiff(IInputArray, IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Abs(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Sqr(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Sqrt(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Transpose(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.Cuda.CudaBackgroundSubtractorMOG2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Update(IInputArray, IOutputArray, Double, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaVideoReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    NextFrame(IOutputArray): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaVideoWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String, System.Drawing.Size, Double, SurfaceFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Write(IInputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
Struct Emgu.CV.Cuda.CudaVideoWriter+SurfaceFormat: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SurfaceFormat UYVY = 0 : Public, Static, Literal, HasDefault
    SurfaceFormat YUY2 = 1 : Public, Static, Literal, HasDefault
    SurfaceFormat YV12 = 2 : Public, Static, Literal, HasDefault
    SurfaceFormat NV12 = 3 : Public, Static, Literal, HasDefault
    SurfaceFormat IYUV = 4 : Public, Static, Literal, HasDefault
    SurfaceFormat BGR = 5 : Public, Static, Literal, HasDefault
    SurfaceFormat GRAY = 5 : Public, Static, Literal, HasDefault
Class Emgu.CV.Cuda.CudaClahe: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Double, System.Drawing.Size): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Apply(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaDeviceInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ID   'get ' : 
    System.String Name 'get ' : 
    System.Version CudaComputeCapability 'get ' : 
    Int32 MultiProcessorCount 'get ' : 
    UInt64 FreeMemory 'get ' : 
    UInt64 TotalMemory 'get ' : 
    Boolean IsCompatible 'get ' : 
  Methods:
    get_ID(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_CudaComputeCapability(): PrivateScope, Public, HideBySig, SpecialName
    get_MultiProcessorCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FreeMemory(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalMemory(): PrivateScope, Public, HideBySig, SpecialName
    Supports(GpuFeature): PrivateScope, Public, HideBySig
    get_IsCompatible(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Cuda.CudaDeviceInfo+GpuFeature: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    GpuFeature Compute10 = 10 : Public, Static, Literal, HasDefault
    GpuFeature Compute11 = 11 : Public, Static, Literal, HasDefault
    GpuFeature Compute12 = 12 : Public, Static, Literal, HasDefault
    GpuFeature Compute13 = 13 : Public, Static, Literal, HasDefault
    GpuFeature Compute20 = 20 : Public, Static, Literal, HasDefault
    GpuFeature Compute21 = 21 : Public, Static, Literal, HasDefault
    GpuFeature GlobalAtomics = 11 : Public, Static, Literal, HasDefault
    GpuFeature SharedAtomics = 12 : Public, Static, Literal, HasDefault
    GpuFeature NativeDouble = 13 : Public, Static, Literal, HasDefault
Class Emgu.CV.Cuda.GpuMat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Emgu.CV.CvEnum.DepthType, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.IInputArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Cuda.GpuMat, Emgu.CV.Structure.Range, Emgu.CV.Structure.Range): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Cuda.GpuMat]
    Emgu.CV.IImage
    System.ICloneable
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Properties:
    System.Drawing.Size Size 'get ' : 
    Int32 Type 'get ' : 
    System.Drawing.Bitmap Bitmap 'get ' : 
    Boolean IsContinuous 'get ' : 
    Emgu.CV.CvEnum.DepthType Depth 'get ' : 
    Boolean IsEmpty 'get ' : 
    Int32 NumberOfChannels 'get ' : 
  Methods:
    Create(Int32, Int32, DepthType, Int32): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Upload(IInputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Download(IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ToMat(): PrivateScope, Public, HideBySig
    SetTo(MCvScalar, IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CopyTo(IOutputArray, IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ConvertTo(IOutputArray, DepthType, Double(Optional, HasDefault), Double(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Reshape(Int32, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Row(Int32): PrivateScope, Public, HideBySig
    RowRange(Int32, Int32): PrivateScope, Public, HideBySig
    Col(Int32): PrivateScope, Public, HideBySig
    ColRange(Int32, Int32): PrivateScope, Public, HideBySig
    Equals(GpuMat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MergeFrom(GpuMat[], Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Split(Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_Bitmap(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MinMax(Double[]&(Out), Double[]&(Out), Point[]&(Out), Point[]&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Save(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsContinuous(): PrivateScope, Public, HideBySig, SpecialName
    get_Depth(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfChannels(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.Cuda.GpuMat`1[TDepth]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.Cuda.GpuMat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.IInputArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToMatrix(): PrivateScope, Public, HideBySig
    GetSubRect(Rectangle): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaImage`2[TColor,TDepth]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.Cuda.GpuMat`1[TDepth]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.IInputArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Cuda.CudaImage`2[TColor,TDepth], Emgu.CV.Structure.Range, Emgu.CV.Structure.Range): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Bitmap Bitmap 'get ' : 
  Methods:
    ToImage(): PrivateScope, Public, HideBySig
    Convert(): PrivateScope, Public, HideBySig
    ConvertFrom(CudaImage`2): PrivateScope, Public, HideBySig
    Clone(Stream): PrivateScope, Public, HideBySig
    Resize(Size, Inter, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetSubRect(Rectangle): PrivateScope, Public, HideBySig
    Row(Int32): PrivateScope, Public, HideBySig
    RowRange(Int32, Int32): PrivateScope, Public, HideBySig
    Col(Int32): PrivateScope, Public, HideBySig
    ColRange(Int32, Int32): PrivateScope, Public, HideBySig
    get_Bitmap(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.Cuda.CudaLookUpTable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.IInputArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Transform(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.DescriptorMatcher: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Interfaces:
    Emgu.CV.IAlgorithm
  Methods:
    KnnMatch(IInputArray, IInputArray, VectorOfVectorOfDMatch, Int32, IInputArray(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Add(IInputArray): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaBFMatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Cuda.DescriptorMatcher
    Void .ctor(Emgu.CV.Features2D.DistanceType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Emgu.CV.Cuda.IFeature2DAsync: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    IntPtr Feature2DAsyncPtr 'get ' : 
  Methods:
    get_Feature2DAsyncPtr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.Cuda.CudaFastFeatureDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.FastDetector
    Void .ctor(Int32, Boolean, DetectorType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Cuda.IFeature2DAsync
Class Emgu.CV.Cuda.CudaORBDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.ORBDetector
    Void .ctor(Int32, Single, Int32, Int32, Int32, Int32, ScoreType, Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Cuda.IFeature2DAsync
Class Emgu.CV.Cuda.Feature2DAsyncExtension: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    DetectAndComputeAsync(IFeature2DAsync, IInputArray, IInputArray, IOutputArray, IOutputArray, Boolean, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DetectAsync(IFeature2DAsync, IInputArray, IOutputArray, IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ComputeAsync(IFeature2DAsync, IInputArray, IOutputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Convert(IFeature2DAsync, IInputArray, VectorOfKeyPoint): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.Cuda.CudaFilter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Methods:
    Apply(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaBoxFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Cuda.CudaFilter
    Void .ctor(Emgu.CV.CvEnum.DepthType, Int32, Emgu.CV.CvEnum.DepthType, Int32, System.Drawing.Size, System.Drawing.Point, Emgu.CV.CvEnum.BorderType, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Cuda.CudaBoxMaxFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Cuda.CudaFilter
    Void .ctor(Emgu.CV.CvEnum.DepthType, Int32, System.Drawing.Size, System.Drawing.Point, Emgu.CV.CvEnum.BorderType, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Cuda.CudaBoxMinFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Cuda.CudaFilter
    Void .ctor(Emgu.CV.CvEnum.DepthType, Int32, System.Drawing.Size, System.Drawing.Point, Emgu.CV.CvEnum.BorderType, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Cuda.CudaGaussianFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Cuda.CudaFilter
    Void .ctor(Emgu.CV.CvEnum.DepthType, Int32, Emgu.CV.CvEnum.DepthType, Int32, System.Drawing.Size, Double, Double, Emgu.CV.CvEnum.BorderType, Emgu.CV.CvEnum.BorderType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Cuda.CudaLaplacianFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Cuda.CudaFilter
    Void .ctor(Emgu.CV.CvEnum.DepthType, Int32, Emgu.CV.CvEnum.DepthType, Int32, Int32, Double, Emgu.CV.CvEnum.BorderType, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Cuda.CudaLinearFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Cuda.CudaFilter
    Void .ctor(Emgu.CV.CvEnum.DepthType, Int32, Emgu.CV.CvEnum.DepthType, Int32, Emgu.CV.IInputArray, System.Drawing.Point, Emgu.CV.CvEnum.BorderType, Emgu.CV.Structure.MCvScalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Cuda.CudaMorphologyFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Cuda.CudaFilter
    Void .ctor(Emgu.CV.CvEnum.MorphOp, Emgu.CV.CvEnum.DepthType, Int32, Emgu.CV.IInputArray, System.Drawing.Point, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Cuda.CudaSobelFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Cuda.CudaFilter
    Void .ctor(Emgu.CV.CvEnum.DepthType, Int32, Emgu.CV.CvEnum.DepthType, Int32, Int32, Int32, Int32, Double, Emgu.CV.CvEnum.BorderType, Emgu.CV.CvEnum.BorderType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Cuda.CudaCannyEdgeDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Double, Double, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Detect(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaCornernessCriteria: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Methods:
    Apply(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaGoodFeaturesToTrackDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.CvEnum.DepthType, Int32, Int32, Double, Double, Int32, Boolean, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Detect(IInputArray, IOutputArray, IInputArray(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaHarrisCorner: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Cuda.CudaCornernessCriteria
    Void .ctor(Emgu.CV.CvEnum.DepthType, Int32, Int32, Int32, Double, Emgu.CV.CvEnum.BorderType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Cuda.CudaHoughCirclesDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Single, Single, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Detect(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaHoughLinesDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Single, Single, Int32, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Rho 'get set' : 
    Single Theta 'get set' : 
    Int32 Threshold 'get set' : 
    Boolean DoSort 'get set' : 
    Int32 MaxLines 'get set' : 
  Methods:
    Detect(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_Rho(): PrivateScope, Public, HideBySig, SpecialName
    set_Rho(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Theta(): PrivateScope, Public, HideBySig, SpecialName
    set_Theta(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Threshold(): PrivateScope, Public, HideBySig, SpecialName
    set_Threshold(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DoSort(): PrivateScope, Public, HideBySig, SpecialName
    set_DoSort(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLines(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLines(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Cuda.CudaHoughSegmentDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Single, Single, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Detect(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Struct Emgu.CV.Cuda.DemosaicTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.Cuda.DemosaicTypes BayerBG2BGR_MHT = 256 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.DemosaicTypes BayerGB2BGR_MHT = 257 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.DemosaicTypes BayerRG2BGR_MHT = 258 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.DemosaicTypes BayerGR2BGR_MHT = 259 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.DemosaicTypes BayerBG2RGB_MHT = 258 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.DemosaicTypes BayerGB2RGB_MHT = 259 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.DemosaicTypes BayerRG2RGB_MHT = 256 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.DemosaicTypes BayerGR2RGB_MHT = 257 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.DemosaicTypes BayerBG2GRAY_MHT = 260 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.DemosaicTypes BayerGB2GRAY_MHT = 261 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.DemosaicTypes BayerRG2GRAY_MHT = 262 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.DemosaicTypes BayerGR2GRAY_MHT = 263 : Public, Static, Literal, HasDefault
Struct Emgu.CV.Cuda.AlphaCompTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.Cuda.AlphaCompTypes Over = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.AlphaCompTypes In = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.AlphaCompTypes Out = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.AlphaCompTypes Atop = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.AlphaCompTypes Xor = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.AlphaCompTypes Plus = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.AlphaCompTypes OverPremul = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.AlphaCompTypes InPremul = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.AlphaCompTypes OutPremul = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.AlphaCompTypes AtopPremul = 9 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.AlphaCompTypes XorPremul = 10 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.AlphaCompTypes PlusPremul = 11 : Public, Static, Literal, HasDefault
    Emgu.CV.Cuda.AlphaCompTypes Premul = 12 : Public, Static, Literal, HasDefault
Class Emgu.CV.Cuda.CudaTemplateMatching: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.CvEnum.DepthType, Int32, Emgu.CV.CvEnum.TemplateMatchingType, System.Drawing.Size): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Match(IInputArray, IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaBackgroundSubtractorFGD: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Boolean, Int32, Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Apply(IInputArray, IOutputArray, Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaBackgroundSubtractorGMG: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Apply(IInputArray, IOutputArray, Double(Optional, HasDefault), Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaCascadeClassifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.FileStorage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double ScaleFactor 'get set' : 
    Int32 MinNeighbors 'get set' : 
    Int32 MaxNumObjects 'get set' : 
    Boolean FindLargestObject 'get set' : 
    System.Drawing.Size MaxObjectSize 'get set' : 
    System.Drawing.Size MinObjectSize 'get set' : 
    System.Drawing.Size ClassifierSize 'get ' : 
  Methods:
    DetectMultiScale(IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Convert(IOutputArray): PrivateScope, Public, HideBySig
    get_ScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MinNeighbors(): PrivateScope, Public, HideBySig, SpecialName
    set_MinNeighbors(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxNumObjects(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxNumObjects(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FindLargestObject(): PrivateScope, Public, HideBySig, SpecialName
    set_FindLargestObject(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MaxObjectSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxObjectSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_MinObjectSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MinObjectSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_ClassifierSize(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Cuda.CudaHOG: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Drawing.Size, System.Drawing.Size, System.Drawing.Size, System.Drawing.Size, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean GammaCorrection 'get set' : 
    Double WinSigma 'get set' : 
    Int32 NumLevels 'get set' : 
    Int32 GroupThreshold 'get set' : 
    Double HitThreshold 'get set' : 
    Double ScaleFactor 'get set' : 
    Double L2HysThreshold 'get set' : 
    DescrFormat DescriptorFormat 'get ' : 
    IntPtr DescriptorSize 'get ' : 
    System.Drawing.Size WinStride 'get set' : 
    IntPtr BlockHistogramSize 'get ' : 
  Methods:
    GetDefaultPeopleDetector(): PrivateScope, Public, HideBySig
    SetSVMDetector(IInputArray): PrivateScope, Public, HideBySig
    DetectMultiScale(IInputArray): PrivateScope, Public, HideBySig
    DetectMultiScale(IInputArray, VectorOfRect, VectorOfDouble(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_GammaCorrection(): PrivateScope, Public, HideBySig, SpecialName
    set_GammaCorrection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WinSigma(): PrivateScope, Public, HideBySig, SpecialName
    set_WinSigma(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NumLevels(): PrivateScope, Public, HideBySig, SpecialName
    set_NumLevels(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_GroupThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_GroupThreshold(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_HitThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_HitThreshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_L2HysThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_L2HysThreshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DescriptorFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_DescriptorSize(): PrivateScope, Public, HideBySig, SpecialName
    get_WinStride(): PrivateScope, Public, HideBySig, SpecialName
    set_WinStride(Size): PrivateScope, Public, HideBySig, SpecialName
    get_BlockHistogramSize(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Cuda.CudaHOG+DescrFormat: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DescrFormat RowByRow = 0 : Public, Static, Literal, HasDefault
    DescrFormat ColByCol = 1 : Public, Static, Literal, HasDefault
Interface Emgu.CV.Cuda.ICudaDenseOpticalFlow: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    IntPtr DenseOpticalFlowPtr 'get ' : 
  Methods:
    get_DenseOpticalFlowPtr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.Cuda.CudaBroxOpticalFlow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Double, Double, Double, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Cuda.ICudaDenseOpticalFlow
Class Emgu.CV.Cuda.CudaDensePyrLKOpticalFlow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Drawing.Size, Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Cuda.ICudaDenseOpticalFlow
Class Emgu.CV.Cuda.CudaFarnebackOpticalFlow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Double, Boolean, Int32, Int32, Int32, Double, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Cuda.ICudaDenseOpticalFlow
Class Emgu.CV.Cuda.CudaOpticalFlowDualTvl1: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Double, Double, Double, Int32, Int32, Double, Int32, Double, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Cuda.ICudaDenseOpticalFlow
Interface Emgu.CV.Cuda.ICudaSparseOpticalFlow: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    IntPtr SparseOpticalFlowPtr 'get ' : 
  Methods:
    get_SparseOpticalFlowPtr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.Cuda.CudaSparsePyrLKOpticalFlow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Drawing.Size, Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Cuda.ICudaSparseOpticalFlow
Class Emgu.CV.Cuda.CudaDisparityBilateralFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Apply(IInputArray, IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaStereoBM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FindStereoCorrespondence(IInputArray, IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.CudaStereoConstantSpaceBP: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FindStereoCorrespondence(IInputArray, IInputArray, IOutputArray, Stream(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Cuda.Stream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Completed 'get ' : 
  Methods:
    WaitForCompletion(): PrivateScope, Public, HideBySig
    get_Completed(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Cuda.TargetArchs: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    BuildWith(GpuFeature): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    Has(Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    HasPtx(Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    HasBin(Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    HasEqualOrLessPtx(Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    HasEqualOrGreater(Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    HasEqualOrGreaterPtx(Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    HasEqualOrGreaterBin(Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class Emgu.CV.Cuda.VectorOfGpuMat: AutoLayout, AnsiClass, Class, Public
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Cuda.GpuMat[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
  Properties:
    Int32 Size 'get ' : 
    Emgu.CV.Cuda.GpuMat Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Push(GpuMat): PrivateScope, Public, HideBySig
    Push(GpuMat[]): PrivateScope, Public, HideBySig
    Push(VectorOfGpuMat): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Aruco.ArucoInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    DrawMarker(Dictionary, Int32, Int32, IOutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DetectMarkers(IInputArray, Dictionary, IOutputArrayOfArrays, IOutputArray, DetectorParameters, IOutputArrayOfArrays(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DrawAxis(IInputOutputArray, IInputArray, IInputArray, IInputArray, IInputArray, Single): PrivateScope, Public, Static, HideBySig
    EstimatePoseSingleMarkers(IInputArrayOfArrays, Single, IInputArray, IInputArray, IOutputArrayOfArrays, IOutputArrayOfArrays): PrivateScope, Public, Static, HideBySig
    RefineDetectedMarkers(IInputArray, IBoard, IInputOutputArray, IInputOutputArray, IInputOutputArray, IInputArray, IInputArray, Single, Single, Boolean, IOutputArray, DetectorParameters): PrivateScope, Public, Static, HideBySig
    DrawDetectedMarkers(IInputOutputArray, IInputArray, IInputArray, MCvScalar): PrivateScope, Public, Static, HideBySig
    CalibrateCameraAruco(IInputArray, IInputArray, IInputArray, IBoard, Size, IInputOutputArray, IInputOutputArray, IOutputArray, IOutputArray, CalibType, MCvTermCriteria): PrivateScope, Public, Static, HideBySig
Struct Emgu.CV.Aruco.DetectorParameters: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 AdaptiveThreshWinSizeMin : Public
    Int32 AdaptiveThreshWinSizeMax : Public
    Int32 AdaptiveThreshWinSizeStep : Public
    Double AdaptiveThreshConstant : Public
    Double MinMarkerPerimeterRate : Public
    Double MaxMarkerPerimeterRate : Public
    Double PolygonalApproxAccuracyRate : Public
    Double MinCornerDistanceRate : Public
    Int32 MinDistanceToBorder : Public
    Double MinMarkerDistanceRate : Public
    Boolean DoCornerRefinement : Public
    Int32 CornerRefinementWinSize : Public
    Int32 CornerRefinementMaxIterations : Public
    Double CornerRefinementMinAccuracy : Public
    Int32 MarkerBorderBits : Public
    Int32 PerspectiveRemovePixelPerCell : Public
    Double PerspectiveRemoveIgnoredMarginPerCell : Public
    Double MaxErroneousBitsInBorderRate : Public
    Double MinOtsuStdDev : Public
    Double ErrorCorrectionRate : Public
  Methods:
    GetDefault(): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.Aruco.Dictionary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(PredefinedDictionaryName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Emgu.CV.Aruco.Dictionary+PredefinedDictionaryName: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    PredefinedDictionaryName Dict4X4_50 = 0 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict4X4_100 = 1 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict4X4_250 = 2 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict4X4_1000 = 3 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict5X5_50 = 4 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict5X5_100 = 5 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict5X5_250 = 6 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict5X5_1000 = 7 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict6X6_50 = 8 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict6X6_100 = 9 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict6X6_250 = 10 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict6X6_1000 = 11 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict7X7_50 = 12 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict7X7_100 = 13 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict7X7_250 = 14 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName Dict7X7_1000 = 15 : Public, Static, Literal, HasDefault
    PredefinedDictionaryName DictArucoOriginal = 16 : Public, Static, Literal, HasDefault
Interface Emgu.CV.Aruco.IBoard: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    IntPtr BoardPtr 'get ' : 
  Methods:
    get_BoardPtr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.Aruco.GridBoard: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Single, Single, Emgu.CV.Aruco.Dictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Aruco.IBoard
  Properties:
    IntPtr BoardPtr 'get ' : 
  Methods:
    Draw(Size, IOutputArray, Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_BoardPtr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.Aruco.CharucoBoard: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Single, Single, Emgu.CV.Aruco.Dictionary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.Aruco.IBoard
  Properties:
    IntPtr BoardPtr 'get ' : 
  Methods:
    Draw(Size, IOutputArray, Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_BoardPtr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.BgSegm.BackgroundSubtractorGMG: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.VideoSurveillance.BackgroundSubtractor
    Void .ctor(Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.ContribInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
Class Emgu.CV.BgSegm.BackgroundSubtractorMOG: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.VideoSurveillance.BackgroundSubtractor
    Void .ctor(Int32, Int32, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Dnn.Blob: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.IInputArray, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Dims 'get ' : 
    Int32 Channels 'get ' : 
    Int32 Cols 'get ' : 
    Int32 Num  'get ' : 
    Int32 Rows 'get ' : 
  Methods:
    MatRef(): PrivateScope, Public, HideBySig
    get_Dims(): PrivateScope, Public, HideBySig, SpecialName
    get_Channels(): PrivateScope, Public, HideBySig, SpecialName
    get_Cols(): PrivateScope, Public, HideBySig, SpecialName
    get_Num(): PrivateScope, Public, HideBySig, SpecialName
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Dnn.DnnInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    InitModule(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    DnnInitModule(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class Emgu.CV.Dnn.Importer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Methods:
    CreateCaffeImporter(String, String): PrivateScope, Public, Static, HideBySig
    PopulateNet(Net): PrivateScope, Public, HideBySig
Class Emgu.CV.Dnn.Net: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetBlob(String, Blob): PrivateScope, Public, HideBySig
    GetBlob(String): PrivateScope, Public, HideBySig
    Forward(): PrivateScope, Public, HideBySig
Class Emgu.CV.Face.FaceRecognizer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Methods:
    Train(IInputArray, IInputArray): PrivateScope, Public, HideBySig
    Train(Image`2[], Int32[]): PrivateScope, Public, HideBySig
    Predict(IInputArray): PrivateScope, Public, HideBySig
    Save(String): PrivateScope, Public, HideBySig
    Load(String): PrivateScope, Public, HideBySig
Struct Emgu.CV.Face.FaceRecognizer+PredictionResult: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Label : Public
    Double Distance : Public
Class Emgu.CV.Face.EigenFaceRecognizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Face.FaceRecognizer
    Void .ctor(Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Face.FisherFaceRecognizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Face.FaceRecognizer
    Void .ctor(Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Face.LBPHFaceRecognizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Face.FaceRecognizer
    Void .ctor(Int32, Int32, Int32, Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Update(IInputArray, IInputArray): PrivateScope, Public, HideBySig
    Update(Image`2[], Int32[]): PrivateScope, Public, HideBySig
Class Emgu.CV.Fuzzy.FuzzyInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    CreateKernel(IInputArray, IInputArray, IOutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateKernel(Function, Int32, IOutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Inpaint(Mat, Mat, Mat, Int32(Optional, HasDefault), Function(Optional, HasDefault), InpaintAlgorithm(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Filter(Mat, Mat, Mat): PrivateScope, Public, Static, HideBySig
Struct Emgu.CV.Fuzzy.FuzzyInvoke+Function: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Function Linear = 1 : Public, Static, Literal, HasDefault
    Function Sinus = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.Fuzzy.FuzzyInvoke+InpaintAlgorithm: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    InpaintAlgorithm OneStep = 1 : Public, Static, Literal, HasDefault
    InpaintAlgorithm MultiStep = 2 : Public, Static, Literal, HasDefault
    InpaintAlgorithm Iterative = 3 : Public, Static, Literal, HasDefault
Class Emgu.CV.LineDescriptor.BinaryDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Detect(Mat, VectorOfKeyLine, Mat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Compute(Mat, VectorOfKeyLine, Mat, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.LineDescriptor.LineDescriptorInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
Class Emgu.CV.LineDescriptor.LSDDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Detect(Mat, VectorOfKeyLine, Int32, Int32, Mat(Optional, HasDefault)): PrivateScope, Public, HideBySig
Struct Emgu.CV.LineDescriptor.MKeyLine: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single Angle : Public
    Int32 ClassId : Public
    Int32 Octave : Public
    System.Drawing.PointF Pt : Public
    Single Response : Public
    Single Size : Public
    Single StartPointX : Public
    Single StartPointY : Public
    Single EndPointX : Public
    Single EndPointY : Public
    Single SPointInOctaveX : Public
    Single SPointInOctaveY : Public
    Single EPointInOctaveX : Public
    Single EPointInOctaveY : Public
    Single LineLength : Public
    Int32 NumOfPixels : Public
Class Emgu.CV.LineDescriptor.VectorOfKeyLine: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.LineDescriptor.MKeyLine[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    Emgu.CV.LineDescriptor.MKeyLine Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(MKeyLine[]): PrivateScope, Public, HideBySig
    Push(VectorOfKeyLine): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Plot.Plot2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.Mat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Mat, Emgu.CV.Mat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Render(Mat): PrivateScope, Public, HideBySig
    SetPlotLineColor(MCvScalar): PrivateScope, Public, HideBySig
    SetPlotBackgroundColor(MCvScalar): PrivateScope, Public, HideBySig
    SetPlotAxisColor(MCvScalar): PrivateScope, Public, HideBySig
    SetPlotGridColor(MCvScalar): PrivateScope, Public, HideBySig
    SetPlotTextColor(MCvScalar): PrivateScope, Public, HideBySig
    SetPlotSize(Int32, Int32): PrivateScope, Public, HideBySig
    SetMinX(Double): PrivateScope, Public, HideBySig
    SetMinY(Double): PrivateScope, Public, HideBySig
    SetMaxX(Double): PrivateScope, Public, HideBySig
    SetMaxY(Double): PrivateScope, Public, HideBySig
    SetPlotLineWidth(Int32): PrivateScope, Public, HideBySig
Class Emgu.CV.Plot.PlotInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
Struct Emgu.CV.Text.MCvERStat: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Pixel : Public
    Int32 Level : Public
    Int32 Area : Public
    Int32 Perimeter : Public
    Int32 Euler : Public
    System.Drawing.Rectangle Rect : Public
    Double RawMoments0 : Public
    Double RawMoments1 : Public
    Double CentralMoments0 : Public
    Double CentralMoments1 : Public
    Double CentralMoments2 : Public
    IntPtr Crossings : Public
    Single MedCrossings : Public
    Single HoleAreaRatio : Public
    Single ConvexHullRatio : Public
    Single NumInflexionPoints : Public
    IntPtr Pixels : Public
    Double probability : Public
    IntPtr ParentPtr : Public
    IntPtr ChildPtr : Public
    IntPtr NextPtr : Public
    IntPtr PrevPtr : Public
    Byte LocalMaxima : Public
    IntPtr MaxProbabilityAncestor : Public
    IntPtr MinProbabilityAncestor : Public
  Methods:
    GetCenter(Int32): PrivateScope, Public, HideBySig
Class Emgu.CV.Text.ERFilter: AutoLayout, AnsiClass, Class, Public, Abstract
  :Emgu.Util.UnmanagedObject
  Methods:
    Run(IInputArray, VectorOfERStat): PrivateScope, Public, HideBySig
    ERGrouping(IInputArray, IInputArrayOfArrays, VectorOfERStat[], GroupingMethod(Optional, HasDefault), String(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Struct Emgu.CV.Text.ERFilter+GroupingMethod: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    GroupingMethod OrientationHoriz = 0 : Public, Static, Literal, HasDefault
    GroupingMethod OrientationAny = 1 : Public, Static, Literal, HasDefault
Class Emgu.CV.Text.ERFilterNM1: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Text.ERFilter
    Void .ctor(System.String, Int32, Single, Single, Single, Boolean, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Text.ERFilterNM2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Text.ERFilter
    Void .ctor(System.String, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Text.VectorOfERStat: AutoLayout, AnsiClass, Class, Public, Serializable
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Text.MCvERStat[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IInputOutputArray
    Emgu.CV.IInputArrayOfArrays
    Emgu.CV.IInputArray
    Emgu.CV.IOutputArrayOfArrays
    Emgu.CV.IOutputArray
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 Size 'get ' : 
    IntPtr StartAddress 'get ' : 
    Emgu.CV.Text.MCvERStat Item [Int32] 'get ' : 
    Int32 SizeOfItemInBytes 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Push(MCvERStat[]): PrivateScope, Public, HideBySig
    Push(VectorOfERStat): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_StartAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetInputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInputOutputArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SizeOfItemInBytes(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Tracking.MultiTracker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(Mat, Rectangle): PrivateScope, Public, HideBySig
    Add(String, Mat, Rectangle): PrivateScope, Public, HideBySig
    Update(Mat, VectorOfRect): PrivateScope, Public, HideBySig
Class Emgu.CV.Tracking.Tracker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Init(Mat, Rectangle): PrivateScope, Public, HideBySig
    Update(Mat, Rectangle&(Out)): PrivateScope, Public, HideBySig
Class Emgu.CV.XFeatures2D.BriefDescriptorExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.XFeatures2D.CudaSURF: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Single, Int32, Int32, Boolean, Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 DescriptorSize 'get ' : 
  Methods:
    DetectKeyPointsRaw(GpuMat, GpuMat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    DetectKeyPoints(GpuMat, GpuMat): PrivateScope, Public, HideBySig
    DownloadKeypoints(GpuMat, VectorOfKeyPoint): PrivateScope, Public, HideBySig
    UploadKeypoints(VectorOfKeyPoint, GpuMat): PrivateScope, Public, HideBySig
    ComputeDescriptorsRaw(GpuMat, GpuMat, GpuMat): PrivateScope, Public, HideBySig
    get_DescriptorSize(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.XFeatures2D.DAISY: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Single, Int32, Int32, Int32, NormalizationType, Emgu.CV.IInputArray, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Emgu.CV.XFeatures2D.DAISY+NormalizationType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NormalizationType None = 100 : Public, Static, Literal, HasDefault
    NormalizationType Partial = 101 : Public, Static, Literal, HasDefault
    NormalizationType Full = 102 : Public, Static, Literal, HasDefault
    NormalizationType SIFT = 103 : Public, Static, Literal, HasDefault
Class Emgu.CV.XFeatures2D.Freak: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Boolean, Boolean, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.XFeatures2D.LATCH: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Int32, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.XFeatures2D.LUCID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.XFeatures2D.SIFT: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Int32, Int32, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.XFeatures2D.SURF: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Double, Int32, Int32, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.XFeatures2D.StarDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Features2D.Feature2D
    Void .ctor(Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Ximgproc.DTFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.IInputArray, Double, Double, Mode, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Filter(IInputArray, IOutputArray, DepthType(Optional, HasDefault)): PrivateScope, Public, HideBySig
Struct Emgu.CV.Ximgproc.DTFilter+Mode: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mode NC = 0 : Public, Static, Literal, HasDefault
    Mode IC = 1 : Public, Static, Literal, HasDefault
    Mode RF = 2 : Public, Static, Literal, HasDefault
Class Emgu.CV.Ximgproc.XimgprocInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
Class Emgu.CV.Ximgproc.GraphSegmentation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Double, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ProcessImage(IInputArray, IOutputArray): PrivateScope, Public, HideBySig
Class Emgu.CV.Ximgproc.StructuredEdgeDetection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String, Emgu.CV.Ximgproc.RFFeatureGetter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    DetectEdges(Mat, Mat): PrivateScope, Public, HideBySig
Class Emgu.CV.Ximgproc.RFFeatureGetter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.Ximgproc.SuperpixelLSC: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.IInputArray, Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfSuperpixels 'get ' : 
  Methods:
    get_NumberOfSuperpixels(): PrivateScope, Public, HideBySig, SpecialName
    GetLabels(IOutputArray): PrivateScope, Public, HideBySig
    GetLabelContourMask(IOutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Iterate(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Ximgproc.SupperpixelSEEDS: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfSuperpixels 'get ' : 
  Methods:
    get_NumberOfSuperpixels(): PrivateScope, Public, HideBySig, SpecialName
    GetLabels(IOutputArray): PrivateScope, Public, HideBySig
    GetLabelContourMask(IOutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Iterate(IInputArray, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class Emgu.CV.Ximgproc.SupperpixelSLIC: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.IInputArray, Algorithm, Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfSuperpixels 'get ' : 
  Methods:
    get_NumberOfSuperpixels(): PrivateScope, Public, HideBySig, SpecialName
    GetLabels(IOutputArray): PrivateScope, Public, HideBySig
    GetLabelContourMask(IOutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Iterate(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
Struct Emgu.CV.Ximgproc.SupperpixelSLIC+Algorithm: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Algorithm SLIC = 100 : Public, Static, Literal, HasDefault
    Algorithm SLICO = 101 : Public, Static, Literal, HasDefault
Struct Emgu.CV.XImgproc.DtFilterType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.XImgproc.DtFilterType NC = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.XImgproc.DtFilterType IC = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.XImgproc.DtFilterType RF = 2 : Public, Static, Literal, HasDefault
Class Emgu.CV.XImgproc.XImgprocInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    JointBilateralFilter(IInputArray, IInputArray, IOutputArray, Int32, Double, Double, BorderType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FastGlobalSmootherFilter(IInputArray, IInputArray, IOutputArray, Double, Double, Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    AmFilter(IInputArray, IInputArray, IOutputArray, Double, Double, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GuidedFilter(IInputArray, IInputArray, IOutputArray, Int32, Double, DepthType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DtFilter(IInputArray, IInputArray, IOutputArray, Double, Double, DtFilterType, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    NiBlackThreshold(IInputArray, IOutputArray, Double, ThresholdType, Int32, Double): PrivateScope, Public, Static, HideBySig
    CovarianceEstimation(IInputArray, IOutputArray, Int32, Int32): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.XPhoto.XPhotoInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Methods:
    BalanceWhite(Mat, Mat, WhiteBalanceMethod, Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    AutowbGrayworld(IInputArray, IOutputArray, Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DctDenoising(Mat, Mat, Double, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Inpaint(Mat, Mat, Mat, InpaintType): PrivateScope, Public, Static, HideBySig
Struct Emgu.CV.XPhoto.XPhotoInvoke+InpaintType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    InpaintType Shiftmap = 0 : Public, Static, Literal, HasDefault
